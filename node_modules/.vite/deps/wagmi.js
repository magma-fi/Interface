import {
  AddChainError,
  ChainDoesNotSupportMulticallError,
  ChainMismatchError,
  ChainNotConfiguredError,
  Connector,
  ConnectorAlreadyConnectedError,
  ConnectorNotFoundError,
  Context,
  ContractMethodDoesNotExistError,
  ContractMethodNoResultError,
  ContractMethodRevertedError,
  ContractResultDecodeError,
  ProviderChainsNotFound,
  ProviderRpcError,
  ResourceUnavailableError,
  RpcError,
  SwitchChainError,
  SwitchChainNotSupportedError,
  UserRejectedRequestError,
  WagmiConfig,
  configureChains,
  createClient,
  createStorage,
  deepEqual,
  deserialize,
  erc20ABI,
  erc4626ABI,
  erc721ABI,
  paginatedIndexesConfig,
  readContracts,
  serialize,
  useAccount,
  useBalance,
  useBlockNumber,
  useChainId,
  useClient,
  useConnect,
  useContract,
  useContractEvent,
  useContractInfiniteReads,
  useContractRead,
  useContractReads,
  useContractWrite,
  useDisconnect,
  useEnsAddress,
  useEnsAvatar,
  useEnsName,
  useEnsResolver,
  useFeeData,
  useInfiniteQuery,
  useMutation,
  useNetwork,
  usePrepareContractWrite,
  usePrepareSendTransaction,
  useProvider,
  useQuery,
  useQueryClient2,
  useSendTransaction,
  useSignMessage,
  useSignTypedData,
  useSigner,
  useSwitchNetwork,
  useToken,
  useTransaction,
  useWaitForTransaction,
  useWatchPendingTransactions,
  useWebSocketProvider
} from "./chunk-P63UPP2K.js";
import {
  goerli,
  mainnet,
  sepolia
} from "./chunk-CRSNVFQN.js";
import "./chunk-REC2OQEM.js";
import "./chunk-YWBGZ5UC.js";
import "./chunk-CMU2ARS3.js";
import "./chunk-7F3IPCMU.js";
import "./chunk-5IOYYMYR.js";
import "./chunk-ZWLQA6XW.js";
import "./chunk-7IGKFX3U.js";
import "./chunk-T52DPOSF.js";
import "./chunk-XHZS53IJ.js";
import "./chunk-OJOX7W3C.js";
import "./chunk-PAMYMUU6.js";
import "./chunk-D4XBSYTF.js";
import "./chunk-OEYWMA6Q.js";
import "./chunk-NX6UMJZK.js";
import "./chunk-PPBSEKDQ.js";
import "./chunk-HWCAXKAJ.js";
import "./chunk-WJIB2CDQ.js";
import "./chunk-5OUNQ6TZ.js";
import "./chunk-YV7UKSM3.js";
import "./chunk-5AVNCSA7.js";
import "./chunk-GMRHNXBP.js";
import "./chunk-ILADNUF6.js";
import "./chunk-W7S2ME4R.js";
export {
  AddChainError,
  ChainDoesNotSupportMulticallError,
  ChainMismatchError,
  ChainNotConfiguredError,
  Connector,
  ConnectorAlreadyConnectedError,
  ConnectorNotFoundError,
  Context,
  ContractMethodDoesNotExistError,
  ContractMethodNoResultError,
  ContractMethodRevertedError,
  ContractResultDecodeError,
  ProviderChainsNotFound,
  ProviderRpcError,
  ResourceUnavailableError,
  RpcError,
  SwitchChainError,
  SwitchChainNotSupportedError,
  UserRejectedRequestError,
  WagmiConfig,
  configureChains,
  createClient,
  createStorage,
  deepEqual,
  deserialize,
  erc20ABI,
  erc4626ABI,
  erc721ABI,
  goerli,
  mainnet,
  paginatedIndexesConfig,
  readContracts,
  sepolia,
  serialize,
  useAccount,
  useBalance,
  useBlockNumber,
  useChainId,
  useClient,
  useConnect,
  useContract,
  useContractEvent,
  useContractInfiniteReads,
  useContractRead,
  useContractReads,
  useContractWrite,
  useDisconnect,
  useEnsAddress,
  useEnsAvatar,
  useEnsName,
  useEnsResolver,
  useFeeData,
  useInfiniteQuery,
  useMutation,
  useNetwork,
  usePrepareContractWrite,
  usePrepareSendTransaction,
  useProvider,
  useQuery,
  useQueryClient2 as useQueryClient,
  useSendTransaction,
  useSignMessage,
  useSignTypedData,
  useSigner,
  useSwitchNetwork,
  useToken,
  useTransaction,
  useWaitForTransaction,
  useWatchPendingTransactions,
  useWebSocketProvider
};
//# sourceMappingURL=wagmi.js.map
