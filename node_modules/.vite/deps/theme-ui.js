import {
  __internalGetUseRootStyles,
  css,
  get,
  index_esm_default
} from "./chunk-6DHFF5PD.js";
import {
  init_is_prop_valid_browser_esm,
  is_prop_valid_browser_esm_default
} from "./chunk-53NNTC73.js";
import {
  Global,
  jsx,
  keyframes
} from "./chunk-SYS3K25I.js";
import {
  ThemeContext,
  getRegisteredStyles,
  insertStyles,
  registerStyles,
  serializeStyles,
  useInsertionEffectAlwaysWithSyncFallback,
  withEmotionCache
} from "./chunk-2GZU5K6Q.js";
import {
  _extends
} from "./chunk-T2X254TB.js";
import {
  memoize
} from "./chunk-CZ2PHAAJ.js";
import "./chunk-D7WXGABN.js";
import "./chunk-Q5G3Z64M.js";
import {
  require_object_assign,
  require_react
} from "./chunk-PAMYMUU6.js";
import {
  __commonJS,
  __toESM
} from "./chunk-W7S2ME4R.js";

// ../../node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "../../node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject2 = function isMergeableObject3(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
    }
    var canUseSymbol2 = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol2 ? Symbol.for("react.element") : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge2(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge2;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge2;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return Object.propertyIsEnumerable.call(target, symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }
      getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        }
      });
      return destination;
    }
    function deepmerge2(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject2;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge2.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge2(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge2;
    module.exports = deepmerge_1;
  }
});

// ../../node_modules/@theme-ui/core/dist/index.esm.js
var import_react2 = __toESM(require_react());
var import_deepmerge = __toESM(require_cjs());

// ../../node_modules/@emotion/react/package.json
var package_default = {
  name: "@emotion/react",
  version: "11.11.1",
  main: "dist/emotion-react.cjs.js",
  module: "dist/emotion-react.esm.js",
  browser: {
    "./dist/emotion-react.esm.js": "./dist/emotion-react.browser.esm.js"
  },
  exports: {
    ".": {
      module: {
        worker: "./dist/emotion-react.worker.esm.js",
        browser: "./dist/emotion-react.browser.esm.js",
        default: "./dist/emotion-react.esm.js"
      },
      import: "./dist/emotion-react.cjs.mjs",
      default: "./dist/emotion-react.cjs.js"
    },
    "./jsx-runtime": {
      module: {
        worker: "./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js",
        browser: "./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js",
        default: "./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js"
      },
      import: "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs",
      default: "./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js"
    },
    "./_isolated-hnrs": {
      module: {
        worker: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js",
        browser: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js",
        default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js"
      },
      import: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs",
      default: "./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js"
    },
    "./jsx-dev-runtime": {
      module: {
        worker: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js",
        browser: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js",
        default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js"
      },
      import: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs",
      default: "./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js"
    },
    "./package.json": "./package.json",
    "./types/css-prop": "./types/css-prop.d.ts",
    "./macro": {
      types: {
        import: "./macro.d.mts",
        default: "./macro.d.ts"
      },
      default: "./macro.js"
    }
  },
  types: "types/index.d.ts",
  files: [
    "src",
    "dist",
    "jsx-runtime",
    "jsx-dev-runtime",
    "_isolated-hnrs",
    "types/*.d.ts",
    "macro.*"
  ],
  sideEffects: false,
  author: "Emotion Contributors",
  license: "MIT",
  scripts: {
    "test:typescript": "dtslint types"
  },
  dependencies: {
    "@babel/runtime": "^7.18.3",
    "@emotion/babel-plugin": "^11.11.0",
    "@emotion/cache": "^11.11.0",
    "@emotion/serialize": "^1.1.2",
    "@emotion/use-insertion-effect-with-fallbacks": "^1.0.1",
    "@emotion/utils": "^1.2.1",
    "@emotion/weak-memoize": "^0.3.1",
    "hoist-non-react-statics": "^3.3.1"
  },
  peerDependencies: {
    react: ">=16.8.0"
  },
  peerDependenciesMeta: {
    "@types/react": {
      optional: true
    }
  },
  devDependencies: {
    "@definitelytyped/dtslint": "0.0.112",
    "@emotion/css": "11.11.0",
    "@emotion/css-prettifier": "1.1.3",
    "@emotion/server": "11.11.0",
    "@emotion/styled": "11.11.0",
    "html-tag-names": "^1.1.2",
    react: "16.14.0",
    "svg-tag-names": "^1.1.1",
    typescript: "^4.5.5"
  },
  repository: "https://github.com/emotion-js/emotion/tree/main/packages/react",
  publishConfig: {
    access: "public"
  },
  "umd:main": "dist/emotion-react.umd.min.js",
  preconstruct: {
    entrypoints: [
      "./index.js",
      "./jsx-runtime.js",
      "./jsx-dev-runtime.js",
      "./_isolated-hnrs.js"
    ],
    umdName: "emotionReact",
    exports: {
      envConditions: [
        "browser",
        "worker"
      ],
      extra: {
        "./types/css-prop": "./types/css-prop.d.ts",
        "./macro": {
          types: {
            import: "./macro.d.mts",
            default: "./macro.d.ts"
          },
          default: "./macro.js"
        }
      }
    }
  }
};

// ../../node_modules/@theme-ui/core/dist/index.esm.js
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var __EMOTION_VERSION__ = package_default.version;
var jsx2 = function jsx3(type, props2) {
  return jsx.apply(void 0, [type, index_esm_default(props2)].concat([].slice.call(arguments, 2)));
};
var Context = (0, import_react2.createContext)({
  __EMOTION_VERSION__,
  theme: {}
});
var useThemeUI = function useThemeUI2() {
  return (0, import_react2.useContext)(Context);
};
var canUseSymbol = typeof Symbol === "function" && Symbol["for"];
var REACT_ELEMENT = canUseSymbol ? Symbol["for"]("react.element") : 60103;
var FORWARD_REF = canUseSymbol ? Symbol["for"]("react.forward_ref") : 60103;
var deepmergeOptions = {
  isMergeableObject: function isMergeableObject(n) {
    return !!n && typeof n === "object" && n.$$typeof !== REACT_ELEMENT && n.$$typeof !== FORWARD_REF;
  },
  arrayMerge: function arrayMerge(_leftArray, rightArray) {
    return rightArray;
  }
};
var merge = function merge2(a, b) {
  return (0, import_deepmerge.default)(a, b, deepmergeOptions);
};
function mergeAll() {
  return import_deepmerge.default.all([].slice.call(arguments), deepmergeOptions);
}
merge.all = mergeAll;
var BaseProvider = function BaseProvider2(_ref) {
  var context = _ref.context, children = _ref.children;
  return jsx2(ThemeContext.Provider, {
    value: context.theme
  }, jsx2(Context.Provider, {
    value: context,
    children
  }));
};
function ThemeProvider(_ref2) {
  var theme = _ref2.theme, children = _ref2.children;
  var outer = useThemeUI();
  if (true) {
    if (outer.__EMOTION_VERSION__ !== __EMOTION_VERSION__) {
      console.warn("Multiple versions of Emotion detected,", "and theming might not work as expected.", "Please ensure there is only one copy of @emotion/react installed in your application.");
    }
  }
  var context = typeof theme === "function" ? _extends2({}, outer, {
    theme: theme(outer.theme)
  }) : merge.all({}, outer, {
    theme
  });
  return jsx2(BaseProvider, {
    context
  }, children);
}

// ../../node_modules/@theme-ui/color-modes/dist/index.esm.js
var import_react3 = __toESM(require_react());
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var stripKeyDefault = function stripKeyDefault2(key) {
  return key.replace("-__default", "");
};
var toVarName = function toVarName2(key) {
  return "--theme-ui-" + stripKeyDefault(key);
};
var toVarValue = function toVarValue2(key, value) {
  return "var(" + toVarName(key) + ", " + value + ")";
};
var join = function join2() {
  return [].slice.call(arguments).filter(Boolean).join("-");
};
var numberScales = {
  fontWeights: true,
  lineHeights: true
};
var reservedKeys = {
  useCustomProperties: true,
  initialColorModeName: true,
  printColorModeName: true,
  initialColorMode: true,
  useLocalStorage: true
};
var toPixel = function toPixel2(key, value) {
  if (typeof value !== "number")
    return value;
  if (numberScales[key])
    return value;
  return value + "px";
};
var toCustomProperties = function toCustomProperties2(obj, parent, themeKey) {
  var next = Array.isArray(obj) ? [] : {};
  for (var key in obj) {
    var value = obj[key];
    var name = join(parent, key);
    if (value && typeof value === "object") {
      next[key] = toCustomProperties2(value, name, key);
      continue;
    }
    if (reservedKeys[key]) {
      next[key] = value;
      continue;
    }
    var val = toPixel(themeKey || key, value);
    next[key] = toVarValue(name, val);
  }
  return next;
};
var objectToVars = function objectToVars2(parent, obj) {
  var vars = {};
  for (var key in obj) {
    if (key === "modes")
      continue;
    var name = join(parent, key);
    var value = obj[key];
    if (value && typeof value === "object") {
      vars = _extends3({}, vars, objectToVars2(name, value));
    } else {
      vars[toVarName(name)] = value;
    }
  }
  return vars;
};
var createColorStyles = function createColorStyles2(theme) {
  var _css2;
  if (theme === void 0) {
    theme = {};
  }
  var use = __internalGetUseRootStyles(theme);
  if (!theme.colors || use.rootStyles === false)
    return {};
  if (theme.useCustomProperties === false || !theme.colors.modes) {
    var _css;
    return css((_css = {}, _css[use.scope] = {
      color: "text",
      bg: "background"
    }, _css))(theme);
  }
  var _theme = theme, colors = _theme.colors, initialColorModeName = _theme.initialColorModeName, printColorModeName = _theme.printColorModeName;
  var modes = colors.modes || {};
  var styles = objectToVars("colors", colors);
  Object.keys(modes).forEach(function(mode2) {
    var key = "&.theme-ui-" + mode2;
    styles[key] = objectToVars("colors", modes[mode2]);
  });
  if (printColorModeName) {
    var mode = printColorModeName === "initial" || printColorModeName === initialColorModeName ? colors : modes[printColorModeName];
    styles["@media print"] = objectToVars("colors", mode);
  }
  var colorToVarValue = function colorToVarValue2(color2) {
    return toVarValue("colors-" + color2, get(theme, "colors." + color2));
  };
  return css((_css2 = {}, _css2[use.scope] = _extends3({}, styles, {
    color: colorToVarValue("text"),
    bg: colorToVarValue("background")
  }), _css2))(theme);
};
var STORAGE_KEY = "theme-ui-color-mode";
var storage = {
  get: function get2(init) {
    try {
      return window.localStorage.getItem(STORAGE_KEY) || init;
    } catch (e) {
      console.warn("localStorage is disabled and color mode might not work as expected.", "Please check your Site Settings.", e);
    }
  },
  set: function set(value) {
    try {
      window.localStorage.setItem(STORAGE_KEY, value);
    } catch (e) {
      console.warn("localStorage is disabled and color mode might not work as expected.", "Please check your Site Settings.", e);
    }
  }
};
var getPreferredColorScheme = function getPreferredColorScheme2() {
  if (typeof window !== "undefined" && window.matchMedia) {
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    if (window.matchMedia("(prefers-color-scheme: light)").matches) {
      return "light";
    }
  }
  return null;
};
var useColorModeState = function useColorModeState2(theme) {
  if (theme === void 0) {
    theme = {};
  }
  var _React$useState = import_react3.default.useState(function() {
    var preferredMode = theme.useColorSchemeMediaQuery !== false && getPreferredColorScheme();
    return preferredMode || theme.initialColorModeName || "default";
  }), mode = _React$useState[0], setMode = _React$useState[1];
  import_react3.default.useEffect(function() {
    var stored = theme.useLocalStorage !== false && storage.get();
    document.documentElement.classList.remove("theme-ui-" + stored);
    document.body.classList.remove("theme-ui-" + stored);
    if (stored && stored !== mode) {
      setMode(stored);
    }
  }, []);
  import_react3.default.useEffect(function() {
    if (mode && theme.useLocalStorage !== false) {
      storage.set(mode);
    }
  }, [mode]);
  if (true) {
    if (theme.colors && theme.colors.modes && theme.initialColorModeName && Object.keys(theme.colors.modes).indexOf(theme.initialColorModeName) > -1) {
      console.warn("The `initialColorModeName` value should be a unique name and cannot reference a key in `theme.colors.modes`.");
    }
  }
  return [mode, setMode];
};
function useColorMode() {
  var _useThemeUI = useThemeUI(), colorMode = _useThemeUI.colorMode, setColorMode = _useThemeUI.setColorMode;
  if (typeof setColorMode !== "function") {
    throw new Error("[useColorMode] requires the ColorModeProvider component");
  }
  return [colorMode, setColorMode];
}
var applyColorMode = function applyColorMode2(theme, mode) {
  if (!mode)
    return theme;
  var modes = get(theme, "colors.modes", {});
  return merge.all({}, theme, {
    colors: get(modes, mode, {})
  });
};
var BodyStyles = function BodyStyles2(_ref) {
  var theme = _ref.theme;
  return jsx2(Global, {
    styles: function styles() {
      return createColorStyles(theme);
    }
  });
};
var ColorModeProvider = function ColorModeProvider2(_ref2) {
  var children = _ref2.children;
  var outer = useThemeUI();
  var _useColorModeState = useColorModeState(outer.theme), colorMode = _useColorModeState[0], setColorMode = _useColorModeState[1];
  var theme = applyColorMode(outer.theme || {}, colorMode);
  var emotionTheme = _extends3({}, theme);
  if (theme.useCustomProperties !== false) {
    emotionTheme.colors = toCustomProperties(emotionTheme.colors, "colors");
  }
  var context = _extends3({}, outer, {
    theme,
    colorMode,
    setColorMode
  });
  return jsx2(ThemeContext.Provider, {
    value: emotionTheme
  }, jsx2(Context.Provider, {
    value: context
  }, jsx2(BodyStyles, {
    key: "color-mode",
    theme
  }), children));
};
var noflash = "(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.documentElement.classList.add('theme-ui-' + mode);\n  document.body.classList.add('theme-ui-' + mode);\n} catch (e) {} })();";
var InitializeColorMode = function InitializeColorMode2() {
  return jsx2("script", {
    key: "theme-ui-no-flash",
    dangerouslySetInnerHTML: {
      __html: noflash
    }
  });
};

// ../../node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js
var React2 = __toESM(require_react());

// ../../node_modules/@emotion/styled/node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
var isPropValid = memoize(
  function(prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
  }
  /* Z+1 */
);

// ../../node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js
var testOmitPropsOnStringTag = isPropValid;
var testOmitPropsOnComponent = function testOmitPropsOnComponent2(key) {
  return key !== "theme";
};
var getDefaultShouldForwardProp = function getDefaultShouldForwardProp2(tag) {
  return typeof tag === "string" && // 96 is one less than the char code
  // for "a" so this is checking that
  // it's a lowercase character
  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;
};
var composeShouldForwardProps = function composeShouldForwardProps2(tag, options, isReal) {
  var shouldForwardProp2;
  if (options) {
    var optionsShouldForwardProp = options.shouldForwardProp;
    shouldForwardProp2 = tag.__emotion_forwardProp && optionsShouldForwardProp ? function(propName) {
      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);
    } : optionsShouldForwardProp;
  }
  if (typeof shouldForwardProp2 !== "function" && isReal) {
    shouldForwardProp2 = tag.__emotion_forwardProp;
  }
  return shouldForwardProp2;
};
var ILLEGAL_ESCAPE_SEQUENCE_ERROR = `You have illegal escape sequence in your template literal, most likely inside content's property value.
Because you write your CSS inside a JavaScript string you actually have to do double escaping, so for example "content: '\\00d7';" should become "content: '\\\\00d7';".
You can read more about this here:
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences`;
var Insertion = function Insertion2(_ref) {
  var cache = _ref.cache, serialized = _ref.serialized, isStringTag = _ref.isStringTag;
  registerStyles(cache, serialized, isStringTag);
  useInsertionEffectAlwaysWithSyncFallback(function() {
    return insertStyles(cache, serialized, isStringTag);
  });
  return null;
};
var createStyled = function createStyled2(tag, options) {
  if (true) {
    if (tag === void 0) {
      throw new Error("You are trying to create a styled element with an undefined component.\nYou may have forgotten to import it.");
    }
  }
  var isReal = tag.__emotion_real === tag;
  var baseTag = isReal && tag.__emotion_base || tag;
  var identifierName;
  var targetClassName;
  if (options !== void 0) {
    identifierName = options.label;
    targetClassName = options.target;
  }
  var shouldForwardProp2 = composeShouldForwardProps(tag, options, isReal);
  var defaultShouldForwardProp = shouldForwardProp2 || getDefaultShouldForwardProp(baseTag);
  var shouldUseAs = !defaultShouldForwardProp("as");
  return function() {
    var args = arguments;
    var styles = isReal && tag.__emotion_styles !== void 0 ? tag.__emotion_styles.slice(0) : [];
    if (identifierName !== void 0) {
      styles.push("label:" + identifierName + ";");
    }
    if (args[0] == null || args[0].raw === void 0) {
      styles.push.apply(styles, args);
    } else {
      if (args[0][0] === void 0) {
        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
      }
      styles.push(args[0][0]);
      var len = args.length;
      var i = 1;
      for (; i < len; i++) {
        if (args[0][i] === void 0) {
          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);
        }
        styles.push(args[i], args[0][i]);
      }
    }
    var Styled = withEmotionCache(function(props2, cache, ref) {
      var FinalTag = shouldUseAs && props2.as || baseTag;
      var className = "";
      var classInterpolations = [];
      var mergedProps = props2;
      if (props2.theme == null) {
        mergedProps = {};
        for (var key in props2) {
          mergedProps[key] = props2[key];
        }
        mergedProps.theme = React2.useContext(ThemeContext);
      }
      if (typeof props2.className === "string") {
        className = getRegisteredStyles(cache.registered, classInterpolations, props2.className);
      } else if (props2.className != null) {
        className = props2.className + " ";
      }
      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);
      className += cache.key + "-" + serialized.name;
      if (targetClassName !== void 0) {
        className += " " + targetClassName;
      }
      var finalShouldForwardProp = shouldUseAs && shouldForwardProp2 === void 0 ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;
      var newProps = {};
      for (var _key in props2) {
        if (shouldUseAs && _key === "as")
          continue;
        if (
          // $FlowFixMe
          finalShouldForwardProp(_key)
        ) {
          newProps[_key] = props2[_key];
        }
      }
      newProps.className = className;
      newProps.ref = ref;
      return React2.createElement(React2.Fragment, null, React2.createElement(Insertion, {
        cache,
        serialized,
        isStringTag: typeof FinalTag === "string"
      }), React2.createElement(FinalTag, newProps));
    });
    Styled.displayName = identifierName !== void 0 ? identifierName : "Styled(" + (typeof baseTag === "string" ? baseTag : baseTag.displayName || baseTag.name || "Component") + ")";
    Styled.defaultProps = tag.defaultProps;
    Styled.__emotion_real = Styled;
    Styled.__emotion_base = baseTag;
    Styled.__emotion_styles = styles;
    Styled.__emotion_forwardProp = shouldForwardProp2;
    Object.defineProperty(Styled, "toString", {
      value: function value() {
        if (targetClassName === void 0 && true) {
          return "NO_COMPONENT_SELECTOR";
        }
        return "." + targetClassName;
      }
    });
    Styled.withComponent = function(nextTag, nextOptions) {
      return createStyled2(nextTag, _extends({}, options, nextOptions, {
        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)
      })).apply(void 0, styles);
    };
    return Styled;
  };
};

// ../../node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js
var import_react6 = __toESM(require_react());
var tags = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var newStyled = createStyled.bind();
tags.forEach(function(tagName) {
  newStyled[tagName] = newStyled(tagName);
});

// ../../node_modules/@mdx-js/react/dist/esm.js
var import_react8 = __toESM(require_react());
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
var isFunction = function isFunction2(obj) {
  return typeof obj === "function";
};
var MDXContext = import_react8.default.createContext({});
var useMDXComponents = function useMDXComponents2(components2) {
  var contextComponents = import_react8.default.useContext(MDXContext);
  var allComponents = contextComponents;
  if (components2) {
    allComponents = isFunction(components2) ? components2(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components2);
  }
  return allComponents;
};
var MDXProvider = function MDXProvider2(props2) {
  var allComponents = useMDXComponents(props2.components);
  return import_react8.default.createElement(MDXContext.Provider, {
    value: allComponents
  }, props2.children);
};
var DEFAULTS = {
  inlineCode: "code",
  wrapper: function wrapper(_ref) {
    var children = _ref.children;
    return import_react8.default.createElement(import_react8.default.Fragment, {}, children);
  }
};
var MDXCreateElement = import_react8.default.forwardRef(function(props2, ref) {
  var propComponents = props2.components, mdxType = props2.mdxType, originalType = props2.originalType, parentName = props2.parentName, etc = _objectWithoutProperties(props2, ["components", "mdxType", "originalType", "parentName"]);
  var components2 = useMDXComponents(propComponents);
  var type = mdxType;
  var Component = components2["".concat(parentName, ".").concat(type)] || components2[type] || DEFAULTS[type] || originalType;
  if (propComponents) {
    return import_react8.default.createElement(Component, _objectSpread2(_objectSpread2({
      ref
    }, etc), {}, {
      components: propComponents
    }));
  }
  return import_react8.default.createElement(Component, _objectSpread2({
    ref
  }, etc));
});
MDXCreateElement.displayName = "MDXCreateElement";

// ../../node_modules/@theme-ui/mdx/dist/index.esm.js
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var tags2 = [
  "p",
  "b",
  "i",
  "a",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "img",
  "pre",
  "code",
  "ol",
  "ul",
  "li",
  "blockquote",
  "hr",
  "em",
  "table",
  "tr",
  "th",
  "td",
  "em",
  "strong",
  "del",
  // mdx
  "inlineCode",
  "thematicBreak",
  // other
  "div",
  // theme-ui
  "root"
];
var aliases = {
  inlineCode: "code",
  thematicBreak: "hr",
  root: "div"
};
var isAlias = function isAlias2(x2) {
  return x2 in aliases;
};
var alias = function alias2(n) {
  return isAlias(n) ? aliases[n] : n;
};
var propOverrides = {
  th: {
    align: "textAlign"
  },
  td: {
    align: "textAlign"
  }
};
var themed = function themed2(key) {
  return function(_ref) {
    var theme = _ref.theme, rest = _objectWithoutPropertiesLoose2(_ref, ["theme"]);
    var propsStyle = propOverrides[key];
    var extraStyles = propsStyle ? Object.keys(rest).filter(function(prop) {
      return propsStyle[prop] !== void 0;
    }).reduce(function(acc, prop) {
      var _extends22;
      return _extends4({}, acc, (_extends22 = {}, _extends22[propsStyle[prop]] = rest[prop], _extends22));
    }, {}) : void 0;
    return css(_extends4({}, get(theme, "styles." + key), extraStyles))(theme);
  };
};
var Themed = newStyled("div")(themed("div"));
var components = {};
tags2.forEach(function(tag) {
  components[tag] = newStyled(alias(tag))(themed(tag));
  Themed[tag] = components[tag];
});
var createComponents = function createComponents2(comps) {
  var next = _extends4({}, components);
  var componentKeys = Object.keys(comps);
  componentKeys.forEach(function(key) {
    next[key] = newStyled(comps[key])(themed(key));
  });
  return next;
};
var MDXProvider3 = function MDXProvider4(_ref2) {
  var components2 = _ref2.components, children = _ref2.children;
  var outer = useMDXComponents();
  return jsx2(MDXProvider, {
    components: createComponents(_extends4({}, outer, components2)),
    children
  });
};

// ../../node_modules/@theme-ui/theme-provider/dist/index.esm.js
var RootStyles = function RootStyles2() {
  return jsx2(Global, {
    styles: function styles(emotionTheme) {
      var _css;
      var theme = emotionTheme;
      var use = __internalGetUseRootStyles(theme);
      if (use.rootStyles === false || theme.styles && !theme.styles.root) {
        return false;
      }
      var boxSizing = theme.useBorderBox === false ? void 0 : "border-box";
      return css((_css = {
        "*": {
          boxSizing
        }
      }, _css[use.scope] = {
        margin: 0,
        variant: "styles.root"
      }, _css))(theme);
    }
  });
};
var ThemeProvider2 = function ThemeProvider3(_ref) {
  var theme = _ref.theme, components2 = _ref.components, children = _ref.children;
  var outer = useThemeUI();
  if (typeof outer.setColorMode === "function") {
    return jsx2(ThemeProvider, {
      theme
    }, jsx2(MDXProvider3, {
      components: components2,
      children
    }));
  }
  return jsx2(ThemeProvider, {
    theme
  }, jsx2(ColorModeProvider, null, jsx2(RootStyles), jsx2(MDXProvider3, {
    components: components2,
    children
  })));
};

// ../../node_modules/@styled-system/should-forward-prop/node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js
function memoize2(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var emotion_memoize_browser_esm_default = memoize2;

// ../../node_modules/@styled-system/should-forward-prop/dist/index.esm.js
init_is_prop_valid_browser_esm();

// ../../node_modules/@styled-system/core/dist/index.esm.js
var import_object_assign = __toESM(require_object_assign());
var merge3 = function merge4(a, b) {
  var result = (0, import_object_assign.default)({}, a, b);
  for (var key in a) {
    var _assign;
    if (!a[key] || typeof b[key] !== "object")
      continue;
    (0, import_object_assign.default)(result, (_assign = {}, _assign[key] = (0, import_object_assign.default)(a[key], b[key]), _assign));
  }
  return result;
};
var sort = function sort2(obj) {
  var next = {};
  Object.keys(obj).sort(function(a, b) {
    return a.localeCompare(b, void 0, {
      numeric: true,
      sensitivity: "base"
    });
  }).forEach(function(key) {
    next[key] = obj[key];
  });
  return next;
};
var defaults = {
  breakpoints: [40, 52, 64].map(function(n) {
    return n + "em";
  })
};
var createMediaQuery = function createMediaQuery2(n) {
  return "@media screen and (min-width: " + n + ")";
};
var getValue = function getValue2(n, scale) {
  return get3(scale, n, n);
};
var get3 = function get4(obj, key, def, p, undef) {
  key = key && key.split ? key.split(".") : [key];
  for (p = 0; p < key.length; p++) {
    obj = obj ? obj[key[p]] : undef;
  }
  return obj === undef ? def : obj;
};
var createParser = function createParser2(config9) {
  var cache = {};
  var parse = function parse2(props2) {
    var styles = {};
    var shouldSort = false;
    var isCacheDisabled = props2.theme && props2.theme.disableStyledSystemCache;
    for (var key in props2) {
      if (!config9[key])
        continue;
      var sx3 = config9[key];
      var raw = props2[key];
      var scale = get3(props2.theme, sx3.scale, sx3.defaults);
      if (typeof raw === "object") {
        cache.breakpoints = !isCacheDisabled && cache.breakpoints || get3(props2.theme, "breakpoints", defaults.breakpoints);
        if (Array.isArray(raw)) {
          cache.media = !isCacheDisabled && cache.media || [null].concat(cache.breakpoints.map(createMediaQuery));
          styles = merge3(styles, parseResponsiveStyle(cache.media, sx3, scale, raw, props2));
          continue;
        }
        if (raw !== null) {
          styles = merge3(styles, parseResponsiveObject(cache.breakpoints, sx3, scale, raw, props2));
          shouldSort = true;
        }
        continue;
      }
      (0, import_object_assign.default)(styles, sx3(raw, scale, props2));
    }
    if (shouldSort) {
      styles = sort(styles);
    }
    return styles;
  };
  parse.config = config9;
  parse.propNames = Object.keys(config9);
  parse.cache = cache;
  var keys = Object.keys(config9).filter(function(k) {
    return k !== "config";
  });
  if (keys.length > 1) {
    keys.forEach(function(key) {
      var _createParser;
      parse[key] = createParser2((_createParser = {}, _createParser[key] = config9[key], _createParser));
    });
  }
  return parse;
};
var parseResponsiveStyle = function parseResponsiveStyle2(mediaQueries, sx3, scale, raw, _props) {
  var styles = {};
  raw.slice(0, mediaQueries.length).forEach(function(value, i) {
    var media = mediaQueries[i];
    var style = sx3(value, scale, _props);
    if (!media) {
      (0, import_object_assign.default)(styles, style);
    } else {
      var _assign2;
      (0, import_object_assign.default)(styles, (_assign2 = {}, _assign2[media] = (0, import_object_assign.default)({}, styles[media], style), _assign2));
    }
  });
  return styles;
};
var parseResponsiveObject = function parseResponsiveObject2(breakpoints, sx3, scale, raw, _props) {
  var styles = {};
  for (var key in raw) {
    var breakpoint = breakpoints[key];
    var value = raw[key];
    var style = sx3(value, scale, _props);
    if (!breakpoint) {
      (0, import_object_assign.default)(styles, style);
    } else {
      var _assign3;
      var media = createMediaQuery(breakpoint);
      (0, import_object_assign.default)(styles, (_assign3 = {}, _assign3[media] = (0, import_object_assign.default)({}, styles[media], style), _assign3));
    }
  }
  return styles;
};
var createStyleFunction = function createStyleFunction2(_ref) {
  var properties = _ref.properties, property = _ref.property, scale = _ref.scale, _ref$transform = _ref.transform, transform = _ref$transform === void 0 ? getValue : _ref$transform, defaultScale = _ref.defaultScale;
  properties = properties || [property];
  var sx3 = function sx4(value, scale2, _props) {
    var result = {};
    var n = transform(value, scale2, _props);
    if (n === null)
      return;
    properties.forEach(function(prop) {
      result[prop] = n;
    });
    return result;
  };
  sx3.scale = scale;
  sx3.defaults = defaultScale;
  return sx3;
};
var system = function system2(args) {
  if (args === void 0) {
    args = {};
  }
  var config9 = {};
  Object.keys(args).forEach(function(key) {
    var conf = args[key];
    if (conf === true) {
      config9[key] = createStyleFunction({
        property: key,
        scale: key
      });
      return;
    }
    if (typeof conf === "function") {
      config9[key] = conf;
      return;
    }
    config9[key] = createStyleFunction(conf);
  });
  var parser = createParser(config9);
  return parser;
};
var compose = function compose2() {
  var config9 = {};
  for (var _len = arguments.length, parsers = new Array(_len), _key = 0; _key < _len; _key++) {
    parsers[_key] = arguments[_key];
  }
  parsers.forEach(function(parser2) {
    if (!parser2 || !parser2.config)
      return;
    (0, import_object_assign.default)(config9, parser2.config);
  });
  var parser = createParser(config9);
  return parser;
};

// ../../node_modules/@styled-system/layout/dist/index.esm.js
var isNumber = function isNumber2(n) {
  return typeof n === "number" && !isNaN(n);
};
var getWidth = function getWidth2(n, scale) {
  return get3(scale, n, !isNumber(n) || n > 1 ? n : n * 100 + "%");
};
var config = {
  width: {
    property: "width",
    scale: "sizes",
    transform: getWidth
  },
  height: {
    property: "height",
    scale: "sizes"
  },
  minWidth: {
    property: "minWidth",
    scale: "sizes"
  },
  minHeight: {
    property: "minHeight",
    scale: "sizes"
  },
  maxWidth: {
    property: "maxWidth",
    scale: "sizes"
  },
  maxHeight: {
    property: "maxHeight",
    scale: "sizes"
  },
  size: {
    properties: ["width", "height"],
    scale: "sizes"
  },
  overflow: true,
  overflowX: true,
  overflowY: true,
  display: true,
  verticalAlign: true
};
var layout = system(config);
var index_esm_default2 = layout;

// ../../node_modules/@styled-system/color/dist/index.esm.js
var config2 = {
  color: {
    property: "color",
    scale: "colors"
  },
  backgroundColor: {
    property: "backgroundColor",
    scale: "colors"
  },
  opacity: true
};
config2.bg = config2.backgroundColor;
var color = system(config2);
var index_esm_default3 = color;

// ../../node_modules/@styled-system/typography/dist/index.esm.js
var defaults2 = {
  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]
};
var config3 = {
  fontFamily: {
    property: "fontFamily",
    scale: "fonts"
  },
  fontSize: {
    property: "fontSize",
    scale: "fontSizes",
    defaultScale: defaults2.fontSizes
  },
  fontWeight: {
    property: "fontWeight",
    scale: "fontWeights"
  },
  lineHeight: {
    property: "lineHeight",
    scale: "lineHeights"
  },
  letterSpacing: {
    property: "letterSpacing",
    scale: "letterSpacings"
  },
  textAlign: true,
  fontStyle: true
};
var typography = system(config3);
var index_esm_default4 = typography;

// ../../node_modules/@styled-system/flexbox/dist/index.esm.js
var config4 = {
  alignItems: true,
  alignContent: true,
  justifyItems: true,
  justifyContent: true,
  flexWrap: true,
  flexDirection: true,
  // item
  flex: true,
  flexGrow: true,
  flexShrink: true,
  flexBasis: true,
  justifySelf: true,
  alignSelf: true,
  order: true
};
var flexbox = system(config4);
var index_esm_default5 = flexbox;

// ../../node_modules/@styled-system/grid/dist/index.esm.js
var defaults3 = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]
};
var config5 = {
  gridGap: {
    property: "gridGap",
    scale: "space",
    defaultScale: defaults3.space
  },
  gridColumnGap: {
    property: "gridColumnGap",
    scale: "space",
    defaultScale: defaults3.space
  },
  gridRowGap: {
    property: "gridRowGap",
    scale: "space",
    defaultScale: defaults3.space
  },
  gridColumn: true,
  gridRow: true,
  gridAutoFlow: true,
  gridAutoColumns: true,
  gridAutoRows: true,
  gridTemplateColumns: true,
  gridTemplateRows: true,
  gridTemplateAreas: true,
  gridArea: true
};
var grid = system(config5);
var index_esm_default6 = grid;

// ../../node_modules/@styled-system/border/dist/index.esm.js
var config6 = {
  border: {
    property: "border",
    scale: "borders"
  },
  borderWidth: {
    property: "borderWidth",
    scale: "borderWidths"
  },
  borderStyle: {
    property: "borderStyle",
    scale: "borderStyles"
  },
  borderColor: {
    property: "borderColor",
    scale: "colors"
  },
  borderRadius: {
    property: "borderRadius",
    scale: "radii"
  },
  borderTop: {
    property: "borderTop",
    scale: "borders"
  },
  borderTopLeftRadius: {
    property: "borderTopLeftRadius",
    scale: "radii"
  },
  borderTopRightRadius: {
    property: "borderTopRightRadius",
    scale: "radii"
  },
  borderRight: {
    property: "borderRight",
    scale: "borders"
  },
  borderBottom: {
    property: "borderBottom",
    scale: "borders"
  },
  borderBottomLeftRadius: {
    property: "borderBottomLeftRadius",
    scale: "radii"
  },
  borderBottomRightRadius: {
    property: "borderBottomRightRadius",
    scale: "radii"
  },
  borderLeft: {
    property: "borderLeft",
    scale: "borders"
  },
  borderX: {
    properties: ["borderLeft", "borderRight"],
    scale: "borders"
  },
  borderY: {
    properties: ["borderTop", "borderBottom"],
    scale: "borders"
  }
};
config6.borderTopWidth = {
  property: "borderTopWidth",
  scale: "borderWidths"
};
config6.borderTopColor = {
  property: "borderTopColor",
  scale: "colors"
};
config6.borderTopStyle = {
  property: "borderTopStyle",
  scale: "borderStyles"
};
config6.borderTopLeftRadius = {
  property: "borderTopLeftRadius",
  scale: "radii"
};
config6.borderTopRightRadius = {
  property: "borderTopRightRadius",
  scale: "radii"
};
config6.borderBottomWidth = {
  property: "borderBottomWidth",
  scale: "borderWidths"
};
config6.borderBottomColor = {
  property: "borderBottomColor",
  scale: "colors"
};
config6.borderBottomStyle = {
  property: "borderBottomStyle",
  scale: "borderStyles"
};
config6.borderBottomLeftRadius = {
  property: "borderBottomLeftRadius",
  scale: "radii"
};
config6.borderBottomRightRadius = {
  property: "borderBottomRightRadius",
  scale: "radii"
};
config6.borderLeftWidth = {
  property: "borderLeftWidth",
  scale: "borderWidths"
};
config6.borderLeftColor = {
  property: "borderLeftColor",
  scale: "colors"
};
config6.borderLeftStyle = {
  property: "borderLeftStyle",
  scale: "borderStyles"
};
config6.borderRightWidth = {
  property: "borderRightWidth",
  scale: "borderWidths"
};
config6.borderRightColor = {
  property: "borderRightColor",
  scale: "colors"
};
config6.borderRightStyle = {
  property: "borderRightStyle",
  scale: "borderStyles"
};
var border = system(config6);
var index_esm_default7 = border;

// ../../node_modules/@styled-system/background/dist/index.esm.js
var config7 = {
  background: true,
  backgroundImage: true,
  backgroundSize: true,
  backgroundPosition: true,
  backgroundRepeat: true
};
config7.bgImage = config7.backgroundImage;
config7.bgSize = config7.backgroundSize;
config7.bgPosition = config7.backgroundPosition;
config7.bgRepeat = config7.backgroundRepeat;
var background = system(config7);
var index_esm_default8 = background;

// ../../node_modules/@styled-system/position/dist/index.esm.js
var defaults4 = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]
};
var config8 = {
  position: true,
  zIndex: {
    property: "zIndex",
    scale: "zIndices"
  },
  top: {
    property: "top",
    scale: "space",
    defaultScale: defaults4.space
  },
  right: {
    property: "right",
    scale: "space",
    defaultScale: defaults4.space
  },
  bottom: {
    property: "bottom",
    scale: "space",
    defaultScale: defaults4.space
  },
  left: {
    property: "left",
    scale: "space",
    defaultScale: defaults4.space
  }
};
var position = system(config8);
var index_esm_default9 = position;

// ../../node_modules/@styled-system/space/dist/index.esm.js
var defaults5 = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512]
};
var isNumber3 = function isNumber4(n) {
  return typeof n === "number" && !isNaN(n);
};
var getMargin = function getMargin2(n, scale) {
  if (!isNumber3(n)) {
    return get3(scale, n, n);
  }
  var isNegative = n < 0;
  var absolute = Math.abs(n);
  var value = get3(scale, absolute, absolute);
  if (!isNumber3(value)) {
    return isNegative ? "-" + value : value;
  }
  return value * (isNegative ? -1 : 1);
};
var configs = {};
configs.margin = {
  margin: {
    property: "margin",
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  },
  marginTop: {
    property: "marginTop",
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  },
  marginRight: {
    property: "marginRight",
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  },
  marginBottom: {
    property: "marginBottom",
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  },
  marginLeft: {
    property: "marginLeft",
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  },
  marginX: {
    properties: ["marginLeft", "marginRight"],
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  },
  marginY: {
    properties: ["marginTop", "marginBottom"],
    scale: "space",
    transform: getMargin,
    defaultScale: defaults5.space
  }
};
configs.margin.m = configs.margin.margin;
configs.margin.mt = configs.margin.marginTop;
configs.margin.mr = configs.margin.marginRight;
configs.margin.mb = configs.margin.marginBottom;
configs.margin.ml = configs.margin.marginLeft;
configs.margin.mx = configs.margin.marginX;
configs.margin.my = configs.margin.marginY;
configs.padding = {
  padding: {
    property: "padding",
    scale: "space",
    defaultScale: defaults5.space
  },
  paddingTop: {
    property: "paddingTop",
    scale: "space",
    defaultScale: defaults5.space
  },
  paddingRight: {
    property: "paddingRight",
    scale: "space",
    defaultScale: defaults5.space
  },
  paddingBottom: {
    property: "paddingBottom",
    scale: "space",
    defaultScale: defaults5.space
  },
  paddingLeft: {
    property: "paddingLeft",
    scale: "space",
    defaultScale: defaults5.space
  },
  paddingX: {
    properties: ["paddingLeft", "paddingRight"],
    scale: "space",
    defaultScale: defaults5.space
  },
  paddingY: {
    properties: ["paddingTop", "paddingBottom"],
    scale: "space",
    defaultScale: defaults5.space
  }
};
configs.padding.p = configs.padding.padding;
configs.padding.pt = configs.padding.paddingTop;
configs.padding.pr = configs.padding.paddingRight;
configs.padding.pb = configs.padding.paddingBottom;
configs.padding.pl = configs.padding.paddingLeft;
configs.padding.px = configs.padding.paddingX;
configs.padding.py = configs.padding.paddingY;
var margin = system(configs.margin);
var padding = system(configs.padding);
var space = compose(margin, padding);
var index_esm_default10 = space;

// ../../node_modules/@styled-system/shadow/dist/index.esm.js
var shadow = system({
  boxShadow: {
    property: "boxShadow",
    scale: "shadows"
  },
  textShadow: {
    property: "textShadow",
    scale: "shadows"
  }
});

// ../../node_modules/@styled-system/css/dist/index.esm.js
function _extends5() {
  _extends5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var get5 = function get6(obj, key, def, p, undef) {
  key = key && key.split ? key.split(".") : [key];
  for (p = 0; p < key.length; p++) {
    obj = obj ? obj[key[p]] : undef;
  }
  return obj === undef ? def : obj;
};
var defaultBreakpoints = [40, 52, 64].map(function(n) {
  return n + "em";
});
var defaultTheme = {
  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],
  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72]
};
var aliases2 = {
  bg: "backgroundColor",
  m: "margin",
  mt: "marginTop",
  mr: "marginRight",
  mb: "marginBottom",
  ml: "marginLeft",
  mx: "marginX",
  my: "marginY",
  p: "padding",
  pt: "paddingTop",
  pr: "paddingRight",
  pb: "paddingBottom",
  pl: "paddingLeft",
  px: "paddingX",
  py: "paddingY"
};
var multiples = {
  marginX: ["marginLeft", "marginRight"],
  marginY: ["marginTop", "marginBottom"],
  paddingX: ["paddingLeft", "paddingRight"],
  paddingY: ["paddingTop", "paddingBottom"],
  size: ["width", "height"]
};
var scales = {
  color: "colors",
  backgroundColor: "colors",
  borderColor: "colors",
  margin: "space",
  marginTop: "space",
  marginRight: "space",
  marginBottom: "space",
  marginLeft: "space",
  marginX: "space",
  marginY: "space",
  padding: "space",
  paddingTop: "space",
  paddingRight: "space",
  paddingBottom: "space",
  paddingLeft: "space",
  paddingX: "space",
  paddingY: "space",
  top: "space",
  right: "space",
  bottom: "space",
  left: "space",
  gridGap: "space",
  gridColumnGap: "space",
  gridRowGap: "space",
  gap: "space",
  columnGap: "space",
  rowGap: "space",
  fontFamily: "fonts",
  fontSize: "fontSizes",
  fontWeight: "fontWeights",
  lineHeight: "lineHeights",
  letterSpacing: "letterSpacings",
  border: "borders",
  borderTop: "borders",
  borderRight: "borders",
  borderBottom: "borders",
  borderLeft: "borders",
  borderWidth: "borderWidths",
  borderStyle: "borderStyles",
  borderRadius: "radii",
  borderTopRightRadius: "radii",
  borderTopLeftRadius: "radii",
  borderBottomRightRadius: "radii",
  borderBottomLeftRadius: "radii",
  borderTopWidth: "borderWidths",
  borderTopColor: "colors",
  borderTopStyle: "borderStyles",
  borderBottomWidth: "borderWidths",
  borderBottomColor: "colors",
  borderBottomStyle: "borderStyles",
  borderLeftWidth: "borderWidths",
  borderLeftColor: "colors",
  borderLeftStyle: "borderStyles",
  borderRightWidth: "borderWidths",
  borderRightColor: "colors",
  borderRightStyle: "borderStyles",
  outlineColor: "colors",
  boxShadow: "shadows",
  textShadow: "shadows",
  zIndex: "zIndices",
  width: "sizes",
  minWidth: "sizes",
  maxWidth: "sizes",
  height: "sizes",
  minHeight: "sizes",
  maxHeight: "sizes",
  flexBasis: "sizes",
  size: "sizes",
  // svg
  fill: "colors",
  stroke: "colors"
};
var positiveOrNegative = function positiveOrNegative2(scale, value) {
  if (typeof value !== "number" || value >= 0) {
    return get5(scale, value, value);
  }
  var absolute = Math.abs(value);
  var n = get5(scale, absolute, absolute);
  if (typeof n === "string")
    return "-" + n;
  return n * -1;
};
var transforms = ["margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "top", "bottom", "left", "right"].reduce(function(acc, curr) {
  var _extends22;
  return _extends5({}, acc, (_extends22 = {}, _extends22[curr] = positiveOrNegative, _extends22));
}, {});
var responsive = function responsive2(styles) {
  return function(theme) {
    var next = {};
    var breakpoints = get5(theme, "breakpoints", defaultBreakpoints);
    var mediaQueries = [null].concat(breakpoints.map(function(n) {
      return "@media screen and (min-width: " + n + ")";
    }));
    for (var key in styles) {
      var value = typeof styles[key] === "function" ? styles[key](theme) : styles[key];
      if (value == null)
        continue;
      if (!Array.isArray(value)) {
        next[key] = value;
        continue;
      }
      for (var i = 0; i < value.slice(0, mediaQueries.length).length; i++) {
        var media = mediaQueries[i];
        if (!media) {
          next[key] = value[i];
          continue;
        }
        next[media] = next[media] || {};
        if (value[i] == null)
          continue;
        next[media][key] = value[i];
      }
    }
    return next;
  };
};
var css2 = function css3(args) {
  return function(props2) {
    if (props2 === void 0) {
      props2 = {};
    }
    var theme = _extends5({}, defaultTheme, {}, props2.theme || props2);
    var result = {};
    var obj = typeof args === "function" ? args(theme) : args;
    var styles = responsive(obj)(theme);
    for (var key in styles) {
      var x2 = styles[key];
      var val = typeof x2 === "function" ? x2(theme) : x2;
      if (key === "variant") {
        var variant5 = css3(get5(theme, val))(theme);
        result = _extends5({}, result, {}, variant5);
        continue;
      }
      if (val && typeof val === "object") {
        result[key] = css3(val)(theme);
        continue;
      }
      var prop = get5(aliases2, key, key);
      var scaleName = get5(scales, prop);
      var scale = get5(theme, scaleName, get5(theme, prop, {}));
      var transform = get5(transforms, prop, get5);
      var value = transform(scale, val, val);
      if (multiples[prop]) {
        var dirs = multiples[prop];
        for (var i = 0; i < dirs.length; i++) {
          result[dirs[i]] = value;
        }
      } else {
        result[prop] = value;
      }
    }
    return result;
  };
};
var index_esm_default11 = css2;

// ../../node_modules/@styled-system/variant/dist/index.esm.js
var variant = function variant2(_ref) {
  var _config;
  var scale = _ref.scale, _ref$prop = _ref.prop, prop = _ref$prop === void 0 ? "variant" : _ref$prop, _ref$variants = _ref.variants, variants = _ref$variants === void 0 ? {} : _ref$variants, key = _ref.key;
  var sx3;
  if (Object.keys(variants).length) {
    sx3 = function sx4(value, scale2, props2) {
      return index_esm_default11(get3(scale2, value, null))(props2.theme);
    };
  } else {
    sx3 = function sx4(value, scale2) {
      return get3(scale2, value, null);
    };
  }
  sx3.scale = scale || key;
  sx3.defaults = variants;
  var config9 = (_config = {}, _config[prop] = sx3, _config);
  var parser = createParser(config9);
  return parser;
};
var buttonStyle = variant({
  key: "buttons"
});
var textStyle = variant({
  key: "textStyles",
  prop: "textStyle"
});
var colorStyle = variant({
  key: "colorStyles",
  prop: "colors"
});

// ../../node_modules/styled-system/dist/index.esm.js
var width = index_esm_default2.width;
var height = index_esm_default2.height;
var minWidth = index_esm_default2.minWidth;
var minHeight = index_esm_default2.minHeight;
var maxWidth = index_esm_default2.maxWidth;
var maxHeight = index_esm_default2.maxHeight;
var size = index_esm_default2.size;
var verticalAlign = index_esm_default2.verticalAlign;
var display = index_esm_default2.display;
var overflow = index_esm_default2.overflow;
var overflowX = index_esm_default2.overflowX;
var overflowY = index_esm_default2.overflowY;
var opacity = index_esm_default3.opacity;
var fontSize = index_esm_default4.fontSize;
var fontFamily = index_esm_default4.fontFamily;
var fontWeight = index_esm_default4.fontWeight;
var lineHeight = index_esm_default4.lineHeight;
var textAlign = index_esm_default4.textAlign;
var fontStyle = index_esm_default4.fontStyle;
var letterSpacing = index_esm_default4.letterSpacing;
var alignItems = index_esm_default5.alignItems;
var alignContent = index_esm_default5.alignContent;
var justifyItems = index_esm_default5.justifyItems;
var justifyContent = index_esm_default5.justifyContent;
var flexWrap = index_esm_default5.flexWrap;
var flexDirection = index_esm_default5.flexDirection;
var flex = index_esm_default5.flex;
var flexGrow = index_esm_default5.flexGrow;
var flexShrink = index_esm_default5.flexShrink;
var flexBasis = index_esm_default5.flexBasis;
var justifySelf = index_esm_default5.justifySelf;
var alignSelf = index_esm_default5.alignSelf;
var order = index_esm_default5.order;
var gridGap = index_esm_default6.gridGap;
var gridColumnGap = index_esm_default6.gridColumnGap;
var gridRowGap = index_esm_default6.gridRowGap;
var gridColumn = index_esm_default6.gridColumn;
var gridRow = index_esm_default6.gridRow;
var gridAutoFlow = index_esm_default6.gridAutoFlow;
var gridAutoColumns = index_esm_default6.gridAutoColumns;
var gridAutoRows = index_esm_default6.gridAutoRows;
var gridTemplateColumns = index_esm_default6.gridTemplateColumns;
var gridTemplateRows = index_esm_default6.gridTemplateRows;
var gridTemplateAreas = index_esm_default6.gridTemplateAreas;
var gridArea = index_esm_default6.gridArea;
var borderWidth = index_esm_default7.borderWidth;
var borderStyle = index_esm_default7.borderStyle;
var borderColor = index_esm_default7.borderColor;
var borderTop = index_esm_default7.borderTop;
var borderRight = index_esm_default7.borderRight;
var borderBottom = index_esm_default7.borderBottom;
var borderLeft = index_esm_default7.borderLeft;
var borderRadius = index_esm_default7.borderRadius;
var backgroundImage = index_esm_default8.backgroundImage;
var backgroundSize = index_esm_default8.backgroundSize;
var backgroundPosition = index_esm_default8.backgroundPosition;
var backgroundRepeat = index_esm_default8.backgroundRepeat;
var zIndex = index_esm_default9.zIndex;
var top = index_esm_default9.top;
var right = index_esm_default9.right;
var bottom = index_esm_default9.bottom;
var left = index_esm_default9.left;

// ../../node_modules/@styled-system/should-forward-prop/dist/index.esm.js
var all = compose(space, typography, color, layout, flexbox, border, background, position, grid, shadow, buttonStyle, textStyle, colorStyle);
var props = all.propNames;
var createShouldForwardProp = function createShouldForwardProp2(props2) {
  var regex = new RegExp("^(" + props2.join("|") + ")$");
  return emotion_memoize_browser_esm_default(function(prop) {
    return is_prop_valid_browser_esm_default(prop) && !regex.test(prop);
  });
};
var index_esm_default13 = createShouldForwardProp(props);

// ../../node_modules/@theme-ui/components/dist/index.esm.js
var import_react11 = __toESM(require_react());
var boxSystemProps = [].concat(index_esm_default10.propNames, index_esm_default3.propNames);
var __isBoxStyledSystemProp = function __isBoxStyledSystemProp2(prop) {
  return boxSystemProps.includes(prop);
};
var shouldForwardProp = createShouldForwardProp(boxSystemProps);
var sx = function sx2(props2) {
  return css(props2.sx)(props2.theme);
};
var base = function base2(props2) {
  return css(props2.__css)(props2.theme);
};
var variant3 = function variant4(_ref) {
  var theme = _ref.theme, variant5 = _ref.variant, _ref$__themeKey = _ref.__themeKey, __themeKey = _ref$__themeKey === void 0 ? "variants" : _ref$__themeKey;
  return css(get(theme, __themeKey + "." + variant5, get(theme, variant5)));
};
var Box = newStyled("div", {
  shouldForwardProp
})({
  boxSizing: "border-box",
  margin: 0,
  minWidth: 0
}, base, variant3, index_esm_default10, index_esm_default3, sx, function(props2) {
  return props2.css;
});
Box.displayName = "Box";
var Flex = newStyled(Box)({
  display: "flex"
});
Flex.displayName = "Flex";
function _extends6() {
  _extends6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var px = function px2(n) {
  return typeof n === "number" ? n + "px" : n;
};
var widthToColumns = function widthToColumns2(width2, repeat) {
  return Array.isArray(width2) ? width2.map(function(w) {
    return widthToColumns2(w, repeat);
  }) : !!width2 && "repeat(auto-" + repeat + ", minmax(" + px(width2) + ", 1fr))";
};
var countToColumns = function countToColumns2(n) {
  return Array.isArray(n) ? n.map(countToColumns2) : !!n && (typeof n === "number" ? "repeat(" + n + ", 1fr)" : n);
};
var Grid = import_react11.default.forwardRef(function Grid2(_ref, ref) {
  var width2 = _ref.width, columns = _ref.columns, _ref$gap = _ref.gap, gap = _ref$gap === void 0 ? 3 : _ref$gap, _ref$repeat = _ref.repeat, repeat = _ref$repeat === void 0 ? "fit" : _ref$repeat, props2 = _objectWithoutPropertiesLoose3(_ref, ["width", "columns", "gap", "repeat"]);
  var gridTemplateColumns2 = !!width2 ? widthToColumns(width2, repeat) : countToColumns(columns);
  return import_react11.default.createElement(Box, _extends6({
    ref
  }, props2, {
    __themeKey: "grids",
    __css: {
      display: "grid",
      gridGap: gap,
      gridTemplateColumns: gridTemplateColumns2
    }
  }));
});
var Button = import_react11.default.forwardRef(function Button2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "button",
    variant: "primary"
  }, props2, {
    __themeKey: "buttons",
    __css: {
      appearance: "none",
      display: props2.hidden ? void 0 : "inline-block",
      textAlign: "center",
      lineHeight: "inherit",
      textDecoration: "none",
      fontSize: "inherit",
      px: 3,
      py: 2,
      color: "white",
      bg: "primary",
      border: 0,
      borderRadius: 4
    }
  }));
});
var Link = import_react11.default.forwardRef(function Link2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "a",
    variant: "styles.a"
  }, props2, {
    __themeKey: "links"
  }));
});
var Paragraph = import_react11.default.forwardRef(function Paragraph2(_ref, ref) {
  var sx3 = _ref.sx, props2 = _objectWithoutPropertiesLoose3(_ref, ["sx"]);
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "p",
    variant: "paragraph"
  }, props2, {
    sx: _extends6({
      // reset margin by default: avoid relying on user-agent margins (not aware of theme-ui space scale)
      margin: 0,
      // set a max-width: avoid full-page paragraphs
      "@media screen and (min-width: 36em)": {
        maxWidth: "48rem"
      }
    }, sx3),
    __themeKey: "text",
    __css: {
      fontFamily: "body",
      fontWeight: "body",
      lineHeight: "body"
    }
  }));
});
var Text = import_react11.default.forwardRef(function Text2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    as: "span",
    ref,
    variant: "default"
  }, props2, {
    __themeKey: "text"
  }));
});
var Heading = import_react11.default.forwardRef(function Heading2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "h2",
    variant: "heading"
  }, props2, {
    __themeKey: "text",
    __css: {
      fontFamily: "heading",
      fontWeight: "heading",
      lineHeight: "heading"
    }
  }));
});
var Image = import_react11.default.forwardRef(function Image2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "img"
  }, props2, {
    __themeKey: "images",
    __css: _extends6({
      maxWidth: "100%",
      height: "auto"
    }, props2.__css)
  }));
});
var Card = import_react11.default.forwardRef(function Card2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    variant: "primary"
  }, props2, {
    __themeKey: "cards"
  }));
});
var Label = import_react11.default.forwardRef(function Label2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "label",
    variant: "label"
  }, props2, {
    __themeKey: "forms",
    __css: {
      width: "100%",
      display: "flex"
    }
  }));
});
var Input = import_react11.default.forwardRef(function Input2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "input",
    variant: "input"
  }, props2, {
    __themeKey: "forms",
    __css: {
      display: "block",
      width: "100%",
      p: 2,
      appearance: "none",
      fontSize: "inherit",
      lineHeight: "inherit",
      border: "1px solid",
      borderRadius: 4,
      color: "inherit",
      bg: "transparent"
    }
  }));
});
var SVG = function SVG2(_ref) {
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 24 : _ref$size, props2 = _objectWithoutPropertiesLoose3(_ref, ["size"]);
  return import_react11.default.createElement(Box, _extends6({
    as: "svg",
    xmlns: "http://www.w3.org/2000/svg",
    width: size2 + "",
    height: size2 + "",
    viewBox: "0 0 24 24",
    fill: "currentcolor"
  }, props2));
};
SVG.displayName = "SVG";
var getProps = function getProps2(test) {
  return function(props2) {
    var next = {};
    for (var key in props2) {
      if (test(key || ""))
        next[key] = props2[key];
    }
    return next;
  };
};
var MRE = /^m[trblxy]?$/;
var getMargin3 = getProps(function(k) {
  return MRE.test(k);
});
var omitMargin = getProps(function(k) {
  return !MRE.test(k);
});
var DownArrow = function DownArrow2(props2) {
  return import_react11.default.createElement(SVG, props2, import_react11.default.createElement("path", {
    d: "M7 10l5 5 5-5z"
  }));
};
var Select = import_react11.default.forwardRef(function Select2(_ref, ref) {
  var arrow = _ref.arrow, props2 = _objectWithoutPropertiesLoose3(_ref, ["arrow"]);
  return import_react11.default.createElement(Box, _extends6({}, getMargin3(props2), {
    sx: {
      display: "flex"
    }
  }), import_react11.default.createElement(Box, _extends6({
    ref,
    as: "select",
    variant: "select"
  }, omitMargin(props2), {
    __themeKey: "forms",
    __css: {
      display: "block",
      width: "100%",
      p: 2,
      appearance: "none",
      fontSize: "inherit",
      lineHeight: "inherit",
      border: "1px solid",
      borderRadius: 4,
      color: "inherit",
      bg: "transparent"
    }
  })), arrow || import_react11.default.createElement(DownArrow, {
    sx: {
      ml: -28,
      alignSelf: "center",
      pointerEvents: "none"
    }
  }));
});
var Textarea = import_react11.default.forwardRef(function Textarea2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "textarea",
    variant: "textarea"
  }, props2, {
    __themeKey: "forms",
    __css: {
      display: "block",
      width: "100%",
      p: 2,
      appearance: "none",
      fontSize: "inherit",
      lineHeight: "inherit",
      border: "1px solid",
      borderRadius: 4,
      color: "inherit",
      bg: "transparent"
    }
  }));
});
var RadioChecked = function RadioChecked2(props2) {
  return import_react11.default.createElement(SVG, props2, import_react11.default.createElement("path", {
    d: "M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};
var RadioUnchecked = function RadioUnchecked2(props2) {
  return import_react11.default.createElement(SVG, props2, import_react11.default.createElement("path", {
    d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
  }));
};
var RadioIcon = function RadioIcon2(props2) {
  return import_react11.default.createElement(import_react11.default.Fragment, null, import_react11.default.createElement(RadioChecked, _extends6({}, props2, {
    __css: {
      display: "none",
      "input:checked ~ &": {
        display: "block"
      }
    }
  })), import_react11.default.createElement(RadioUnchecked, _extends6({}, props2, {
    __css: {
      display: "block",
      "input:checked ~ &": {
        display: "none"
      }
    }
  })));
};
var Radio = import_react11.default.forwardRef(function Radio2(_ref, ref) {
  var className = _ref.className, sx3 = _ref.sx, _ref$variant = _ref.variant, variant5 = _ref$variant === void 0 ? "radio" : _ref$variant, props2 = _objectWithoutPropertiesLoose3(_ref, ["className", "sx", "variant"]);
  return import_react11.default.createElement(Box, {
    sx: {
      minWidth: "min-content"
    }
  }, import_react11.default.createElement(Box, _extends6({
    ref,
    as: "input",
    type: "radio"
  }, props2, {
    sx: {
      position: "absolute",
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: "hidden"
    }
  })), import_react11.default.createElement(Box, {
    as: RadioIcon,
    "aria-hidden": "true",
    __themeKey: "forms",
    variant: variant5,
    className,
    sx: sx3,
    __css: {
      // todo: system props??
      mr: 2,
      borderRadius: 9999,
      color: "gray",
      flexShrink: 0,
      "input:checked ~ &": {
        color: "primary"
      },
      "input:focus ~ &": {
        bg: "highlight"
      }
    }
  }));
});
var CheckboxChecked = function CheckboxChecked2(props2) {
  return import_react11.default.createElement(SVG, props2, import_react11.default.createElement("path", {
    d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
  }));
};
var CheckboxUnchecked = function CheckboxUnchecked2(props2) {
  return import_react11.default.createElement(SVG, props2, import_react11.default.createElement("path", {
    d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
  }));
};
var CheckboxIcon = function CheckboxIcon2(props2) {
  return import_react11.default.createElement(import_react11.default.Fragment, null, import_react11.default.createElement(CheckboxChecked, _extends6({}, props2, {
    __css: {
      display: "none",
      "input:checked ~ &": {
        display: "block"
      }
    }
  })), import_react11.default.createElement(CheckboxUnchecked, _extends6({}, props2, {
    __css: {
      display: "block",
      "input:checked ~ &": {
        display: "none"
      }
    }
  })));
};
var Checkbox = import_react11.default.forwardRef(function Checkbox2(_ref, ref) {
  var className = _ref.className, sx3 = _ref.sx, _ref$variant = _ref.variant, variant5 = _ref$variant === void 0 ? "checkbox" : _ref$variant, children = _ref.children, props2 = _objectWithoutPropertiesLoose3(_ref, ["className", "sx", "variant", "children"]);
  return import_react11.default.createElement(Box, {
    sx: {
      minWidth: "min-content"
    }
  }, import_react11.default.createElement(Box, _extends6({
    ref,
    as: "input",
    type: "checkbox"
  }, props2, {
    sx: {
      position: "absolute",
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: "hidden"
    }
  })), import_react11.default.createElement(Box, {
    as: CheckboxIcon,
    "aria-hidden": "true",
    __themeKey: "forms",
    variant: variant5,
    className,
    sx: sx3,
    __css: {
      mr: 2,
      borderRadius: 4,
      color: "gray",
      flexShrink: 0,
      "input:checked ~ &": {
        color: "primary"
      },
      "input:focus ~ &": {
        color: "primary",
        bg: "highlight"
      }
    }
  }), children);
});
var GUTTER = 2;
var SIZE = 18;
var Switch = import_react11.default.forwardRef(function Switch2(_ref, ref) {
  var className = _ref.className, label = _ref.label, sx3 = _ref.sx, _ref$variant = _ref.variant, variant5 = _ref$variant === void 0 ? "switch" : _ref$variant, props2 = _objectWithoutPropertiesLoose3(_ref, ["className", "label", "sx", "variant"]);
  return import_react11.default.createElement(Label, {
    sx: {
      cursor: "pointer"
    }
  }, import_react11.default.createElement(Box, _extends6({
    ref,
    as: "input",
    type: "checkbox",
    __themeKey: "forms",
    "aria-label": label
  }, props2, {
    sx: {
      position: "absolute",
      opacity: 0,
      zIndex: -1,
      width: 1,
      height: 1,
      overflow: "hidden"
    }
  })), import_react11.default.createElement(Box, {
    css: {
      padding: GUTTER
    },
    __themeKey: "forms",
    variant: variant5,
    className,
    sx: sx3,
    __css: {
      position: "relative",
      bg: "gray",
      borderRadius: SIZE,
      height: SIZE + GUTTER * 2,
      width: SIZE * 2 + GUTTER * 2,
      mr: 2,
      "input:disabled ~ &": {
        opacity: 0.5,
        cursor: "not-allowed"
      },
      "& > div": {
        display: "flex",
        alignItems: "center",
        borderRadius: "50%",
        height: SIZE,
        width: SIZE,
        bg: "white",
        boxShadow: "0 1px 2px rgba(0, 0, 0, 0.1)",
        position: "relative",
        transform: "translateX(0%)",
        transition: "transform 240ms cubic-bezier(0.165, 0.840, 0.440, 1.000)"
      },
      "input:checked ~ &": {
        bg: "primary",
        "> div": {
          transform: "translateX(100%)"
        }
      }
    }
  }, import_react11.default.createElement(Box, null)), import_react11.default.createElement("span", null, label));
});
var thumb = {
  appearance: "none",
  width: 16,
  height: 16,
  bg: "currentcolor",
  border: 0,
  borderRadius: 9999,
  variant: "forms.slider.thumb"
};
var Slider = import_react11.default.forwardRef(function Slider2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "input",
    type: "range",
    variant: "slider"
  }, props2, {
    __themeKey: "forms",
    __css: {
      display: "block",
      width: "100%",
      height: 4,
      my: 2,
      cursor: "pointer",
      appearance: "none",
      borderRadius: 9999,
      color: "inherit",
      bg: "gray",
      ":focus": {
        outline: "none",
        color: "primary"
      },
      "&::-webkit-slider-thumb": thumb,
      "&::-moz-range-thumb": thumb,
      "&::-ms-thumb": thumb
    }
  }));
});
var Field = import_react11.default.forwardRef(function Field2(_ref, ref) {
  var _ref$as = _ref.as, Control = _ref$as === void 0 ? Input : _ref$as, label = _ref.label, id = _ref.id, name = _ref.name, props2 = _objectWithoutPropertiesLoose3(_ref, ["as", "label", "id", "name"]);
  var fieldIdentifier = id || name;
  return import_react11.default.createElement(Box, getMargin3(props2), import_react11.default.createElement(Label, {
    htmlFor: fieldIdentifier
  }, label), import_react11.default.createElement(Control, _extends6({
    ref,
    id: fieldIdentifier,
    name
  }, omitMargin(props2))));
});
var Progress = import_react11.default.forwardRef(function Progress2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "progress",
    variant: "styles.progress"
  }, props2, {
    __css: {
      display: "block",
      width: "100%",
      height: "4px",
      margin: 0,
      padding: 0,
      overflow: "hidden",
      appearance: "none",
      color: "primary",
      bg: "gray",
      borderRadius: 9999,
      border: "none",
      "&::-webkit-progress-bar": {
        bg: "transparent"
      },
      "&::-webkit-progress-value": {
        bg: "currentcolor"
      },
      "&::-moz-progress-bar": {
        bg: "currentcolor"
      }
    }
  }));
});
var Donut = import_react11.default.forwardRef(function Donut2(_ref, ref) {
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 128 : _ref$size, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 2 : _ref$strokeWidth, _ref$value = _ref.value, value = _ref$value === void 0 ? 0 : _ref$value, _ref$min = _ref.min, min = _ref$min === void 0 ? 0 : _ref$min, _ref$max = _ref.max, max = _ref$max === void 0 ? 1 : _ref$max, title = _ref.title, props2 = _objectWithoutPropertiesLoose3(_ref, ["size", "strokeWidth", "value", "min", "max", "title"]);
  var r = 16 - strokeWidth;
  var C = 2 * r * Math.PI;
  var offset = C - (value - min) / (max - min) * C;
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "svg",
    viewBox: "0 0 32 32",
    width: size2,
    height: size2,
    strokeWidth,
    fill: "none",
    stroke: "currentcolor",
    role: "img",
    "aria-valuenow": value,
    "aria-valuemin": min,
    "aria-valuemax": max
  }, props2, {
    __css: {
      color: "primary"
    }
  }), title && import_react11.default.createElement("title", null, title), import_react11.default.createElement("circle", {
    cx: 16,
    cy: 16,
    r,
    opacity: 1 / 8
  }), import_react11.default.createElement("circle", {
    cx: 16,
    cy: 16,
    r,
    strokeDasharray: C,
    strokeDashoffset: offset,
    transform: "rotate(-90 16 16)"
  }));
});
var spin = keyframes({
  from: {
    transform: "rotate(0deg)"
  },
  to: {
    transform: "rotate(360deg)"
  }
});
var Spinner = import_react11.default.forwardRef(function Spinner2(_ref, ref) {
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 48 : _ref$size, _ref$strokeWidth = _ref.strokeWidth, strokeWidth = _ref$strokeWidth === void 0 ? 4 : _ref$strokeWidth, _ref$title = _ref.title, title = _ref$title === void 0 ? "Loading..." : _ref$title, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 500 : _ref$duration, props2 = _objectWithoutPropertiesLoose3(_ref, ["size", "strokeWidth", "max", "title", "duration"]);
  var r = 16 - strokeWidth;
  var C = 2 * r * Math.PI;
  var offset = C - 1 / 4 * C;
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "svg",
    viewBox: "0 0 32 32",
    width: size2,
    height: size2,
    strokeWidth,
    fill: "none",
    stroke: "currentcolor",
    role: "img"
  }, props2, {
    __css: {
      color: "primary",
      overflow: "visible"
    }
  }), import_react11.default.createElement("title", null, title), import_react11.default.createElement("circle", {
    cx: 16,
    cy: 16,
    r,
    opacity: 1 / 8
  }), import_react11.default.createElement(Box, {
    as: "circle",
    cx: 16,
    cy: 16,
    r,
    strokeDasharray: C,
    strokeDashoffset: offset,
    __css: {
      transformOrigin: "50% 50%",
      animationName: spin.toString(),
      animationTimingFunction: "linear",
      animationDuration: duration + "ms",
      animationIterationCount: "infinite"
    }
  }));
});
var Avatar = import_react11.default.forwardRef(function Avatar2(_ref, ref) {
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 48 : _ref$size, props2 = _objectWithoutPropertiesLoose3(_ref, ["size"]);
  return import_react11.default.createElement(Image, _extends6({
    ref,
    width: size2,
    height: size2,
    variant: "avatar"
  }, props2, {
    __css: {
      borderRadius: 9999
    }
  }));
});
var Badge = import_react11.default.forwardRef(function Badge2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    variant: "primary"
  }, props2, {
    __themeKey: "badges",
    __css: {
      display: "inline-block",
      verticalAlign: "baseline",
      fontSize: 0,
      fontWeight: "bold",
      whiteSpace: "nowrap",
      px: 1,
      borderRadius: 2,
      color: "white",
      bg: "primary"
    }
  }));
});
var IconButton = import_react11.default.forwardRef(function IconButton2(_ref, ref) {
  var _props$__css;
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 32 : _ref$size, props2 = _objectWithoutPropertiesLoose3(_ref, ["size"]);
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "button",
    variant: "icon"
  }, props2, {
    __themeKey: "buttons",
    __css: {
      label: ((_props$__css = props2.__css) == null ? void 0 : _props$__css.label) || "IconButton",
      appearance: "none",
      display: "inline-flex",
      alignItems: "center",
      justifyContent: "center",
      padding: 1,
      width: size2,
      height: size2,
      color: "inherit",
      bg: "transparent",
      border: "none",
      borderRadius: 4
    }
  }));
});
var x = import_react11.default.createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "24",
  height: "24",
  fill: "currentcolor",
  viewBox: "0 0 24 24"
}, import_react11.default.createElement("path", {
  d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}));
var Close = import_react11.default.forwardRef(function Close2(_ref, ref) {
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 32 : _ref$size, props2 = _objectWithoutPropertiesLoose3(_ref, ["size"]);
  return import_react11.default.createElement(IconButton, _extends6({
    ref,
    size: size2,
    title: "Close",
    "aria-label": "Close",
    variant: "close"
  }, props2, {
    children: x
  }));
});
var Alert = import_react11.default.forwardRef(function Alert2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    variant: "primary"
  }, props2, {
    __themeKey: "alerts",
    __css: {
      display: "flex",
      alignItems: "center",
      px: 3,
      py: 2,
      fontWeight: "bold",
      color: "white",
      bg: "primary",
      borderRadius: 4
    }
  }));
});
var Divider = import_react11.default.forwardRef(function Divider2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    as: "hr",
    variant: "styles.hr"
  }, props2, {
    __css: {
      color: "gray",
      m: 0,
      my: 2,
      border: 0,
      borderBottom: "1px solid"
    }
  }));
});
var getContainerProps = getProps(__isBoxStyledSystemProp);
var getIframeProps = getProps(function(str) {
  return !__isBoxStyledSystemProp(str);
});
var Embed = import_react11.default.forwardRef(function Embed2(_ref, ref) {
  var variant5 = _ref.variant, sx3 = _ref.sx, _ref$ratio = _ref.ratio, ratio = _ref$ratio === void 0 ? 16 / 9 : _ref$ratio, src = _ref.src, _ref$frameBorder = _ref.frameBorder, frameBorder = _ref$frameBorder === void 0 ? 0 : _ref$frameBorder, _ref$allowFullScreen = _ref.allowFullScreen, allowFullScreen = _ref$allowFullScreen === void 0 ? true : _ref$allowFullScreen, _ref$width = _ref.width, width2 = _ref$width === void 0 ? 560 : _ref$width, _ref$height = _ref.height, height2 = _ref$height === void 0 ? 315 : _ref$height, allow = _ref.allow, rest = _objectWithoutPropertiesLoose3(_ref, ["variant", "sx", "ratio", "src", "frameBorder", "allowFullScreen", "width", "height", "allow"]);
  return import_react11.default.createElement(Box, _extends6({
    variant: variant5,
    sx: sx3,
    __css: {
      width: "100%",
      height: 0,
      paddingBottom: 100 / ratio + "%",
      position: "relative",
      overflow: "hidden"
    }
  }, getContainerProps(rest)), import_react11.default.createElement(Box, _extends6({
    ref,
    as: "iframe",
    src,
    width: width2,
    height: height2,
    frameBorder,
    allowFullScreen,
    allow
  }, getIframeProps(rest), {
    __css: {
      position: "absolute",
      width: "100%",
      height: "100%",
      top: 0,
      bottom: 0,
      left: 0,
      border: 0
    }
  })));
});
var AspectRatio = import_react11.default.forwardRef(function AspectRatio2(_ref, ref) {
  var _ref$ratio = _ref.ratio, ratio = _ref$ratio === void 0 ? 4 / 3 : _ref$ratio, children = _ref.children, props2 = _objectWithoutPropertiesLoose3(_ref, ["ratio", "children"]);
  return import_react11.default.createElement(Box, {
    ref,
    sx: {
      position: "relative",
      overflow: "hidden"
    }
  }, import_react11.default.createElement(Box, {
    sx: {
      width: "100%",
      height: 0,
      paddingBottom: 100 / ratio + "%"
    }
  }), import_react11.default.createElement(Box, _extends6({}, props2, {
    __css: {
      position: "absolute",
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }
  }), children));
});
var AspectImage = import_react11.default.forwardRef(function AspectImage2(_ref, ref) {
  var ratio = _ref.ratio, props2 = _objectWithoutPropertiesLoose3(_ref, ["ratio"]);
  return import_react11.default.createElement(AspectRatio, {
    ratio
  }, import_react11.default.createElement(Image, _extends6({
    ref
  }, props2, {
    __css: {
      objectFit: "cover"
    }
  })));
});
var Container = import_react11.default.forwardRef(function Container2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref,
    variant: "container"
  }, props2, {
    __themeKey: "layout",
    __css: {
      width: "100%",
      maxWidth: "container",
      mx: "auto"
    }
  }));
});
var NavLink = import_react11.default.forwardRef(function NavLink2(props2, ref) {
  return import_react11.default.createElement(Link, _extends6({
    ref,
    variant: "nav"
  }, props2, {
    __css: {
      color: "inherit",
      textDecoration: "none",
      fontWeight: "bold",
      display: "inline-block",
      "&:hover, &:focus, &.active": {
        color: "primary"
      }
    }
  }));
});
var Message = import_react11.default.forwardRef(function Message2(props2, ref) {
  return import_react11.default.createElement(Box, _extends6({
    ref
  }, props2, {
    __themeKey: "messages",
    __css: {
      padding: 3,
      paddingLeft: function paddingLeft(t) {
        return t.space[3] - t.space[1];
      },
      borderLeftWidth: function borderLeftWidth(t) {
        return t.space[1];
      },
      borderLeftStyle: "solid",
      borderLeftColor: "primary",
      borderRadius: 4,
      bg: "highlight"
    }
  }));
});
var MenuIcon = function MenuIcon2(_ref) {
  var _ref$size = _ref.size, size2 = _ref$size === void 0 ? 24 : _ref$size;
  return import_react11.default.createElement(Box, {
    as: "svg",
    xmlns: "http://www.w3.org/2000/svg",
    width: size2,
    height: size2,
    fill: "currentcolor",
    viewBox: "0 0 24 24",
    sx: {
      display: "block",
      margin: 0
    }
  }, import_react11.default.createElement("path", {
    d: "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
  }));
};
var MenuButton = import_react11.default.forwardRef(function MenuButton2(props2, ref) {
  return import_react11.default.createElement(IconButton, _extends6({
    ref,
    title: "Menu",
    "aria-label": "Toggle Menu",
    variant: "menu"
  }, props2), import_react11.default.createElement(MenuIcon, null));
});

// ../../node_modules/theme-ui/dist/index.esm.js
function _extends7() {
  _extends7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
var BaseStyles = function BaseStyles2(props2) {
  return jsx4("div", _extends7({}, props2, {
    sx: {
      fontFamily: "body",
      lineHeight: "body",
      fontWeight: "body",
      variant: "styles"
    }
  }));
};
var jsx4 = jsx2;
export {
  Alert,
  AspectImage,
  AspectRatio,
  Avatar,
  Badge,
  BaseStyles,
  Box,
  Button,
  Card,
  Checkbox,
  Close,
  Container,
  Context,
  Divider,
  Donut,
  Embed,
  Field,
  Flex,
  Grid,
  Heading,
  IconButton,
  Image,
  InitializeColorMode,
  Input,
  Label,
  Link,
  MenuButton,
  Message,
  NavLink,
  Paragraph,
  Progress,
  Radio,
  Select,
  Slider,
  Spinner,
  Switch,
  Text,
  Textarea,
  ThemeProvider2 as ThemeProvider,
  Themed,
  components,
  css,
  get,
  jsx4 as jsx,
  merge,
  useColorMode,
  useThemeUI
};
//# sourceMappingURL=theme-ui.js.map
