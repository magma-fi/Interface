{
  "version": 3,
  "sources": ["../../../../lib-ethers/dist/deployments/dev.json", "../../../../lib-ethers/dist/deployments/goerli.json", "../../../../lib-ethers/dist/deployments/kovan.json", "../../../../lib-ethers/dist/deployments/rinkeby.json", "../../../../lib-ethers/dist/deployments/ropsten.json", "../../../../lib-ethers/dist/deployments/mainnet.json", "../../../../lib-ethers/dist/deployments/kiln.json", "../../../../lib-ethers/dist/deployments/iotexTestnet.json", "../../../../lib-ethers/src/_utils.ts", "../../../../lib-ethers/dist/abi/ActivePool.json", "../../../../lib-ethers/dist/abi/BorrowerOperations.json", "../../../../lib-ethers/dist/abi/TroveManager.json", "../../../../lib-ethers/dist/abi/LUSDToken.json", "../../../../lib-ethers/dist/abi/CollSurplusPool.json", "../../../../lib-ethers/dist/abi/CommunityIssuance.json", "../../../../lib-ethers/dist/abi/DefaultPool.json", "../../../../lib-ethers/dist/abi/LQTYToken.json", "../../../../lib-ethers/dist/abi/HintHelpers.json", "../../../../lib-ethers/dist/abi/LockupContractFactory.json", "../../../../lib-ethers/dist/abi/LQTYStaking.json", "../../../../lib-ethers/dist/abi/MultiTroveGetter.json", "../../../../lib-ethers/dist/abi/PriceFeed.json", "../../../../lib-ethers/dist/abi/PriceFeedTestnet.json", "../../../../lib-ethers/dist/abi/SortedTroves.json", "../../../../lib-ethers/dist/abi/StabilityPool.json", "../../../../lib-ethers/dist/abi/GasPool.json", "../../../../lib-ethers/dist/abi/Unipool.json", "../../../../lib-ethers/dist/abi/IERC20.json", "../../../../lib-ethers/dist/abi/ERC20Mock.json", "../../../../lib-ethers/src/contracts.ts", "../../../../lib-ethers/src/_Multicall.ts", "../../../../lib-ethers/src/EthersLiquityConnection.ts", "../../../../lib-ethers/dist/src/types.js", "../../../../lib-ethers/src/BlockPolledLiquityStore.ts", "../../../../lib-ethers/src/ReadableEthersLiquity.ts", "../../../../lib-ethers/src/ObservableEthersLiquity.ts", "../../../../lib-ethers/src/parseLogs.ts", "../../../../lib-ethers/src/PopulatableEthersLiquity.ts", "../../../../lib-ethers/src/SendableEthersLiquity.ts", "../../../../lib-ethers/src/EthersLiquity.ts", "../../../../lib-ethers/index.ts"],
  "sourcesContent": ["{\n    \"chainId\": 1337,\n    \"version\": \"5d1c47b87e3bc9a34844a565f76a90506c7727e0\",\n    \"deploymentDate\": 1699788797000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.257201646090534979\",\n    \"_priceFeedIsTestnet\": true,\n    \"_uniTokenIsMock\": true,\n    \"_isDev\": true,\n    \"startBlock\": 45,\n    \"addresses\": {\n        \"activePool\": \"0x65500A622D5E812E3D4FfB20D369F7442e9F3C46\",\n        \"borrowerOperations\": \"0xB6d395E3302228969DE1592b5eEdf4F27D248D56\",\n        \"troveManager\": \"0x37bd3E248F1bE2a1ECFdE0B81d951CD43D152c3c\",\n        \"collSurplusPool\": \"0xac6Aa2c03FCFBCe2eEdE63b627eC07284f2Cf3D9\",\n        \"communityIssuance\": \"0xA6D97bCe2571B631414ee04EF04604cb8ACe9d6e\",\n        \"defaultPool\": \"0xb16CE51a13909001B2038fC793418125Eea63ba6\",\n        \"hintHelpers\": \"0x5a4716017E8cff6B46fB2475Bb3F73C61dae97c5\",\n        \"lockupContractFactory\": \"0xD7eaCC30c92034142dE3bA11BBA6FD5b4e928e76\",\n        \"lqtyStaking\": \"0xb029Fc8EC25E5DC52Ca6C9091C7cfae9eda73101\",\n        \"priceFeed\": \"0x7f1eC7534aC0b926cED2F123F7a2250A7c221d9B\",\n        \"sortedTroves\": \"0x88ee1651551433bbfFD94d75b5532b1B40E22303\",\n        \"stabilityPool\": \"0xE6e710C92CF844D1eCe390b6eFe7C64687729CFC\",\n        \"gasPool\": \"0xa11ECb62766F8c3F41764a1E0Ccf587198110047\",\n        \"unipool\": \"0x8a6C78817c182180b423D23D2CC630ec6fBA4403\",\n        \"lusdToken\": \"0x71b8f0646B827556B55b028f2B83390D9238c6A8\",\n        \"lqtyToken\": \"0x05234e72eac31F1Efa5297dcf39EA1004efaf352\",\n        \"multiTroveGetter\": \"0xe053d08d289F76cFbf0b9eee8767a3Dda6836b4d\",\n        \"uniToken\": \"0x3fB7Ee7206B1a6bbe81e193A94263c048c92CA58\"\n    }\n}\n", "{\n    \"chainId\": 5,\n    \"version\": \"e2f7dc41994854e0b1e1287f73c55894cc501740\",\n    \"deploymentDate\": 1676620200000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.257201646090534979\",\n    \"_priceFeedIsTestnet\": false,\n    \"_uniTokenIsMock\": true,\n    \"_isDev\": false,\n    \"startBlock\": 8506292,\n    \"addresses\": {\n        \"activePool\": \"0x7426EFda9B17992B3F7cE3680D5D128E1F876C05\",\n        \"borrowerOperations\": \"0x94f0835Aa7cEe67fF122419BeE52b82Abe637a16\",\n        \"troveManager\": \"0x6412c93AB383B87Af7c5E673fb3a295c8977A3Ed\",\n        \"collSurplusPool\": \"0x82869137C51e0DC1Bf3aeE5bc1f0B73EADfEBB25\",\n        \"communityIssuance\": \"0x65188ae9dDE4A59b73796Eb26AE33a3D5fe9b84d\",\n        \"defaultPool\": \"0x63a7c03b921f5A59D9f583A34585bC6eFc832b59\",\n        \"hintHelpers\": \"0x7151f3828948B8824C677DA8daf7BD13014c1187\",\n        \"lockupContractFactory\": \"0xA401f217DB7d84432C98272F637E9d450c6D16f2\",\n        \"lqtyStaking\": \"0x02dD2a33d0bBF40343CD09941F275978b1cd4ab9\",\n        \"priceFeed\": \"0x8c2706b7bF86576F16Db7C099F5a62E7Ce8F0661\",\n        \"sortedTroves\": \"0x8C2C33247A691a98d05B60c2D7448687b6C56a86\",\n        \"stabilityPool\": \"0x99Fda92878c1d2f1e0971D1937C50CC578A33E3D\",\n        \"gasPool\": \"0x25fE5Ed43aD2370f31414AC9De11E028A699a40e\",\n        \"unipool\": \"0xDA7Aa96fC750B456a63af90D894063009e26f6ba\",\n        \"lusdToken\": \"0x76ea225E132609D387464e11ce5EFA1764A3799B\",\n        \"lqtyToken\": \"0x220aa3EE61009E33F84901021A271B197e925df2\",\n        \"multiTroveGetter\": \"0x64e8Bc7b037E61c0d2dd53ae7Fc4faF1E6429a19\",\n        \"uniToken\": \"0x94F5C9f75857De515bce1181CEdB3c463E3654C0\"\n    }\n}\n", "{\n    \"chainId\": 42,\n    \"version\": \"5174ecd0da4842157aba989499200d690b7e374f\",\n    \"deploymentDate\": 1617374516000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.257201646090534979\",\n    \"_priceFeedIsTestnet\": false,\n    \"_uniTokenIsMock\": false,\n    \"_isDev\": false,\n    \"startBlock\": 24134777,\n    \"addresses\": {\n        \"activePool\": \"0x2FEB8CC8eD32117D1F39168543f29c30fdf10105\",\n        \"borrowerOperations\": \"0xA289111CC4b306E3F5F15c654D4c318B3dA51813\",\n        \"troveManager\": \"0x5EBeC1ecc36a760A54E35d474F889EfB9E7eD2aD\",\n        \"collSurplusPool\": \"0x1Ce340cC663BDbda54ccb6055da4064C0B7f68cd\",\n        \"communityIssuance\": \"0x7baD384C67302df52Ee78Acc3581c9d9c51F9527\",\n        \"defaultPool\": \"0x706431F2252ba2e5A9a6F7EEFE5CB4902acc23E7\",\n        \"hintHelpers\": \"0xEEBfA9A488E9d83cd1a49b838c14D9231F5F2fCb\",\n        \"lockupContractFactory\": \"0xc34B9083Bf5b5794eFD202A8c3B51A5577e087c1\",\n        \"lqtyStaking\": \"0x82b7384e360DD3f16ed23D15921BB7a878a08b87\",\n        \"priceFeed\": \"0xbA49275F8F890E7296F64b3e81F1Ada656030150\",\n        \"sortedTroves\": \"0x91656701b33eca6425A239930FccAA842D0E2031\",\n        \"stabilityPool\": \"0x04d630Bff6dea193Fd644dEcfC460db249854a02\",\n        \"gasPool\": \"0xd97E194C0659F0d7b051EdF3E317BF4F7A675770\",\n        \"unipool\": \"0xeed1782CaD8bad6eD2072C85e4c5821e67cCf1E1\",\n        \"lusdToken\": \"0x0b02b94638daa719290b5214825dA625af08A02F\",\n        \"lqtyToken\": \"0xd8FABEa5752D52Ee0dEbF6c90948F5446694EE7c\",\n        \"multiTroveGetter\": \"0x9c5977268592E964784EFF50043BFFC035B6b0C7\",\n        \"uniToken\": \"0x6E14b68E16e4211C06bcc8527D6b92A43AA47806\"\n    }\n}\n", "{\n    \"chainId\": 4,\n    \"version\": \"5174ecd0da4842157aba989499200d690b7e374f\",\n    \"deploymentDate\": 1617355618000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.257201646090534979\",\n    \"_priceFeedIsTestnet\": false,\n    \"_uniTokenIsMock\": false,\n    \"_isDev\": false,\n    \"startBlock\": 8341450,\n    \"addresses\": {\n        \"activePool\": \"0xbA49275F8F890E7296F64b3e81F1Ada656030150\",\n        \"borrowerOperations\": \"0x91656701b33eca6425A239930FccAA842D0E2031\",\n        \"troveManager\": \"0x04d630Bff6dea193Fd644dEcfC460db249854a02\",\n        \"collSurplusPool\": \"0xd97E194C0659F0d7b051EdF3E317BF4F7A675770\",\n        \"communityIssuance\": \"0xeed1782CaD8bad6eD2072C85e4c5821e67cCf1E1\",\n        \"defaultPool\": \"0x0b02b94638daa719290b5214825dA625af08A02F\",\n        \"hintHelpers\": \"0xd8FABEa5752D52Ee0dEbF6c90948F5446694EE7c\",\n        \"lockupContractFactory\": \"0x9c5977268592E964784EFF50043BFFC035B6b0C7\",\n        \"lqtyStaking\": \"0x988749E04e5B0863Da4E0Fdb1EaD85C1FA59fCe3\",\n        \"priceFeed\": \"0x692Cd2D9Df7EFD91Ccd17F9eEFD72BAEE0584DB9\",\n        \"sortedTroves\": \"0xac064890c6343F67450ba7aB97df6De38A8D7da8\",\n        \"stabilityPool\": \"0xB8eb11f9eFF55378dfB692296C32DF020f5CC7fF\",\n        \"gasPool\": \"0xbbb26b40c1B32ba1F342DAbC65234516dd29BB44\",\n        \"unipool\": \"0x866b252Acff4c45d6978032865aFb9923D11992A\",\n        \"lusdToken\": \"0x9C5AE6852622ddE455B6Fca4C1551FC0352531a3\",\n        \"lqtyToken\": \"0xF74dcAbeA0954AeB6903c8a71d41e468a6B77357\",\n        \"multiTroveGetter\": \"0x1bE036A6A82b4b774757a48a1bb79653f89eD9fD\",\n        \"uniToken\": \"0x36A5ec67B9C25D765186FBAd2735f1746bd894D8\"\n    }\n}\n", "{\n    \"chainId\": 3,\n    \"version\": \"5174ecd0da4842157aba989499200d690b7e374f\",\n    \"deploymentDate\": 1617356113000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.257201646090534979\",\n    \"_priceFeedIsTestnet\": true,\n    \"_uniTokenIsMock\": false,\n    \"_isDev\": false,\n    \"startBlock\": 9961294,\n    \"addresses\": {\n        \"activePool\": \"0x8bE79B54Bff7754B57294077c2B5017AF9f57dC2\",\n        \"borrowerOperations\": \"0xfe9049E677C5773dd72ac7E19c38c68aB0891744\",\n        \"troveManager\": \"0xcd89b25a565Ad0895c551DAe040c2b5F9Eb11D64\",\n        \"collSurplusPool\": \"0x7426EFda9B17992B3F7cE3680D5D128E1F876C05\",\n        \"communityIssuance\": \"0x94f0835Aa7cEe67fF122419BeE52b82Abe637a16\",\n        \"defaultPool\": \"0x6412c93AB383B87Af7c5E673fb3a295c8977A3Ed\",\n        \"hintHelpers\": \"0x82869137C51e0DC1Bf3aeE5bc1f0B73EADfEBB25\",\n        \"lockupContractFactory\": \"0x65188ae9dDE4A59b73796Eb26AE33a3D5fe9b84d\",\n        \"lqtyStaking\": \"0x63a7c03b921f5A59D9f583A34585bC6eFc832b59\",\n        \"priceFeed\": \"0x7151f3828948B8824C677DA8daf7BD13014c1187\",\n        \"sortedTroves\": \"0xA401f217DB7d84432C98272F637E9d450c6D16f2\",\n        \"stabilityPool\": \"0x02dD2a33d0bBF40343CD09941F275978b1cd4ab9\",\n        \"gasPool\": \"0x8c2706b7bF86576F16Db7C099F5a62E7Ce8F0661\",\n        \"unipool\": \"0x8C2C33247A691a98d05B60c2D7448687b6C56a86\",\n        \"lusdToken\": \"0x99Fda92878c1d2f1e0971D1937C50CC578A33E3D\",\n        \"lqtyToken\": \"0x25fE5Ed43aD2370f31414AC9De11E028A699a40e\",\n        \"multiTroveGetter\": \"0xDA7Aa96fC750B456a63af90D894063009e26f6ba\",\n        \"uniToken\": \"0x14E87Db22A5a402a0A1461FAE94fade1976AAaF7\"\n    }\n}\n", "{\n    \"chainId\": 1,\n    \"version\": \"5174ecd0da4842157aba989499200d690b7e374f\",\n    \"deploymentDate\": 1617611590000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.367430922986478542\",\n    \"_priceFeedIsTestnet\": false,\n    \"_uniTokenIsMock\": false,\n    \"_isDev\": false,\n    \"startBlock\": 12178551,\n    \"addresses\": {\n        \"activePool\": \"0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F\",\n        \"borrowerOperations\": \"0x24179CD81c9e782A4096035f7eC97fB8B783e007\",\n        \"troveManager\": \"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2\",\n        \"collSurplusPool\": \"0x3D32e8b97Ed5881324241Cf03b2DA5E2EBcE5521\",\n        \"communityIssuance\": \"0xD8c9D9071123a059C6E0A945cF0e0c82b508d816\",\n        \"defaultPool\": \"0x896a3F03176f05CFbb4f006BfCd8723F2B0D741C\",\n        \"hintHelpers\": \"0xE84251b93D9524E0d2e621Ba7dc7cb3579F997C0\",\n        \"lockupContractFactory\": \"0x2eBeF24dA09489218Ba2BECb01867F6DaAeDcD4B\",\n        \"lqtyStaking\": \"0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d\",\n        \"priceFeed\": \"0x4c517D4e2C851CA76d7eC94B805269Df0f2201De\",\n        \"sortedTroves\": \"0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6\",\n        \"stabilityPool\": \"0x66017D22b0f8556afDd19FC67041899Eb65a21bb\",\n        \"gasPool\": \"0x9555b042F969E561855e5F28cB1230819149A8d9\",\n        \"unipool\": \"0xd37a77E71ddF3373a79BE2eBB76B6c4808bDF0d5\",\n        \"lusdToken\": \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\",\n        \"lqtyToken\": \"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D\",\n        \"multiTroveGetter\": \"0xFc92d0E9Fa35df17E3A6d9F40716ca2cE749922B\",\n        \"uniToken\": \"0xF20EF17b889b437C151eB5bA15A47bFc62bfF469\"\n    }\n}\n", "{\n    \"chainId\": 1337802,\n    \"version\": \"5174ecd0da4842157aba989499200d690b7e374f\",\n    \"deploymentDate\": 1648542144000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.257201646090534979\",\n    \"_priceFeedIsTestnet\": true,\n    \"_uniTokenIsMock\": true,\n    \"_isDev\": false,\n    \"startBlock\": 146577,\n    \"addresses\": {\n        \"activePool\": \"0xE7d135D2B43EF53D5f644F4A4F39F639174dfFb5\",\n        \"borrowerOperations\": \"0x98695e9bf7DEb6113a6e5d5920d032bD721Fee6E\",\n        \"troveManager\": \"0x6645E03DA2a711f780af7cCE1019Cb9a9135C898\",\n        \"collSurplusPool\": \"0x69E686BBF16f6C04aC2fb49AA0d2f78Ff9f37596\",\n        \"communityIssuance\": \"0x86F51bB9F0A3Ee1d5CfDD2df6e6282170a02Bb59\",\n        \"defaultPool\": \"0x480cB1864e570221ABcADd3316D947864D3F264B\",\n        \"hintHelpers\": \"0x00248273044d46E690e3234cDdd480C5290b325c\",\n        \"lockupContractFactory\": \"0xc27b50C919B36C1b4C7fA0a74AA65E28C92d87Fc\",\n        \"lqtyStaking\": \"0xb21a1c4F84A772397FEfb43CAa5a91947F786E1f\",\n        \"priceFeed\": \"0x92167BE3A0D4c95055342a2fe0bC910f76dE34aC\",\n        \"sortedTroves\": \"0xAe6b0165E406CAB9FEAa503314DFB19Ed1Ea777a\",\n        \"stabilityPool\": \"0x8716B3C98A33D0FF1a922063D1D67B7e40feB80f\",\n        \"gasPool\": \"0x24c925a2570E17718256fe1416dC45837A60b847\",\n        \"unipool\": \"0x2585B38EFeeB31E4a041686Ef78D925871cD957b\",\n        \"lusdToken\": \"0xF47816aa488Ae548ECE5D3051Fb8F5411e774f8B\",\n        \"lqtyToken\": \"0x8CeA94Affd1B7ae5d623A2287403bB33f7Cb83f6\",\n        \"multiTroveGetter\": \"0x59BC9902e0b2c8831E55eF9ee8678e377643c468\",\n        \"uniToken\": \"0x7b6c5109F353236294123B0a55896b760708008c\"\n    }\n}\n", "{\n    \"chainId\": 4690,\n    \"version\": \"1\",\n    \"deploymentDate\": 1617611590000,\n    \"bootstrapPeriod\": 1209600,\n    \"totalStabilityPoolLQTYReward\": \"32000000\",\n    \"liquidityMiningLQTYRewardRate\": \"0.367430922986478542\",\n    \"_priceFeedIsTestnet\": false,\n    \"_uniTokenIsMock\": false,\n    \"_isDev\": false,\n    \"startBlock\": 8506292,\n    \"addresses\": {\n        \"activePool\": \"0x28347DA75a26955995738B6dB54aEAa6321a807d\",\n        \"borrowerOperations\": \"0xc69c70cBa1Bbe39E4E3a77Ec0cA13F686C15112D\",\n        \"troveManager\": \"0x321708a3057fe4497e5854ba905063520047A103\",\n        \"collSurplusPool\": \"0xA0cAd8E0291D0396C4A9Ff691Eae21dd8dfd7De0\",\n        \"communityIssuance\": \"0xcCE1Bd32CDaCa7Bb8401ABb7f2bD12de24C534C7\",\n        \"defaultPool\": \"0xA0fA73ce0F1F457028dBd1F6337f7FDfa64E68EB\",\n        \"hintHelpers\": \"0x424F05ffE2e897baf024dE543D4C5Fd346548d5F\",\n        \"lockupContractFactory\": \"0x115F50025F23a87388D8AC6c62C13CF691525Aea\",\n        \"lqtyStaking\": \"0xCBdf9D0C66CE1b380ABbdDF082da8fc5A927b1B6\",\n        \"priceFeed\": \"0x247BF943a0b8DE77536742FCEF1d70DdaBF2f4a8\",\n        \"sortedTroves\": \"0xAbad362b4DFfaFE3047EC10c68155EB99f4b9301\",\n        \"stabilityPool\": \"0xe00cEd490624c622dAB8419974020b6d53425C4a\",\n        \"gasPool\": \"0xba24a083a88B93b46604BE05fBD90e43a6f1c181\",\n        \"lusdToken\": \"0x91cD0E1a9fE6D83801B22a4Fd421Db42c0287e46\",\n        \"unipool\": \"\",\n        \"lqtyToken\": \"\",\n        \"multiTroveGetter\": \"0x680693EFFC3E8F61dAbFb00150e8120682360A13\",\n        \"uniToken\": \"\"\n    }\n}\n", "import { BigNumber } from \"@ethersproject/bignumber\";\n\nimport { Decimal } from \"@liquity/lib-base\";\n\nexport const numberify = (bigNumber: BigNumber): number => bigNumber.toNumber();\n\nexport const decimalify = (bigNumber: BigNumber): Decimal =>\n  Decimal.fromBigNumberString(bigNumber.toHexString());\n\nexport const panic = <T>(e: unknown): T => {\n  throw e;\n};\n\nexport type Resolved<T> = T extends Promise<infer U> ? U : T;\nexport type ResolvedValues<T> = { [P in keyof T]: Resolved<T[P]> };\n\nexport const promiseAllValues = <T>(object: T): Promise<ResolvedValues<T>> => {\n  const keys = Object.keys(object);\n\n  return Promise.all(Object.values(object)).then(values =>\n    Object.fromEntries(values.map((value, i) => [keys[i], value]))\n  ) as Promise<ResolvedValues<T>>;\n};\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newActivePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ActivePoolETHBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ActivePoolLUSDDebtUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newBorrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newDefaultPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"DefaultPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ETHBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"EtherSent\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LUSDBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newStabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"StabilityPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newTroveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperationsAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseLUSDDebt\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"defaultPoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLUSDDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseLUSDDebt\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendETH\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_defaultPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"stabilityPoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManagerAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_collSurplusPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"CollSurplusPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_defaultPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"DefaultPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_gasPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"GasPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyStakingAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYStakingAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDFee\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LUSDBorrowingFeePaid\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lusdTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LUSDTokenAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newPriceFeedAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PriceFeedAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"SortedTrovesAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"StabilityPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"arrayIndex\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TroveCreated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newTroveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_debt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"stake\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"enum BorrowerOperations.BorrowerOperation\",\n                \"name\": \"operation\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"TroveUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"BORROWING_FEE_FLOOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"CCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"LUSD_GAS_COMPENSATION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MIN_NET_DEBT\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"PERCENT_DIVISOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"_100pct\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IActivePool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"addColl\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_maxFeePercentage\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_collWithdrawal\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDChange\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"_isDebtIncrease\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"adjustTrove\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimCollateral\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"closeTrove\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"defaultPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IDefaultPool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_debt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getCompositeDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemColl\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyStaking\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILQTYStaking\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyStakingAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lusdToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILUSDToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"moveETHGainToTrove\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_maxFeePercentage\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"openTrove\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPriceFeed\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"repayLUSD\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_defaultPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_gasPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_collSurplusPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_priceFeedAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lusdTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyStakingAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sortedTroves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ISortedTroves\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ITroveManager\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_collWithdrawal\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"withdrawColl\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_maxFeePercentage\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"withdrawLUSD\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_baseRate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"BaseRateUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newBorrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_collSurplusPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"CollSurplusPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_defaultPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"DefaultPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_gasPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"GasPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyStakingAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYStakingAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYTokenAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_L_ETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_L_LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LTermsUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newLUSDTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LUSDTokenAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_lastFeeOpTime\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LastFeeOpTimeUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_liquidatedDebt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_liquidatedColl\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_collGasCompensation\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDGasCompensation\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Liquidation\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newPriceFeedAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PriceFeedAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_attemptedLUSDAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_actualLUSDAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETHSent\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETHFee\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Redemption\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"SortedTrovesAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"StabilityPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_totalStakesSnapshot\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_totalCollateralSnapshot\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"SystemSnapshotsUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newTotalStakes\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TotalStakesUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newIndex\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TroveIndexUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_debt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"enum TroveManager.TroveManagerOperation\",\n                \"name\": \"_operation\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"TroveLiquidated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_L_ETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_L_LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TroveSnapshotsUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_debt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_stake\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"enum TroveManager.TroveManagerOperation\",\n                \"name\": \"_operation\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"TroveUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"BETA\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"BOOTSTRAP_PERIOD\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"BORROWING_FEE_FLOOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"CCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"LUSD_GAS_COMPENSATION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"L_ETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"L_LUSDDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MAX_BORROWING_FEE\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MINUTE_DECAY_FACTOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MIN_NET_DEBT\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"PERCENT_DIVISOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"REDEMPTION_FEE_FLOOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"SECONDS_IN_ONE_MINUTE\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TroveOwners\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Troves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"debt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"stake\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"enum TroveManager.Status\",\n                \"name\": \"status\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"arrayIndex\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"_100pct\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IActivePool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"addTroveOwnerToArray\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"applyPendingRewards\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"baseRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address[]\",\n                \"name\": \"_troveArray\",\n                \"type\": \"address[]\"\n            }\n        ],\n        \"name\": \"batchLiquidateTroves\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperationsAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_price\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"checkRecoveryMode\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"closeTrove\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decayBaseRateFromBorrowing\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_collDecrease\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseTroveColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_debtDecrease\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseTroveDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"defaultPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IDefaultPool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getBorrowingFee\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getBorrowingFeeWithDecay\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getBorrowingRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getBorrowingRateWithDecay\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_price\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getCurrentICR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getEntireDebtAndColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"debt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pendingLUSDDebtReward\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"pendingETHReward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemColl\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getNominalICR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPendingETHReward\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPendingLUSDDebtReward\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETHDrawn\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRedemptionFeeWithDecay\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getRedemptionRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getRedemptionRateWithDecay\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_price\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getTCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTroveColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTroveDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getTroveFromTroveOwnersArray\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getTroveOwnersCount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTroveStake\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getTroveStatus\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"hasPendingRewards\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_collIncrease\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseTroveColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_debtIncrease\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseTroveDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastETHError_Redistribution\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastFeeOperationTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastLUSDDebtError_Redistribution\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"liquidate\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_n\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"liquidateTroves\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyStaking\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILQTYStaking\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILQTYToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lusdToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILUSDToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPriceFeed\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDamount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_firstRedemptionHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperPartialRedemptionHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerPartialRedemptionHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_partialRedemptionHintNICR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_maxIterations\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_maxFeePercentage\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"redeemCollateral\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"removeStake\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"rewardSnapshots\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"ETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_defaultPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_gasPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_collSurplusPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_priceFeedAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lusdTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyStakingAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_num\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setTroveStatus\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sortedTroves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ISortedTroves\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"stabilityPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IStabilityPool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalCollateralSnapshot\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalStakes\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalStakesSnapshot\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"updateStakeAndTotalStakes\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrower\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"updateTroveRewardSnapshots\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newBorrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_user\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LUSDTokenBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newStabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"StabilityPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperationsAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"domainSeparator\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"nonces\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"permit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"permitTypeHash\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_poolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_receiver\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"returnFromPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_poolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendToPool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"stabilityPoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManagerAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"version\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newActivePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newBorrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"CollBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"EtherSent\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newTroveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"accountSurplus\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperationsAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"claimColl\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getCollateral\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManagerAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n]\n", "[\n    {\n        \"inputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYTokenAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"StabilityPoolAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_totalLQTYIssued\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TotalLQTYIssuedUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"ISSUANCE_FACTOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"LQTYSupplyCap\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"SECONDS_IN_ONE_MINUTE\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"deploymentTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"issueLQTY\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILQTYToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LQTYamount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendLQTY\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_stabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"stabilityPoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalLQTYIssued\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newActivePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newDefaultPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"DefaultPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"DefaultPoolETHBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"DefaultPoolLUSDDebtUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ETHBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"EtherSent\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LUSDBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newStabilityPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"StabilityPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newTroveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseLUSDDebt\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLUSDDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseLUSDDebt\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendETHToActivePool\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManagerAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n]\n", "[\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_communityIssuanceAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyStakingAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lockupFactoryAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_bountyAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lpRewardsAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_multisigAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_communityIssuanceAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"CommunityIssuanceAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyStakingAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYStakingAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lockupContractFactoryAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LockupContractFactoryAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"ONE_YEAR_IN_SECONDS\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"communityIssuanceAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"domainSeparator\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getDeploymentStartTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLpRewardsEntitlement\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lockupContractFactory\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILockupContractFactory\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyStakingAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"multisigAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"nonces\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"deadline\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"v\",\n                \"type\": \"uint8\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"r\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"s\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"permit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"permitTypeHash\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"sendToLQTYStaking\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"version\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"SortedTrovesAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"BORROWING_FEE_FLOOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"CCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"LUSD_GAS_COMPENSATION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MIN_NET_DEBT\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"PERCENT_DIVISOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"_100pct\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IActivePool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_debt\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_price\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"computeCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_coll\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_debt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"computeNominalCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"pure\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"defaultPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IDefaultPool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_CR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_numTrials\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_inputRandomSeed\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getApproxHint\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"hintAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"diff\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"latestRandomSeed\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemColl\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDamount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_price\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_maxIterations\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getRedemptionHints\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"firstRedemptionHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"partialRedemptionHintNICR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"truncatedLUSDamount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPriceFeed\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sortedTroves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ISortedTroves\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ITroveManager\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYTokenAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lockupContractAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_beneficiary\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_unlockTime\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_deployer\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LockupContractDeployedThroughFactory\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"SECONDS_IN_ONE_YEAR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_beneficiary\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_unlockTime\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"deployLockupContract\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_contractAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isRegisteredLockup\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"lockupContractToDeployer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyTokenAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setLQTYTokenAddress\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_account\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"EtherSent\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_F_ETH\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"F_ETHUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_F_LUSD\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"F_LUSDUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYTokenAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lusdTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LUSDTokenAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"staker\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"newStake\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"StakeChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_staker\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_F_ETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_F_LUSD\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"StakerSnapshotsUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"staker\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"LUSDGain\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"ETHGain\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"StakingGainsWithdrawn\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_totalLQTYStaked\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"TotalLQTYStakedUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_troveManager\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"F_ETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"F_LUSD\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePoolAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperationsAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_user\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPendingETHGain\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_user\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPendingLUSDGain\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETHFee\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseF_ETH\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDFee\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseF_LUSD\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILQTYToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lusdToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILUSDToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lusdTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"snapshots\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"F_ETH_Snapshot\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"F_LUSD_Snapshot\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LQTYamount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"stake\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"stakes\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalLQTYStaked\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManagerAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_LQTYamount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"unstake\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n]\n", "[\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"contract TroveManager\",\n                \"name\": \"_troveManager\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"contract ISortedTroves\",\n                \"name\": \"_sortedTroves\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"int256\",\n                \"name\": \"_startIdx\",\n                \"type\": \"int256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_count\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"getMultipleSortedTroves\",\n        \"outputs\": [\n            {\n                \"components\": [\n                    {\n                        \"internalType\": \"address\",\n                        \"name\": \"owner\",\n                        \"type\": \"address\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"debt\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"coll\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"stake\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"snapshotETH\",\n                        \"type\": \"uint256\"\n                    },\n                    {\n                        \"internalType\": \"uint256\",\n                        \"name\": \"snapshotLUSDDebt\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                \"internalType\": \"struct MultiTroveGetter.CombinedTroveData[]\",\n                \"name\": \"_troves\",\n                \"type\": \"tuple[]\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sortedTroves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ISortedTroves\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract TroveManager\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_lastGoodPrice\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LastGoodPriceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"enum PriceFeed.Status\",\n                \"name\": \"newStatus\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"name\": \"PriceFeedStatusChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"ETHUSD_TELLOR_REQ_ID\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MAX_PRICE_DEVIATION_FROM_PREVIOUS_ROUND\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MAX_PRICE_DIFFERENCE_BETWEEN_ORACLES\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"TARGET_DIGITS\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"TELLOR_DIGITS\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"TIMEOUT\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"fetchPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastGoodPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceAggregator\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract AggregatorV3Interface\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_priceAggregatorAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_tellorCallerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"status\",\n        \"outputs\": [\n            {\n                \"internalType\": \"enum PriceFeed.Status\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"tellorCaller\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ITellorCaller\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_lastGoodPrice\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LastGoodPriceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"fetchPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"price\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setPrice\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_NICR\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"NodeAdded\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"NodeRemoved\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_sortedDoublyLLAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"SortedTrovesAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperationsAddress\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"contains\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"data\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"head\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"tail\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"maxSize\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"size\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_NICR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_prevId\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_nextId\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"findInsertPosition\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getFirst\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getLast\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getMaxSize\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getNext\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getPrev\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getSize\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_NICR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_prevId\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_nextId\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"insert\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isEmpty\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isFull\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_newNICR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_prevId\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_nextId\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"reInsert\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_id\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"remove\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_size\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setParams\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ITroveManager\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_NICR\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_prevId\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_nextId\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"validInsertPosition\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newActivePoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"ActivePoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newBorrowerOperationsAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"BorrowerOperationsAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newCommunityIssuanceAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"CommunityIssuanceAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newDefaultPoolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"DefaultPoolAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_P\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_S\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_G\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"DepositSnapshotUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_ETH\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LUSDLoss\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ETHGainWithdrawn\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"_currentEpoch\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"name\": \"EpochUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"EtherSent\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_kickbackRate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"FrontEndRegistered\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_P\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_G\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"FrontEndSnapshotUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newFrontEndStake\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"FrontEndStakeChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"FrontEndTagSet\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_G\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"_epoch\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"_scale\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"name\": \"G_Updated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LQTY\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LQTYPaidToDepositor\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_LQTY\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"LQTYPaidToFrontEnd\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newLUSDTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LUSDTokenAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_P\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"P_Updated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newPriceFeedAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"PriceFeedAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_S\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"_epoch\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"_scale\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"name\": \"S_Updated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint128\",\n                \"name\": \"_currentScale\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"name\": \"ScaleUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newSortedTrovesAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"SortedTrovesAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"StabilityPoolETHBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"StabilityPoolLUSDBalanceUpdated\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_newTroveManagerAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"TroveManagerAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"_newDeposit\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"UserDepositChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"BORROWING_FEE_FLOOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"CCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"DECIMAL_PRECISION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"LUSD_GAS_COMPENSATION\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MCR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"MIN_NET_DEBT\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"P\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"PERCENT_DIVISOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"SCALE_FACTOR\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"_100pct\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"activePool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IActivePool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"borrowerOperations\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IBorrowerOperations\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"communityIssuance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ICommunityIssuance\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentEpoch\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"currentScale\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"defaultPool\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IDefaultPool\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"depositSnapshots\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"S\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"P\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"G\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"scale\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"epoch\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"deposits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"initialValue\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"frontEndTag\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"name\": \"epochToScaleToG\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"name\": \"epochToScaleToSum\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"frontEndSnapshots\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"S\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"P\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"G\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"scale\",\n                \"type\": \"uint128\"\n            },\n            {\n                \"internalType\": \"uint128\",\n                \"name\": \"epoch\",\n                \"type\": \"uint128\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"frontEndStakes\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"frontEnds\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"kickbackRate\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"registered\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getCompoundedFrontEndStake\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getCompoundedLUSDDeposit\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getDepositorETHGain\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_depositor\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getDepositorLQTYGain\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getETH\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemColl\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemColl\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getEntireSystemDebt\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"entireSystemDebt\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_frontEnd\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"getFrontEndLQTYGain\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"getTotalLUSDDeposits\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastETHError_Offset\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastLQTYError\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastLUSDLossError_Offset\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lusdToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILUSDToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_debtToOffset\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_collToAdd\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"offset\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"priceFeed\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IPriceFeed\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_frontEndTag\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"provideToSP\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_kickbackRate\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"registerFrontEnd\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_borrowerOperationsAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_troveManagerAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_activePoolAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lusdTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_sortedTrovesAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_priceFeedAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_communityIssuanceAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddresses\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"sortedTroves\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ISortedTroves\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"troveManager\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ITroveManager\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_upperHint\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lowerHint\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"withdrawETHGainToTrove\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdrawFromSP\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"stateMutability\": \"payable\",\n        \"type\": \"receive\"\n    }\n]\n", "[]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"LQTYTokenAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"previousOwner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"newOwner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"OwnershipTransferred\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RewardAdded\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"user\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"reward\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"RewardPaid\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"user\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Staked\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"_uniTokenAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"UniTokenAddressChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"user\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Withdrawn\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"NAME\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"claimReward\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"duration\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"earned\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"isOwner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastTimeRewardApplicable\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lastUpdateTime\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"lqtyToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract ILQTYToken\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"periodFinish\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"rewardPerToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"rewardPerTokenStored\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"rewardRate\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"rewards\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_lqtyTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"_uniTokenAddress\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"_duration\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setParams\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"stake\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"uniToken\",\n        \"outputs\": [\n            {\n                \"internalType\": \"contract IERC20\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"userRewardPerTokenPaid\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"withdraw\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"withdrawAndClaim\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "[\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"name\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"symbol\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"initialAccount\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"initialBalance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"allowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approve\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"approveInternal\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"burn\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint8\",\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"subtractedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"decreaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"spender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"addedValue\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"increaseAllowance\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"mint\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"sender\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferFrom\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"from\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"to\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transferInternal\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n", "import { JsonFragment, LogDescription } from \"@ethersproject/abi\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Log } from \"@ethersproject/abstract-provider\";\n\nimport {\n  Contract,\n  ContractInterface,\n  ContractFunction,\n  Overrides,\n  CallOverrides,\n  PopulatedTransaction,\n  ContractTransaction\n} from \"@ethersproject/contracts\";\n\nimport activePoolAbi from \"../abi/ActivePool.json\";\nimport borrowerOperationsAbi from \"../abi/BorrowerOperations.json\";\nimport troveManagerAbi from \"../abi/TroveManager.json\";\nimport lusdTokenAbi from \"../abi/LUSDToken.json\";\nimport collSurplusPoolAbi from \"../abi/CollSurplusPool.json\";\nimport communityIssuanceAbi from \"../abi/CommunityIssuance.json\";\nimport defaultPoolAbi from \"../abi/DefaultPool.json\";\nimport lqtyTokenAbi from \"../abi/LQTYToken.json\";\nimport hintHelpersAbi from \"../abi/HintHelpers.json\";\nimport lockupContractFactoryAbi from \"../abi/LockupContractFactory.json\";\nimport lqtyStakingAbi from \"../abi/LQTYStaking.json\";\nimport multiTroveGetterAbi from \"../abi/MultiTroveGetter.json\";\nimport priceFeedAbi from \"../abi/PriceFeed.json\";\nimport priceFeedTestnetAbi from \"../abi/PriceFeedTestnet.json\";\nimport sortedTrovesAbi from \"../abi/SortedTroves.json\";\nimport stabilityPoolAbi from \"../abi/StabilityPool.json\";\nimport gasPoolAbi from \"../abi/GasPool.json\";\nimport unipoolAbi from \"../abi/Unipool.json\";\nimport iERC20Abi from \"../abi/IERC20.json\";\nimport erc20MockAbi from \"../abi/ERC20Mock.json\";\n\nimport {\n  ActivePool,\n  BorrowerOperations,\n  TroveManager,\n  LUSDToken,\n  CollSurplusPool,\n  CommunityIssuance,\n  DefaultPool,\n  LQTYToken,\n  HintHelpers,\n  LockupContractFactory,\n  LQTYStaking,\n  MultiTroveGetter,\n  PriceFeed,\n  PriceFeedTestnet,\n  SortedTroves,\n  StabilityPool,\n  GasPool,\n  Unipool,\n  ERC20Mock,\n  IERC20\n} from \"../types\";\n\nimport { EthersProvider, EthersSigner } from \"./types\";\n\nexport interface _TypedLogDescription<T> extends Omit<LogDescription, \"args\"> {\n  args: T;\n}\n\ntype BucketOfFunctions = Record<string, (...args: unknown[]) => never>;\n\n// Removes unsafe index signatures from an Ethers contract type\nexport type _TypeSafeContract<T> = Pick<\n  T,\n  {\n    [P in keyof T]: BucketOfFunctions extends T[P] ? never : P;\n  } extends {\n    [_ in keyof T]: infer U;\n  }\n  ? U\n  : never\n>;\n\ntype EstimatedContractFunction<R = unknown, A extends unknown[] = unknown[], O = Overrides> = (\n  overrides: O,\n  adjustGas: (gas: BigNumber) => BigNumber,\n  ...args: A\n) => Promise<R>;\n\ntype CallOverridesArg = [overrides?: CallOverrides];\n\ntype TypedContract<T extends Contract, U, V> = _TypeSafeContract<T> &\n  U &\n  {\n    [P in keyof V]: V[P] extends (...args: infer A) => unknown\n    ? (...args: A) => Promise<ContractTransaction>\n    : never;\n  } & {\n    readonly callStatic: {\n      [P in keyof V]: V[P] extends (...args: [...infer A, never]) => infer R\n      ? (...args: [...A, ...CallOverridesArg]) => R\n      : never;\n    };\n\n    readonly estimateGas: {\n      [P in keyof V]: V[P] extends (...args: infer A) => unknown\n      ? (...args: A) => Promise<BigNumber>\n      : never;\n    };\n\n    readonly populateTransaction: {\n      [P in keyof V]: V[P] extends (...args: infer A) => unknown\n      ? (...args: A) => Promise<PopulatedTransaction>\n      : never;\n    };\n\n    readonly estimateAndPopulate: {\n      [P in keyof V]: V[P] extends (...args: [...infer A, infer O | undefined]) => unknown\n      ? EstimatedContractFunction<PopulatedTransaction, A, O>\n      : never;\n    };\n  };\n\nconst buildEstimatedFunctions = <T>(\n  estimateFunctions: Record<string, ContractFunction<BigNumber>>,\n  functions: Record<string, ContractFunction<T>>\n): Record<string, EstimatedContractFunction<T>> =>\n  Object.fromEntries(\n    Object.keys(estimateFunctions).map(functionName => [\n      functionName,\n      async (overrides, adjustEstimate, ...args) => {\n        if (overrides.gasLimit === undefined) {\n          const estimatedGas = await estimateFunctions[functionName](...args, overrides);\n\n          overrides = {\n            ...overrides,\n            gasLimit: adjustEstimate(estimatedGas)\n          };\n        }\n\n        return functions[functionName](...args, overrides);\n      }\n    ])\n  );\n\nexport class _LiquityContract extends Contract {\n  readonly estimateAndPopulate: Record<string, EstimatedContractFunction<PopulatedTransaction>>;\n\n  constructor(\n    addressOrName: string,\n    contractInterface: ContractInterface,\n    signerOrProvider?: EthersSigner | EthersProvider\n  ) {\n    super(addressOrName, contractInterface, signerOrProvider);\n\n    // this.estimateAndCall = buildEstimatedFunctions(this.estimateGas, this);\n    this.estimateAndPopulate = buildEstimatedFunctions(this.estimateGas, this.populateTransaction);\n  }\n\n  extractEvents(logs: Log[], name: string): _TypedLogDescription<unknown>[] {\n    return logs\n      .filter(log => log.address === this.address)\n      .map(log => this.interface.parseLog(log))\n      .filter(e => e.name === name);\n  }\n}\n\n/** @internal */\nexport type _TypedLiquityContract<T = unknown, U = unknown> = TypedContract<_LiquityContract, T, U>;\n\n/** @internal */\nexport interface _LiquityContracts {\n  activePool: ActivePool;\n  borrowerOperations: BorrowerOperations;\n  troveManager: TroveManager;\n  lusdToken: LUSDToken;\n  collSurplusPool: CollSurplusPool;\n  communityIssuance: CommunityIssuance;\n  defaultPool: DefaultPool;\n  lqtyToken: LQTYToken;\n  hintHelpers: HintHelpers;\n  lockupContractFactory: LockupContractFactory;\n  lqtyStaking: LQTYStaking;\n  multiTroveGetter: MultiTroveGetter;\n  priceFeed: PriceFeed | PriceFeedTestnet;\n  sortedTroves: SortedTroves;\n  stabilityPool: StabilityPool;\n  gasPool: GasPool;\n  unipool: Unipool;\n  uniToken: IERC20 | ERC20Mock;\n}\n\n/** @internal */\nexport const _priceFeedIsTestnet = (\n  priceFeed: PriceFeed | PriceFeedTestnet\n): priceFeed is PriceFeedTestnet => \"setPrice\" in priceFeed;\n\n/** @internal */\nexport const _uniTokenIsMock = (uniToken: IERC20 | ERC20Mock): uniToken is ERC20Mock =>\n  \"mint\" in uniToken;\n\ntype LiquityContractsKey = keyof _LiquityContracts;\n\n/** @internal */\nexport type _LiquityContractAddresses = Record<LiquityContractsKey, string>;\n\ntype LiquityContractAbis = Record<LiquityContractsKey, JsonFragment[]>;\n\nconst getAbi = (priceFeedIsTestnet: boolean, uniTokenIsMock: boolean): LiquityContractAbis => ({\n  activePool: activePoolAbi,\n  borrowerOperations: borrowerOperationsAbi,\n  troveManager: troveManagerAbi,\n  lusdToken: lusdTokenAbi,\n  communityIssuance: communityIssuanceAbi,\n  defaultPool: defaultPoolAbi,\n  lqtyToken: lqtyTokenAbi,\n  hintHelpers: hintHelpersAbi,\n  lockupContractFactory: lockupContractFactoryAbi,\n  lqtyStaking: lqtyStakingAbi,\n  multiTroveGetter: multiTroveGetterAbi,\n  priceFeed: priceFeedIsTestnet ? priceFeedTestnetAbi : priceFeedAbi,\n  sortedTroves: sortedTrovesAbi,\n  stabilityPool: stabilityPoolAbi,\n  gasPool: gasPoolAbi,\n  collSurplusPool: collSurplusPoolAbi,\n  unipool: unipoolAbi,\n  uniToken: uniTokenIsMock ? erc20MockAbi : iERC20Abi\n});\n\nconst mapLiquityContracts = <T, U>(\n  contracts: Record<LiquityContractsKey, T>,\n  f: (t: T, key: LiquityContractsKey) => U\n) =>\n  Object.fromEntries(\n    Object.entries(contracts).map(([key, t]) => {\n      const res = [key, f(t, key as LiquityContractsKey)];\n      console.debug(\"lib-ethers: mapLiquityContracts() res =\", res);\n      return res;\n    })\n  ) as Record<LiquityContractsKey, U>;\n\n/** @internal */\nexport interface _LiquityDeploymentJSON {\n  readonly chainId: number;\n  readonly addresses: _LiquityContractAddresses;\n  readonly version: string;\n  readonly deploymentDate: number;\n  readonly startBlock: number;\n  readonly bootstrapPeriod: number;\n  readonly totalStabilityPoolLQTYReward: string;\n  readonly liquidityMiningLQTYRewardRate: string;\n  readonly _priceFeedIsTestnet: boolean;\n  readonly _uniTokenIsMock: boolean;\n  readonly _isDev: boolean;\n}\n\n/** @internal */\nexport const _connectToContracts = (\n  signerOrProvider: EthersSigner | EthersProvider,\n  { addresses, _priceFeedIsTestnet, _uniTokenIsMock }: _LiquityDeploymentJSON\n): _LiquityContracts => {\n  console.debug(\"lib-ethers: 检查合约是否存在 _connectToContracts() 参数\", addresses);\n\n  const abi = getAbi(_priceFeedIsTestnet, _uniTokenIsMock);\n\n  return mapLiquityContracts(\n    addresses,\n    (address, key) => {\n      console.debug(\"lib-ethers: 检查合约是否存在 遍历\", address, key, !!address, address === \"\");\n\n      if (address) {\n        const res = new _LiquityContract(address, abi[key], signerOrProvider) as _TypedLiquityContract;\n        return res;\n      }\n    }\n  ) as _LiquityContracts;\n};\n", "import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { CallOverrides, Contract } from \"@ethersproject/contracts\";\n\nimport { _TypeSafeContract } from \"./contracts\";\n\nconst multicallAbi = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCurrentBlockTimestamp\",\n    outputs: [\n      {\n        name: \"timestamp\",\n        type: \"uint256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nconst multicallAddress = {\n  1: \"0xeefba1e63905ef1d7acba5a8513c70307c1ce441\",\n  3: \"0x53c43764255c17bd724f74c4ef150724ac50a3ed\",\n  4: \"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821\",\n  5: \"0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e\",\n  42: \"0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a\"\n};\n\nconst hasMulticall = (chainId: number): chainId is keyof typeof multicallAddress =>\n  chainId in multicallAddress;\n\nexport interface _Multicall extends _TypeSafeContract<Contract> {\n  getCurrentBlockTimestamp(overrides?: CallOverrides): Promise<BigNumber>;\n}\n\nexport const _connectToMulticall = (\n  signerOrProvider: Signer | Provider,\n  chainId: number\n): _Multicall | undefined =>\n  hasMulticall(chainId)\n    ? ((new Contract(\n        multicallAddress[chainId],\n        multicallAbi,\n        signerOrProvider\n      ) as unknown) as _Multicall)\n    : undefined;\n", "import { Block, BlockTag } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\n\nimport { Decimal } from \"@liquity/lib-base\";\n\nimport devOrNull from \"../deployments/dev.json\";\nimport goerli from \"../deployments/goerli.json\";\nimport kovan from \"../deployments/kovan.json\";\nimport rinkeby from \"../deployments/rinkeby.json\";\nimport ropsten from \"../deployments/ropsten.json\";\nimport mainnet from \"../deployments/mainnet.json\";\nimport kiln from \"../deployments/kiln.json\";\nimport iotexTestnet from \"../deployments/iotexTestnet.json\";\n\nimport { numberify, panic } from \"./_utils\";\nimport { EthersProvider, EthersSigner } from \"./types\";\n\nimport {\n  _connectToContracts,\n  _LiquityContractAddresses,\n  _LiquityContracts,\n  _LiquityDeploymentJSON\n} from \"./contracts\";\n\nimport { _connectToMulticall, _Multicall } from \"./_Multicall\";\n\nconst dev = devOrNull as _LiquityDeploymentJSON | null;\n\nconst deployments: {\n  [chainId: number]: _LiquityDeploymentJSON | undefined;\n} = {\n  [mainnet.chainId]: mainnet,\n  [ropsten.chainId]: ropsten,\n  [rinkeby.chainId]: rinkeby,\n  [goerli.chainId]: goerli,\n  [kovan.chainId]: kovan,\n  [kiln.chainId]: kiln,\n  [iotexTestnet.chainId]: iotexTestnet,\n\n  ...(dev !== null ? { [dev.chainId]: dev } : {})\n};\n\ndeclare const brand: unique symbol;\n\nconst branded = <T>(t: Omit<T, typeof brand>): T => t as T;\n\n/**\n * Information about a connection to the Liquity protocol.\n *\n * @remarks\n * Provided for debugging / informational purposes.\n *\n * Exposed through {@link ReadableEthersLiquity.connection} and {@link EthersLiquity.connection}.\n *\n * @public\n */\nexport interface EthersLiquityConnection extends EthersLiquityConnectionOptionalParams {\n  /** Ethers `Provider` used for connecting to the network. */\n  readonly provider: EthersProvider;\n\n  /** Ethers `Signer` used for sending transactions. */\n  readonly signer?: EthersSigner;\n\n  /** Chain ID of the connected network. */\n  readonly chainId: number;\n\n  /** Version of the Liquity contracts (Git commit hash). */\n  readonly version: string;\n\n  /** Date when the Liquity contracts were deployed. */\n  readonly deploymentDate: Date;\n\n  /** Number of block in which the first Liquity contract was deployed. */\n  readonly startBlock: number;\n\n  /** Time period (in seconds) after `deploymentDate` during which redemptions are disabled. */\n  readonly bootstrapPeriod: number;\n\n  /** Total amount of LQTY allocated for rewarding stability depositors. */\n  readonly totalStabilityPoolLQTYReward: Decimal;\n\n  /** Amount of LQTY collectively rewarded to stakers of the liquidity mining pool per second. */\n  readonly liquidityMiningLQTYRewardRate: Decimal;\n\n  /** A mapping of Liquity contracts' names to their addresses. */\n  readonly addresses: Record<string, string>;\n\n  /** @internal */\n  readonly _priceFeedIsTestnet: boolean;\n\n  /** @internal */\n  readonly _isDev: boolean;\n\n  /** @internal */\n  readonly [brand]: unique symbol;\n}\n\n/** @internal */\nexport interface _InternalEthersLiquityConnection extends EthersLiquityConnection {\n  readonly addresses: _LiquityContractAddresses;\n  readonly _contracts: _LiquityContracts;\n  readonly _multicall?: _Multicall;\n}\n\nconst connectionFrom = (\n  provider: EthersProvider,\n  signer: EthersSigner | undefined,\n  _contracts: _LiquityContracts,\n  _multicall: _Multicall | undefined,\n  {\n    deploymentDate,\n    totalStabilityPoolLQTYReward,\n    liquidityMiningLQTYRewardRate,\n    ...deployment\n  }: _LiquityDeploymentJSON,\n  optionalParams?: EthersLiquityConnectionOptionalParams\n): _InternalEthersLiquityConnection => {\n  if (\n    optionalParams &&\n    optionalParams.useStore !== undefined &&\n    !validStoreOptions.includes(optionalParams.useStore)\n  ) {\n    throw new Error(`Invalid useStore value ${optionalParams.useStore}`);\n  }\n\n  return branded({\n    provider,\n    signer,\n    _contracts,\n    _multicall,\n    deploymentDate: new Date(deploymentDate),\n    totalStabilityPoolLQTYReward: Decimal.from(totalStabilityPoolLQTYReward),\n    liquidityMiningLQTYRewardRate: Decimal.from(liquidityMiningLQTYRewardRate),\n    ...deployment,\n    ...optionalParams\n  });\n};\n\n/** @internal */\nexport const _getContracts = (connection: EthersLiquityConnection): _LiquityContracts =>\n  (connection as _InternalEthersLiquityConnection)._contracts;\n\nconst getMulticall = (connection: EthersLiquityConnection): _Multicall | undefined =>\n  (connection as _InternalEthersLiquityConnection)._multicall;\n\nconst getTimestampFromBlock = ({ timestamp }: Block) => timestamp;\n\n/** @internal */\nexport const _getBlockTimestamp = (\n  connection: EthersLiquityConnection,\n  blockTag: BlockTag = \"latest\"\n): Promise<number> =>\n  // Get the timestamp via a contract call whenever possible, to make it batchable with other calls\n  getMulticall(connection)?.getCurrentBlockTimestamp({ blockTag }).then(numberify) ??\n  _getProvider(connection).getBlock(blockTag).then(getTimestampFromBlock);\n\n/** @internal */\nexport const _requireSigner = (connection: EthersLiquityConnection): EthersSigner =>\n  connection.signer ?? panic(new Error(\"Must be connected through a Signer\"));\n\n/** @internal */\nexport const _getProvider = (connection: EthersLiquityConnection): EthersProvider =>\n  connection.provider;\n\n// TODO parameterize error message?\n/** @internal */\nexport const _requireAddress = (\n  connection: EthersLiquityConnection,\n  overrides?: { from?: string }\n): string =>\n  overrides?.from ?? connection.userAddress ?? panic(new Error(\"A user address is required\"));\n\n/** @internal */\nexport const _requireFrontendAddress = (connection: EthersLiquityConnection): string =>\n  connection.frontendTag ?? panic(new Error(\"A frontend address is required\"));\n\n/** @internal */\nexport const _usingStore = (\n  connection: EthersLiquityConnection\n): connection is EthersLiquityConnection & { useStore: EthersLiquityStoreOption } =>\n  connection.useStore !== undefined;\n\n/**\n * Thrown when trying to connect to a network where Liquity is not deployed.\n *\n * @remarks\n * Thrown by {@link ReadableEthersLiquity.(connect:2)} and {@link EthersLiquity.(connect:2)}.\n *\n * @public\n */\nexport class UnsupportedNetworkError extends Error {\n  /** Chain ID of the unsupported network. */\n  readonly chainId: number;\n\n  /** @internal */\n  constructor(chainId: number) {\n    super(`Unsupported network (chainId = ${chainId})`);\n    this.name = \"UnsupportedNetworkError\";\n    this.chainId = chainId;\n  }\n}\n\nconst getProviderAndSigner = (\n  signerOrProvider: EthersSigner | EthersProvider\n): [provider: EthersProvider, signer: EthersSigner | undefined] => {\n  const provider: EthersProvider = Signer.isSigner(signerOrProvider)\n    ? signerOrProvider.provider ?? panic(new Error(\"Signer must have a Provider\"))\n    : signerOrProvider;\n\n  const signer = Signer.isSigner(signerOrProvider) ? signerOrProvider : undefined;\n\n  return [provider, signer];\n};\n\n/** @internal */\nexport const _connectToDeployment = (\n  deployment: _LiquityDeploymentJSON,\n  signerOrProvider: EthersSigner | EthersProvider,\n  optionalParams?: EthersLiquityConnectionOptionalParams\n): EthersLiquityConnection =>\n  connectionFrom(\n    ...getProviderAndSigner(signerOrProvider),\n    _connectToContracts(signerOrProvider, deployment),\n    undefined,\n    deployment,\n    optionalParams\n  );\n\n/**\n * Possible values for the optional\n * {@link EthersLiquityConnectionOptionalParams.useStore | useStore}\n * connection parameter.\n *\n * @remarks\n * Currently, the only supported value is `\"blockPolled\"`, in which case a\n * {@link BlockPolledLiquityStore} will be created.\n *\n * @public\n */\nexport type EthersLiquityStoreOption = \"blockPolled\";\n\nconst validStoreOptions = [\"blockPolled\"];\n\n/**\n * Optional parameters of {@link ReadableEthersLiquity.(connect:2)} and\n * {@link EthersLiquity.(connect:2)}.\n *\n * @public\n */\nexport interface EthersLiquityConnectionOptionalParams {\n  /**\n   * Address whose Trove, Stability Deposit, LQTY Stake and balances will be read by default.\n   *\n   * @remarks\n   * For example {@link EthersLiquity.getTrove | getTrove(address?)} will return the Trove owned by\n   * `userAddress` when the `address` parameter is omitted.\n   *\n   * Should be omitted when connecting through a {@link EthersSigner | Signer}. Instead `userAddress`\n   * will be automatically determined from the `Signer`.\n   */\n  readonly userAddress?: string;\n\n  /**\n   * Address that will receive LQTY rewards from newly created Stability Deposits by default.\n   *\n   * @remarks\n   * For example\n   * {@link EthersLiquity.depositLUSDInStabilityPool | depositLUSDInStabilityPool(amount, frontendTag?)}\n   * will tag newly made Stability Deposits with this address when its `frontendTag` parameter is\n   * omitted.\n   */\n  readonly frontendTag?: string;\n\n  /**\n   * Create a {@link @liquity/lib-base#LiquityStore} and expose it as the `store` property.\n   *\n   * @remarks\n   * When set to one of the available {@link EthersLiquityStoreOption | options},\n   * {@link ReadableEthersLiquity.(connect:2) | ReadableEthersLiquity.connect()} will return a\n   * {@link ReadableEthersLiquityWithStore}, while\n   * {@link EthersLiquity.(connect:2) | EthersLiquity.connect()} will return an\n   * {@link EthersLiquityWithStore}.\n   *\n   * Note that the store won't start monitoring the blockchain until its\n   * {@link @liquity/lib-base#LiquityStore.start | start()} function is called.\n   */\n  readonly useStore?: EthersLiquityStoreOption;\n}\n\n/** @internal */\nexport function _connectByChainId<T>(\n  provider: EthersProvider,\n  signer: EthersSigner | undefined,\n  chainId: number,\n  optionalParams: EthersLiquityConnectionOptionalParams & { useStore: T }\n): EthersLiquityConnection & { useStore: T };\n\n/** @internal */\nexport function _connectByChainId(\n  provider: EthersProvider,\n  signer: EthersSigner | undefined,\n  chainId: number,\n  optionalParams?: EthersLiquityConnectionOptionalParams\n): EthersLiquityConnection;\n\n/** @internal */\nexport function _connectByChainId(\n  provider: EthersProvider,\n  signer: EthersSigner | undefined,\n  chainId: number,\n  optionalParams?: EthersLiquityConnectionOptionalParams\n): EthersLiquityConnection {\n  console.debug(\"lib-ethers: deployments =\", deployments);\n\n  const deployment: _LiquityDeploymentJSON =\n    deployments[chainId] ?? panic(new UnsupportedNetworkError(chainId));\n\n  return connectionFrom(\n    provider,\n    signer,\n    _connectToContracts(provider, deployment),\n    _connectToMulticall(provider, chainId),\n    deployment,\n    optionalParams\n  );\n}\n\n/** @internal */\nexport const _connect = async (\n  signerOrProvider: EthersSigner | EthersProvider,\n  optionalParams?: EthersLiquityConnectionOptionalParams\n): Promise<EthersLiquityConnection> => {\n  const [provider, signer] = getProviderAndSigner(signerOrProvider);\n\n  if (signer) {\n    if (optionalParams?.userAddress !== undefined) {\n      throw new Error(\"Can't override userAddress when connecting through Signer\");\n    }\n\n    optionalParams = {\n      ...optionalParams,\n      userAddress: await signer.getAddress()\n    };\n  }\n\n  return _connectByChainId(provider, signer, (await provider.getNetwork()).chainId, optionalParams);\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "import assert from \"assert\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\nimport {\n  Decimal,\n  LiquityStoreState,\n  LiquityStoreBaseState,\n  TroveWithPendingRedistribution,\n  StabilityDeposit,\n  LQTYStake,\n  LiquityStore,\n  Fees\n} from \"@liquity/lib-base\";\n\nimport { decimalify, promiseAllValues } from \"./_utils\";\nimport { ReadableEthersLiquity } from \"./ReadableEthersLiquity\";\nimport { EthersLiquityConnection, _getProvider } from \"./EthersLiquityConnection\";\nimport { EthersCallOverrides, EthersProvider } from \"./types\";\n\n/**\n * Extra state added to {@link @liquity/lib-base#LiquityStoreState} by\n * {@link BlockPolledLiquityStore}.\n *\n * @public\n */\nexport interface BlockPolledLiquityStoreExtraState {\n  /**\n   * Number of block that the store state was fetched from.\n   *\n   * @remarks\n   * May be undefined when the store state is fetched for the first time.\n   */\n  blockTag?: number;\n\n  /**\n   * Timestamp of latest block (number of seconds since epoch).\n   */\n  blockTimestamp: number;\n\n  /** @internal */\n  _feesFactory: (blockTimestamp: number, recoveryMode: boolean) => Fees;\n}\n\n/**\n * The type of {@link BlockPolledLiquityStore}'s\n * {@link @liquity/lib-base#LiquityStore.state | state}.\n *\n * @public\n */\nexport type BlockPolledLiquityStoreState = LiquityStoreState<BlockPolledLiquityStoreExtraState>;\n\n/**\n * Ethers-based {@link @liquity/lib-base#LiquityStore} that updates state whenever there's a new\n * block.\n *\n * @public\n */\nexport class BlockPolledLiquityStore extends LiquityStore<BlockPolledLiquityStoreExtraState> {\n  readonly connection: EthersLiquityConnection;\n\n  private readonly _readable: ReadableEthersLiquity;\n  private readonly _provider: EthersProvider;\n\n  constructor(readable: ReadableEthersLiquity) {\n    super();\n\n    this.connection = readable.connection;\n    this._readable = readable;\n    this._provider = _getProvider(readable.connection);\n  }\n\n  private async _getRiskiestTroveBeforeRedistribution(\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution> {\n    const riskiestTroves = await this._readable.getTroves(\n      { first: 1, sortedBy: \"ascendingCollateralRatio\", beforeRedistribution: true },\n      overrides\n    );\n\n    if (riskiestTroves.length === 0) {\n      return new TroveWithPendingRedistribution(AddressZero, \"nonExistent\");\n    }\n\n    return riskiestTroves[0];\n  }\n\n  private async _get(\n    blockTag?: number\n  ): Promise<[baseState: LiquityStoreBaseState, extraState: BlockPolledLiquityStoreExtraState]> {\n    const { userAddress, frontendTag } = this.connection;\n\n    const {\n      blockTimestamp,\n      _feesFactory,\n      calculateRemainingLQTY,\n      ...baseState\n    } = await promiseAllValues({\n      blockTimestamp: this._readable._getBlockTimestamp(blockTag),\n      _feesFactory: this._readable._getFeesFactory({ blockTag }),\n      calculateRemainingLQTY: this._readable._getRemainingLiquidityMiningLQTYRewardCalculator({\n        blockTag\n      }),\n\n      price: this._readable.getPrice({ blockTag }),\n      numberOfTroves: this._readable.getNumberOfTroves({ blockTag }),\n      totalRedistributed: this._readable.getTotalRedistributed({ blockTag }),\n      total: this._readable.getTotal({ blockTag }),\n      lusdInStabilityPool: this._readable.getLUSDInStabilityPool({ blockTag }),\n      totalStakedLQTY: this._readable.getTotalStakedLQTY({ blockTag }),\n      _riskiestTroveBeforeRedistribution: this._getRiskiestTroveBeforeRedistribution({ blockTag }),\n      totalStakedUniTokens: this._readable.getTotalStakedUniTokens({ blockTag }),\n      remainingStabilityPoolLQTYReward: this._readable.getRemainingStabilityPoolLQTYReward({\n        blockTag\n      }),\n\n      frontend: frontendTag\n        ? this._readable.getFrontendStatus(frontendTag, { blockTag })\n        : { status: \"unregistered\" as const },\n\n      ...(userAddress\n        ? {\n            accountBalance: this._provider.getBalance(userAddress, blockTag).then(decimalify),\n            lusdBalance: this._readable.getLUSDBalance(userAddress, { blockTag }),\n            lqtyBalance: this._readable.getLQTYBalance(userAddress, { blockTag }),\n            uniTokenBalance: this._readable.getUniTokenBalance(userAddress, { blockTag }),\n            uniTokenAllowance: this._readable.getUniTokenAllowance(userAddress, { blockTag }),\n            liquidityMiningStake: this._readable.getLiquidityMiningStake(userAddress, { blockTag }),\n            liquidityMiningLQTYReward: this._readable.getLiquidityMiningLQTYReward(userAddress, {\n              blockTag\n            }),\n            collateralSurplusBalance: this._readable.getCollateralSurplusBalance(userAddress, {\n              blockTag\n            }),\n            troveBeforeRedistribution: this._readable.getTroveBeforeRedistribution(userAddress, {\n              blockTag\n            }),\n            stabilityDeposit: this._readable.getStabilityDeposit(userAddress, { blockTag }),\n            lqtyStake: this._readable.getLQTYStake(userAddress, { blockTag }),\n            ownFrontend: this._readable.getFrontendStatus(userAddress, { blockTag })\n          }\n        : {\n            accountBalance: Decimal.ZERO,\n            lusdBalance: Decimal.ZERO,\n            lqtyBalance: Decimal.ZERO,\n            uniTokenBalance: Decimal.ZERO,\n            uniTokenAllowance: Decimal.ZERO,\n            liquidityMiningStake: Decimal.ZERO,\n            liquidityMiningLQTYReward: Decimal.ZERO,\n            collateralSurplusBalance: Decimal.ZERO,\n            troveBeforeRedistribution: new TroveWithPendingRedistribution(\n              AddressZero,\n              \"nonExistent\"\n            ),\n            stabilityDeposit: new StabilityDeposit(\n              Decimal.ZERO,\n              Decimal.ZERO,\n              Decimal.ZERO,\n              Decimal.ZERO,\n              AddressZero\n            ),\n            lqtyStake: new LQTYStake(),\n            ownFrontend: { status: \"unregistered\" as const }\n          })\n    });\n\n    return [\n      {\n        ...baseState,\n        _feesInNormalMode: _feesFactory(blockTimestamp, false),\n        remainingLiquidityMiningLQTYReward: calculateRemainingLQTY(blockTimestamp)\n      },\n      {\n        blockTag,\n        blockTimestamp,\n        _feesFactory\n      }\n    ];\n  }\n\n  /** @internal @override */\n  protected _doStart(): () => void {\n    this._get().then(state => {\n      if (!this._loaded) {\n        this._load(...state);\n      }\n    });\n\n    const handleBlock = async (blockTag: number) => {\n      const state = await this._get(blockTag);\n\n      if (this._loaded) {\n        this._update(...state);\n      } else {\n        this._load(...state);\n      }\n    };\n\n    let latestBlock: number | undefined;\n    let timerId: ReturnType<typeof setTimeout> | undefined;\n\n    const blockListener = (blockTag: number) => {\n      latestBlock = Math.max(blockTag, latestBlock ?? blockTag);\n\n      if (timerId !== undefined) {\n        clearTimeout(timerId);\n      }\n\n      timerId = setTimeout(() => {\n        assert(latestBlock !== undefined);\n        handleBlock(latestBlock);\n      }, 50);\n    };\n\n    this._provider.on(\"block\", blockListener);\n\n    return () => {\n      this._provider.off(\"block\", blockListener);\n\n      if (timerId !== undefined) {\n        clearTimeout(timerId);\n      }\n    };\n  }\n\n  /** @internal @override */\n  protected _reduceExtra(\n    oldState: BlockPolledLiquityStoreExtraState,\n    stateUpdate: Partial<BlockPolledLiquityStoreExtraState>\n  ): BlockPolledLiquityStoreExtraState {\n    return {\n      blockTag: stateUpdate.blockTag ?? oldState.blockTag,\n      blockTimestamp: stateUpdate.blockTimestamp ?? oldState.blockTimestamp,\n      _feesFactory: stateUpdate._feesFactory ?? oldState._feesFactory\n    };\n  }\n}\n", "import { BlockTag } from \"@ethersproject/abstract-provider\";\n\nimport {\n  Decimal,\n  Fees,\n  FrontendStatus,\n  LiquityStore,\n  LQTYStake,\n  ReadableLiquity,\n  StabilityDeposit,\n  Trove,\n  TroveListingParams,\n  TroveWithPendingRedistribution,\n  UserTrove,\n  UserTroveStatus\n} from \"@liquity/lib-base\";\n\nimport { MultiTroveGetter } from \"../types\";\n\nimport { decimalify, numberify, panic } from \"./_utils\";\nimport { EthersCallOverrides, EthersProvider, EthersSigner } from \"./types\";\n\nimport {\n  EthersLiquityConnection,\n  EthersLiquityConnectionOptionalParams,\n  EthersLiquityStoreOption,\n  _connect,\n  _getBlockTimestamp,\n  _getContracts,\n  _requireAddress,\n  _requireFrontendAddress\n} from \"./EthersLiquityConnection\";\n\nimport { BlockPolledLiquityStore } from \"./BlockPolledLiquityStore\";\nimport { resolve } from \"path\";\nimport { BigNumber } from \"ethers\";\n\n// TODO: these are constant in the contracts, so it doesn't make sense to make a call for them,\n// but to avoid having to update them here when we change them in the contracts, we could read\n// them once after deployment and save them to LiquityDeployment.\nconst MINUTE_DECAY_FACTOR = Decimal.from(\"0.999037758833783000\");\nconst BETA = Decimal.from(2);\n\nenum BackendTroveStatus {\n  nonExistent,\n  active,\n  closedByOwner,\n  closedByLiquidation,\n  closedByRedemption\n}\n\nconst userTroveStatusFrom = (backendStatus: BackendTroveStatus): UserTroveStatus =>\n  backendStatus === BackendTroveStatus.nonExistent\n    ? \"nonExistent\"\n    : backendStatus === BackendTroveStatus.active\n      ? \"open\"\n      : backendStatus === BackendTroveStatus.closedByOwner\n        ? \"closedByOwner\"\n        : backendStatus === BackendTroveStatus.closedByLiquidation\n          ? \"closedByLiquidation\"\n          : backendStatus === BackendTroveStatus.closedByRedemption\n            ? \"closedByRedemption\"\n            : panic(new Error(`invalid backendStatus ${backendStatus}`));\n\nconst convertToDate = (timestamp: number) => new Date(timestamp * 1000);\n\nconst validSortingOptions = [\"ascendingCollateralRatio\", \"descendingCollateralRatio\"];\n\nconst expectPositiveInt = <K extends string>(obj: { [P in K]?: number }, key: K) => {\n  if (obj[key] !== undefined) {\n    if (!Number.isInteger(obj[key])) {\n      throw new Error(`${key} must be an integer`);\n    }\n\n    if (obj[key] < 0) {\n      throw new Error(`${key} must not be negative`);\n    }\n  }\n};\n\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#ReadableLiquity}.\n *\n * @public\n */\nexport class ReadableEthersLiquity implements ReadableLiquity {\n  readonly connection: EthersLiquityConnection;\n\n  /** @internal */\n  constructor(connection: EthersLiquityConnection) {\n    this.connection = connection;\n  }\n\n  /** @internal */\n  static _from(\n    connection: EthersLiquityConnection & { useStore: \"blockPolled\" }\n  ): ReadableEthersLiquityWithStore<BlockPolledLiquityStore>;\n\n  /** @internal */\n  static _from(connection: EthersLiquityConnection): ReadableEthersLiquity;\n\n  /** @internal */\n  static _from(connection: EthersLiquityConnection): ReadableEthersLiquity {\n    const readable = new ReadableEthersLiquity(connection);\n\n    return connection.useStore === \"blockPolled\"\n      ? new _BlockPolledReadableEthersLiquity(readable)\n      : readable;\n  }\n\n  /** @internal */\n  static connect(\n    signerOrProvider: EthersSigner | EthersProvider,\n    optionalParams: EthersLiquityConnectionOptionalParams & { useStore: \"blockPolled\" }\n  ): Promise<ReadableEthersLiquityWithStore<BlockPolledLiquityStore>>;\n\n  static connect(\n    signerOrProvider: EthersSigner | EthersProvider,\n    optionalParams?: EthersLiquityConnectionOptionalParams\n  ): Promise<ReadableEthersLiquity>;\n\n  /**\n   * Connect to the Liquity protocol and create a `ReadableEthersLiquity` object.\n   *\n   * @param signerOrProvider - Ethers `Signer` or `Provider` to use for connecting to the Ethereum\n   *                           network.\n   * @param optionalParams - Optional parameters that can be used to customize the connection.\n   */\n  static async connect(\n    signerOrProvider: EthersSigner | EthersProvider,\n    optionalParams?: EthersLiquityConnectionOptionalParams\n  ): Promise<ReadableEthersLiquity> {\n    return ReadableEthersLiquity._from(await _connect(signerOrProvider, optionalParams));\n  }\n\n  /**\n   * Check whether this `ReadableEthersLiquity` is a {@link ReadableEthersLiquityWithStore}.\n   */\n  hasStore(): this is ReadableEthersLiquityWithStore;\n\n  /**\n   * Check whether this `ReadableEthersLiquity` is a\n   * {@link ReadableEthersLiquityWithStore}\\<{@link BlockPolledLiquityStore}\\>.\n   */\n  hasStore(store: \"blockPolled\"): this is ReadableEthersLiquityWithStore<BlockPolledLiquityStore>;\n\n  hasStore(): boolean {\n    return false;\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalRedistributed} */\n  async getTotalRedistributed(overrides?: EthersCallOverrides): Promise<Trove> {\n    const { troveManager } = _getContracts(this.connection);\n\n    const [collateral, debt] = await Promise.all([\n      troveManager.L_ETH({ ...overrides }).then(decimalify),\n      troveManager.L_LUSDDebt({ ...overrides }).then(decimalify)\n    ]);\n\n    return new Trove(collateral, debt);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTroveBeforeRedistribution} */\n  async getTroveBeforeRedistribution(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution> {\n    address ??= _requireAddress(this.connection);\n    const { troveManager } = _getContracts(this.connection);\n\n    const [trove, snapshot] = await Promise.all([\n      troveManager.Troves(address, { ...overrides }),\n      troveManager.rewardSnapshots(address, { ...overrides })\n    ]);\n\n    if (trove.status === BackendTroveStatus.active) {\n      return new TroveWithPendingRedistribution(\n        address,\n        userTroveStatusFrom(trove.status),\n        decimalify(trove.coll),\n        decimalify(trove.debt),\n        decimalify(trove.stake),\n        new Trove(decimalify(snapshot.ETH), decimalify(snapshot.LUSDDebt))\n      );\n    } else {\n      return new TroveWithPendingRedistribution(address, userTroveStatusFrom(trove.status));\n    }\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTrove} */\n  async getTrove(address?: string, overrides?: EthersCallOverrides): Promise<UserTrove> {\n    const [trove, totalRedistributed] = await Promise.all([\n      this.getTroveBeforeRedistribution(address, overrides),\n      this.getTotalRedistributed(overrides)\n    ]);\n\n    return trove.applyRedistribution(totalRedistributed);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getNumberOfTroves} */\n  async getNumberOfTroves(overrides?: EthersCallOverrides): Promise<number> {\n    const { troveManager } = _getContracts(this.connection);\n\n    return (await troveManager.getTroveOwnersCount({ ...overrides })).toNumber();\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getPrice} */\n  getPrice(overrides?: EthersCallOverrides): Promise<Decimal> {\n    const { priceFeed } = _getContracts(this.connection);\n\n    return priceFeed.callStatic.fetchPrice({ ...overrides }).then(decimalify);\n  }\n\n  /** @internal */\n  async _getActivePool(overrides?: EthersCallOverrides): Promise<Trove> {\n    const { activePool } = _getContracts(this.connection);\n\n    const [activeCollateral, activeDebt] = await Promise.all(\n      [\n        activePool.getETH({ ...overrides }),\n        activePool.getLUSDDebt({ ...overrides })\n      ].map(getBigNumber => getBigNumber.then(decimalify))\n    );\n\n    return new Trove(activeCollateral, activeDebt);\n  }\n\n  /** @internal */\n  async _getDefaultPool(overrides?: EthersCallOverrides): Promise<Trove> {\n    const { defaultPool } = _getContracts(this.connection);\n\n    const [liquidatedCollateral, closedDebt] = await Promise.all(\n      [\n        defaultPool.getETH({ ...overrides }),\n        defaultPool.getLUSDDebt({ ...overrides })\n      ].map(getBigNumber => getBigNumber.then(decimalify))\n    );\n\n    return new Trove(liquidatedCollateral, closedDebt);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotal} */\n  async getTotal(overrides?: EthersCallOverrides): Promise<Trove> {\n    const [activePool, defaultPool] = await Promise.all([\n      this._getActivePool(overrides),\n      this._getDefaultPool(overrides)\n    ]);\n\n    return activePool.add(defaultPool);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getStabilityDeposit} */\n  async getStabilityDeposit(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<StabilityDeposit> {\n    address ??= _requireAddress(this.connection);\n    const { stabilityPool } = _getContracts(this.connection);\n\n    const [\n      { frontEndTag, initialValue },\n      currentLUSD,\n      collateralGain,\n      lqtyReward\n    ] = await Promise.all([\n      stabilityPool.deposits(address, { ...overrides }),\n      stabilityPool.getCompoundedLUSDDeposit(address, { ...overrides }),\n      stabilityPool.getDepositorETHGain(address, { ...overrides }),\n      stabilityPool.getDepositorLQTYGain(address, { ...overrides })\n    ]);\n\n    return new StabilityDeposit(\n      decimalify(initialValue),\n      decimalify(currentLUSD),\n      decimalify(collateralGain),\n      decimalify(lqtyReward),\n      frontEndTag\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingStabilityPoolLQTYReward} */\n  async getRemainingStabilityPoolLQTYReward(overrides?: EthersCallOverrides): Promise<Decimal> {\n    const { communityIssuance } = _getContracts(this.connection);\n\n    const issuanceCap = this.connection.totalStabilityPoolLQTYReward;\n    const totalLQTYIssued = decimalify(await communityIssuance.totalLQTYIssued({ ...overrides }));\n\n    // totalLQTYIssued approaches but never reaches issuanceCap\n    return issuanceCap.sub(totalLQTYIssued);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDInStabilityPool} */\n  getLUSDInStabilityPool(overrides?: EthersCallOverrides): Promise<Decimal> {\n    const { stabilityPool } = _getContracts(this.connection);\n\n    return stabilityPool.getTotalLUSDDeposits({ ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDBalance} */\n  getLUSDBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { lusdToken } = _getContracts(this.connection);\n\n    return lusdToken.balanceOf(address, { ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYBalance} */\n  getLQTYBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { lqtyToken } = _getContracts(this.connection);\n\n    if (!lqtyToken) {\n      return new Promise((resolve, reject) => {\n        return resolve(Decimal.ZERO);\n      });\n    }\n\n    return lqtyToken.balanceOf(address, { ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenBalance} */\n  getUniTokenBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { uniToken } = _getContracts(this.connection);\n\n    if (!uniToken) {\n      return new Promise((resolve, reject) => {\n        return resolve(Decimal.ZERO);\n      });\n    }\n\n    return uniToken.balanceOf(address, { ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenAllowance} */\n  getUniTokenAllowance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { uniToken, unipool } = _getContracts(this.connection);\n\n    if (!uniToken || !unipool) {\n      return new Promise((resolve, reject) => {\n        return resolve(Decimal.ZERO);\n      });\n    }\n\n    return uniToken.allowance(address, unipool.address, { ...overrides }).then(decimalify);\n  }\n\n  /** @internal */\n  async _getRemainingLiquidityMiningLQTYRewardCalculator(\n    overrides?: EthersCallOverrides\n  ): Promise<(blockTimestamp: number) => Decimal> {\n    const { unipool } = _getContracts(this.connection);\n\n    const zero = BigNumber.from(0);\n    const [totalSupply, rewardRate, periodFinish, lastUpdateTime] = await Promise.all([\n      unipool?.totalSupply({ ...overrides }) || zero,\n      unipool?.rewardRate({ ...overrides }).then(decimalify) || zero,\n      unipool?.periodFinish({ ...overrides }).then(numberify) || zero,\n      unipool?.lastUpdateTime({ ...overrides }).then(numberify) || zero\n    ]);\n\n    return (blockTimestamp: number) =>\n      rewardRate.mul(\n        Math.max(0, periodFinish - (totalSupply.isZero() ? lastUpdateTime : blockTimestamp))\n      );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingLiquidityMiningLQTYReward} */\n  async getRemainingLiquidityMiningLQTYReward(overrides?: EthersCallOverrides): Promise<Decimal> {\n    const [calculateRemainingLQTY, blockTimestamp] = await Promise.all([\n      this._getRemainingLiquidityMiningLQTYRewardCalculator(overrides),\n      this._getBlockTimestamp(overrides?.blockTag)\n    ]);\n\n    return calculateRemainingLQTY(blockTimestamp);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningStake} */\n  getLiquidityMiningStake(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { unipool } = _getContracts(this.connection);\n\n    if (!unipool) {\n      return new Promise((resolve, reject) => {\n        return resolve(Decimal.ZERO);\n      });\n    }\n\n    return unipool.balanceOf(address, { ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedUniTokens} */\n  getTotalStakedUniTokens(overrides?: EthersCallOverrides): Promise<Decimal> {\n    const { unipool } = _getContracts(this.connection);\n\n    if (!unipool?.address) {\n      return new Promise((resolve, reject) => {\n        return resolve(Decimal.ZERO);\n      });\n    }\n\n    return unipool.totalSupply({ ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningLQTYReward} */\n  getLiquidityMiningLQTYReward(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { unipool } = _getContracts(this.connection);\n\n    if (!unipool) {\n      return new Promise((resolve, reject) => {\n        return resolve(Decimal.ZERO);\n      });\n    }\n\n    return unipool.earned(address, { ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getCollateralSurplusBalance} */\n  getCollateralSurplusBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    address ??= _requireAddress(this.connection);\n    const { collSurplusPool } = _getContracts(this.connection);\n\n    return collSurplusPool.getCollateral(address, { ...overrides }).then(decimalify);\n  }\n\n  /** @internal */\n  getTroves(\n    params: TroveListingParams & { beforeRedistribution: true },\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution[]>;\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.(getTroves:2)} */\n  getTroves(params: TroveListingParams, overrides?: EthersCallOverrides): Promise<UserTrove[]>;\n\n  async getTroves(\n    params: TroveListingParams,\n    overrides?: EthersCallOverrides\n  ): Promise<UserTrove[]> {\n    const { multiTroveGetter } = _getContracts(this.connection);\n\n    expectPositiveInt(params, \"first\");\n    expectPositiveInt(params, \"startingAt\");\n\n    if (!validSortingOptions.includes(params.sortedBy)) {\n      throw new Error(\n        `sortedBy must be one of: ${validSortingOptions.map(x => `\"${x}\"`).join(\", \")}`\n      );\n    }\n\n    const [totalRedistributed, backendTroves] = await Promise.all([\n      params.beforeRedistribution ? undefined : this.getTotalRedistributed({ ...overrides }),\n      multiTroveGetter.getMultipleSortedTroves(\n        params.sortedBy === \"descendingCollateralRatio\"\n          ? params.startingAt ?? 0\n          : -((params.startingAt ?? 0) + 1),\n        params.first,\n        { ...overrides }\n      )\n    ]);\n\n    const troves = mapBackendTroves(backendTroves);\n\n    if (totalRedistributed) {\n      return troves.map(trove => trove.applyRedistribution(totalRedistributed));\n    } else {\n      return troves;\n    }\n  }\n\n  /** @internal */\n  _getBlockTimestamp(blockTag?: BlockTag): Promise<number> {\n    return _getBlockTimestamp(this.connection, blockTag);\n  }\n\n  /** @internal */\n  async _getFeesFactory(\n    overrides?: EthersCallOverrides\n  ): Promise<(blockTimestamp: number, recoveryMode: boolean) => Fees> {\n    const { troveManager } = _getContracts(this.connection);\n\n    const [lastFeeOperationTime, baseRateWithoutDecay] = await Promise.all([\n      troveManager.lastFeeOperationTime({ ...overrides }),\n      troveManager.baseRate({ ...overrides }).then(decimalify)\n    ]);\n\n    return (blockTimestamp, recoveryMode) =>\n      new Fees(\n        baseRateWithoutDecay,\n        MINUTE_DECAY_FACTOR,\n        BETA,\n        convertToDate(lastFeeOperationTime.toNumber()),\n        convertToDate(blockTimestamp),\n        recoveryMode\n      );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFees} */\n  async getFees(overrides?: EthersCallOverrides): Promise<Fees> {\n    const [createFees, total, price, blockTimestamp] = await Promise.all([\n      this._getFeesFactory(overrides),\n      this.getTotal(overrides),\n      this.getPrice(overrides),\n      this._getBlockTimestamp(overrides?.blockTag)\n    ]);\n\n    return createFees(blockTimestamp, total.collateralRatioIsBelowCritical(price));\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYStake} */\n  async getLQTYStake(address?: string, overrides?: EthersCallOverrides): Promise<LQTYStake> {\n    address ??= _requireAddress(this.connection);\n    const { lqtyStaking } = _getContracts(this.connection);\n\n    const [stakedLQTY, collateralGain, lusdGain] = await Promise.all(\n      [\n        lqtyStaking.stakes(address, { ...overrides }),\n        lqtyStaking.getPendingETHGain(address, { ...overrides }),\n        lqtyStaking.getPendingLUSDGain(address, { ...overrides })\n      ].map(getBigNumber => getBigNumber.then(decimalify))\n    );\n\n    return new LQTYStake(stakedLQTY, collateralGain, lusdGain);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedLQTY} */\n  async getTotalStakedLQTY(overrides?: EthersCallOverrides): Promise<Decimal> {\n    const { lqtyStaking } = _getContracts(this.connection);\n\n    return lqtyStaking.totalLQTYStaked({ ...overrides }).then(decimalify);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFrontendStatus} */\n  async getFrontendStatus(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<FrontendStatus> {\n    address ??= _requireFrontendAddress(this.connection);\n    const { stabilityPool } = _getContracts(this.connection);\n\n    const { registered, kickbackRate } = await stabilityPool.frontEnds(address, { ...overrides });\n\n    return registered\n      ? { status: \"registered\", kickbackRate: decimalify(kickbackRate) }\n      : { status: \"unregistered\" };\n  }\n}\n\ntype Resolved<T> = T extends Promise<infer U> ? U : T;\ntype BackendTroves = Resolved<ReturnType<MultiTroveGetter[\"getMultipleSortedTroves\"]>>;\n\nconst mapBackendTroves = (troves: BackendTroves): TroveWithPendingRedistribution[] =>\n  troves.map(\n    trove =>\n      new TroveWithPendingRedistribution(\n        trove.owner,\n        \"open\", // These Troves are coming from the SortedTroves list, so they must be open\n        decimalify(trove.coll),\n        decimalify(trove.debt),\n        decimalify(trove.stake),\n        new Trove(decimalify(trove.snapshotETH), decimalify(trove.snapshotLUSDDebt))\n      )\n  );\n\n/**\n * Variant of {@link ReadableEthersLiquity} that exposes a {@link @liquity/lib-base#LiquityStore}.\n *\n * @public\n */\nexport interface ReadableEthersLiquityWithStore<T extends LiquityStore = LiquityStore>\n  extends ReadableEthersLiquity {\n  /** An object that implements LiquityStore. */\n  readonly store: T;\n}\n\nclass _BlockPolledReadableEthersLiquity\n  implements ReadableEthersLiquityWithStore<BlockPolledLiquityStore> {\n  readonly connection: EthersLiquityConnection;\n  readonly store: BlockPolledLiquityStore;\n\n  private readonly _readable: ReadableEthersLiquity;\n\n  constructor(readable: ReadableEthersLiquity) {\n    const store = new BlockPolledLiquityStore(readable);\n\n    this.store = store;\n    this.connection = readable.connection;\n    this._readable = readable;\n  }\n\n  private _blockHit(overrides?: EthersCallOverrides): boolean {\n    return (\n      !overrides ||\n      overrides.blockTag === undefined ||\n      overrides.blockTag === this.store.state.blockTag\n    );\n  }\n\n  private _userHit(address?: string, overrides?: EthersCallOverrides): boolean {\n    return (\n      this._blockHit(overrides) &&\n      (address === undefined || address === this.store.connection.userAddress)\n    );\n  }\n\n  private _frontendHit(address?: string, overrides?: EthersCallOverrides): boolean {\n    return (\n      this._blockHit(overrides) &&\n      (address === undefined || address === this.store.connection.frontendTag)\n    );\n  }\n\n  hasStore(store?: EthersLiquityStoreOption): boolean {\n    return store === undefined || store === \"blockPolled\";\n  }\n\n  async getTotalRedistributed(overrides?: EthersCallOverrides): Promise<Trove> {\n    return this._blockHit(overrides)\n      ? this.store.state.totalRedistributed\n      : this._readable.getTotalRedistributed(overrides);\n  }\n\n  async getTroveBeforeRedistribution(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution> {\n    return this._userHit(address, overrides)\n      ? this.store.state.troveBeforeRedistribution\n      : this._readable.getTroveBeforeRedistribution(address, overrides);\n  }\n\n  async getTrove(address?: string, overrides?: EthersCallOverrides): Promise<UserTrove> {\n    return this._userHit(address, overrides)\n      ? this.store.state.trove\n      : this._readable.getTrove(address, overrides);\n  }\n\n  async getNumberOfTroves(overrides?: EthersCallOverrides): Promise<number> {\n    return this._blockHit(overrides)\n      ? this.store.state.numberOfTroves\n      : this._readable.getNumberOfTroves(overrides);\n  }\n\n  async getPrice(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._blockHit(overrides) ? this.store.state.price : this._readable.getPrice(overrides);\n  }\n\n  async getTotal(overrides?: EthersCallOverrides): Promise<Trove> {\n    return this._blockHit(overrides) ? this.store.state.total : this._readable.getTotal(overrides);\n  }\n\n  async getStabilityDeposit(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<StabilityDeposit> {\n    return this._userHit(address, overrides)\n      ? this.store.state.stabilityDeposit\n      : this._readable.getStabilityDeposit(address, overrides);\n  }\n\n  async getRemainingStabilityPoolLQTYReward(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._blockHit(overrides)\n      ? this.store.state.remainingStabilityPoolLQTYReward\n      : this._readable.getRemainingStabilityPoolLQTYReward(overrides);\n  }\n\n  async getLUSDInStabilityPool(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._blockHit(overrides)\n      ? this.store.state.lusdInStabilityPool\n      : this._readable.getLUSDInStabilityPool(overrides);\n  }\n\n  async getLUSDBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.lusdBalance\n      : this._readable.getLUSDBalance(address, overrides);\n  }\n\n  async getLQTYBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.lqtyBalance\n      : this._readable.getLQTYBalance(address, overrides);\n  }\n\n  async getUniTokenBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.uniTokenBalance\n      : this._readable.getUniTokenBalance(address, overrides);\n  }\n\n  async getUniTokenAllowance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.uniTokenAllowance\n      : this._readable.getUniTokenAllowance(address, overrides);\n  }\n\n  async getRemainingLiquidityMiningLQTYReward(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._blockHit(overrides)\n      ? this.store.state.remainingLiquidityMiningLQTYReward\n      : this._readable.getRemainingLiquidityMiningLQTYReward(overrides);\n  }\n\n  async getLiquidityMiningStake(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.liquidityMiningStake\n      : this._readable.getLiquidityMiningStake(address, overrides);\n  }\n\n  async getTotalStakedUniTokens(overrides?: EthersCallOverrides): Promise<Decimal> {\n    console.debug(\"lib-ethers: getTotalStakedUniTokens()\");\n\n    return this._blockHit(overrides)\n      ? this.store.state.totalStakedUniTokens\n      : this._readable.getTotalStakedUniTokens(overrides);\n  }\n\n  async getLiquidityMiningLQTYReward(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.liquidityMiningLQTYReward\n      : this._readable.getLiquidityMiningLQTYReward(address, overrides);\n  }\n\n  async getCollateralSurplusBalance(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<Decimal> {\n    return this._userHit(address, overrides)\n      ? this.store.state.collateralSurplusBalance\n      : this._readable.getCollateralSurplusBalance(address, overrides);\n  }\n\n  async _getBlockTimestamp(blockTag?: BlockTag): Promise<number> {\n    return this._blockHit({ blockTag })\n      ? this.store.state.blockTimestamp\n      : this._readable._getBlockTimestamp(blockTag);\n  }\n\n  async _getFeesFactory(\n    overrides?: EthersCallOverrides\n  ): Promise<(blockTimestamp: number, recoveryMode: boolean) => Fees> {\n    return this._blockHit(overrides)\n      ? this.store.state._feesFactory\n      : this._readable._getFeesFactory(overrides);\n  }\n\n  async getFees(overrides?: EthersCallOverrides): Promise<Fees> {\n    return this._blockHit(overrides) ? this.store.state.fees : this._readable.getFees(overrides);\n  }\n\n  async getLQTYStake(address?: string, overrides?: EthersCallOverrides): Promise<LQTYStake> {\n    return this._userHit(address, overrides)\n      ? this.store.state.lqtyStake\n      : this._readable.getLQTYStake(address, overrides);\n  }\n\n  async getTotalStakedLQTY(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._blockHit(overrides)\n      ? this.store.state.totalStakedLQTY\n      : this._readable.getTotalStakedLQTY(overrides);\n  }\n\n  async getFrontendStatus(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<FrontendStatus> {\n    return this._frontendHit(address, overrides)\n      ? this.store.state.frontend\n      : this._readable.getFrontendStatus(address, overrides);\n  }\n\n  getTroves(\n    params: TroveListingParams & { beforeRedistribution: true },\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution[]>;\n\n  getTroves(params: TroveListingParams, overrides?: EthersCallOverrides): Promise<UserTrove[]>;\n\n  getTroves(params: TroveListingParams, overrides?: EthersCallOverrides): Promise<UserTrove[]> {\n    return this._readable.getTroves(params, overrides);\n  }\n\n  _getActivePool(): Promise<Trove> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  _getDefaultPool(): Promise<Trove> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  _getRemainingLiquidityMiningLQTYRewardCalculator(): Promise<(blockTimestamp: number) => Decimal> {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n", "import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Event } from \"@ethersproject/contracts\";\n\nimport {\n  Decimal,\n  ObservableLiquity,\n  StabilityDeposit,\n  Trove,\n  TroveWithPendingRedistribution\n} from \"@liquity/lib-base\";\n\nimport { _getContracts, _requireAddress } from \"./EthersLiquityConnection\";\nimport { ReadableEthersLiquity } from \"./ReadableEthersLiquity\";\n\nconst debouncingDelayMs = 50;\n\nconst debounce = (listener: (latestBlock: number) => void) => {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined = undefined;\n  let latestBlock = 0;\n\n  return (...args: unknown[]) => {\n    const event = args[args.length - 1] as Event;\n\n    if (event.blockNumber !== undefined && event.blockNumber > latestBlock) {\n      latestBlock = event.blockNumber;\n    }\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      listener(latestBlock);\n      timeoutId = undefined;\n    }, debouncingDelayMs);\n  };\n};\n\n/** @alpha */\nexport class ObservableEthersLiquity implements ObservableLiquity {\n  private readonly _readable: ReadableEthersLiquity;\n\n  constructor(readable: ReadableEthersLiquity) {\n    this._readable = readable;\n  }\n\n  watchTotalRedistributed(\n    onTotalRedistributedChanged: (totalRedistributed: Trove) => void\n  ): () => void {\n    const { activePool, defaultPool } = _getContracts(this._readable.connection);\n    const etherSent = activePool.filters.EtherSent();\n\n    const redistributionListener = debounce((blockTag: number) => {\n      this._readable.getTotalRedistributed({ blockTag }).then(onTotalRedistributedChanged);\n    });\n\n    const etherSentListener = (toAddress: string, _amount: BigNumber, event: Event) => {\n      if (toAddress === defaultPool.address) {\n        redistributionListener(event);\n      }\n    };\n\n    activePool.on(etherSent, etherSentListener);\n\n    return () => {\n      activePool.removeListener(etherSent, etherSentListener);\n    };\n  }\n\n  watchTroveWithoutRewards(\n    onTroveChanged: (trove: TroveWithPendingRedistribution) => void,\n    address?: string\n  ): () => void {\n    address ??= _requireAddress(this._readable.connection);\n\n    const { troveManager, borrowerOperations } = _getContracts(this._readable.connection);\n    const troveUpdatedByTroveManager = troveManager.filters.TroveUpdated(address);\n    const troveUpdatedByBorrowerOperations = borrowerOperations.filters.TroveUpdated(address);\n\n    const troveListener = debounce((blockTag: number) => {\n      this._readable.getTroveBeforeRedistribution(address, { blockTag }).then(onTroveChanged);\n    });\n\n    troveManager.on(troveUpdatedByTroveManager, troveListener);\n    borrowerOperations.on(troveUpdatedByBorrowerOperations, troveListener);\n\n    return () => {\n      troveManager.removeListener(troveUpdatedByTroveManager, troveListener);\n      borrowerOperations.removeListener(troveUpdatedByBorrowerOperations, troveListener);\n    };\n  }\n\n  watchNumberOfTroves(onNumberOfTrovesChanged: (numberOfTroves: number) => void): () => void {\n    const { troveManager } = _getContracts(this._readable.connection);\n    const { TroveUpdated } = troveManager.filters;\n    const troveUpdated = TroveUpdated();\n\n    const troveUpdatedListener = debounce((blockTag: number) => {\n      this._readable.getNumberOfTroves({ blockTag }).then(onNumberOfTrovesChanged);\n    });\n\n    troveManager.on(troveUpdated, troveUpdatedListener);\n\n    return () => {\n      troveManager.removeListener(troveUpdated, troveUpdatedListener);\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  watchPrice(onPriceChanged: (price: Decimal) => void): () => void {\n    // TODO revisit\n    // We no longer have our own PriceUpdated events. If we want to implement this in an event-based\n    // manner, we'll need to listen to aggregator events directly. Or we could do polling.\n    throw new Error(\"Method not implemented.\");\n  }\n\n  watchTotal(onTotalChanged: (total: Trove) => void): () => void {\n    const { troveManager } = _getContracts(this._readable.connection);\n    const { TroveUpdated } = troveManager.filters;\n    const troveUpdated = TroveUpdated();\n\n    const totalListener = debounce((blockTag: number) => {\n      this._readable.getTotal({ blockTag }).then(onTotalChanged);\n    });\n\n    troveManager.on(troveUpdated, totalListener);\n\n    return () => {\n      troveManager.removeListener(troveUpdated, totalListener);\n    };\n  }\n\n  watchStabilityDeposit(\n    onStabilityDepositChanged: (stabilityDeposit: StabilityDeposit) => void,\n    address?: string\n  ): () => void {\n    address ??= _requireAddress(this._readable.connection);\n\n    const { activePool, stabilityPool } = _getContracts(this._readable.connection);\n    const { UserDepositChanged } = stabilityPool.filters;\n    const { EtherSent } = activePool.filters;\n\n    const userDepositChanged = UserDepositChanged(address);\n    const etherSent = EtherSent();\n\n    const depositListener = debounce((blockTag: number) => {\n      this._readable.getStabilityDeposit(address, { blockTag }).then(onStabilityDepositChanged);\n    });\n\n    const etherSentListener = (toAddress: string, _amount: BigNumber, event: Event) => {\n      if (toAddress === stabilityPool.address) {\n        // Liquidation while Stability Pool has some deposits\n        // There may be new gains\n        depositListener(event);\n      }\n    };\n\n    stabilityPool.on(userDepositChanged, depositListener);\n    activePool.on(etherSent, etherSentListener);\n\n    return () => {\n      stabilityPool.removeListener(userDepositChanged, depositListener);\n      activePool.removeListener(etherSent, etherSentListener);\n    };\n  }\n\n  watchLUSDInStabilityPool(\n    onLUSDInStabilityPoolChanged: (lusdInStabilityPool: Decimal) => void\n  ): () => void {\n    const { lusdToken, stabilityPool } = _getContracts(this._readable.connection);\n    const { Transfer } = lusdToken.filters;\n\n    const transferLUSDFromStabilityPool = Transfer(stabilityPool.address);\n    const transferLUSDToStabilityPool = Transfer(null, stabilityPool.address);\n\n    const stabilityPoolLUSDFilters = [transferLUSDFromStabilityPool, transferLUSDToStabilityPool];\n\n    const stabilityPoolLUSDListener = debounce((blockTag: number) => {\n      this._readable.getLUSDInStabilityPool({ blockTag }).then(onLUSDInStabilityPoolChanged);\n    });\n\n    stabilityPoolLUSDFilters.forEach(filter => lusdToken.on(filter, stabilityPoolLUSDListener));\n\n    return () =>\n      stabilityPoolLUSDFilters.forEach(filter =>\n        lusdToken.removeListener(filter, stabilityPoolLUSDListener)\n      );\n  }\n\n  watchLUSDBalance(onLUSDBalanceChanged: (balance: Decimal) => void, address?: string): () => void {\n    address ??= _requireAddress(this._readable.connection);\n\n    const { lusdToken } = _getContracts(this._readable.connection);\n    const { Transfer } = lusdToken.filters;\n    const transferLUSDFromUser = Transfer(address);\n    const transferLUSDToUser = Transfer(null, address);\n\n    const lusdTransferFilters = [transferLUSDFromUser, transferLUSDToUser];\n\n    const lusdTransferListener = debounce((blockTag: number) => {\n      this._readable.getLUSDBalance(address, { blockTag }).then(onLUSDBalanceChanged);\n    });\n\n    lusdTransferFilters.forEach(filter => lusdToken.on(filter, lusdTransferListener));\n\n    return () =>\n      lusdTransferFilters.forEach(filter => lusdToken.removeListener(filter, lusdTransferListener));\n  }\n}\n", "import { BigNumber } from \"@ethersproject/bignumber\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Log, TransactionReceipt } from \"@ethersproject/abstract-provider\";\nimport { LogDescription, Interface } from \"@ethersproject/abi\";\n\nimport { Decimal } from \"@liquity/lib-base\";\n\nimport { _LiquityContracts, _TypedLiquityContract } from \"./contracts\";\n\ntype ContractLookup = {\n  [name: string]: _TypedLiquityContract;\n};\n\ntype InterfaceLookup = {\n  [address: string]: Interface;\n};\n\ntype NameLookup = {\n  [address: string]: string;\n};\n\nconst interfaceLookupFrom = (contractLookup: ContractLookup): InterfaceLookup => {\n  return Object.fromEntries(\n    Object.entries(contractLookup).map(([, contract]) => [contract.address, contract.interface])\n  );\n};\n\nconst nameLookupFrom = (contractLookup: ContractLookup): NameLookup => {\n  return Object.fromEntries(\n    Object.entries(contractLookup).map(([name, contract]) => [contract.address, name])\n  );\n};\n\ntype ParsedLog = {\n  address: string;\n  logDescription: LogDescription;\n};\n\nconst tryToParseLog = (log: Log, interfaceLookup: InterfaceLookup): ParsedLog | undefined => {\n  const { address } = log;\n\n  if (address in interfaceLookup) {\n    try {\n      return { address, logDescription: interfaceLookup[address].parseLog(log) };\n    } catch (err) {\n      console.warn(\"Failed to parse log:\");\n      console.warn(log);\n      console.warn(\"Caught:\");\n      console.warn(err);\n    }\n  }\n};\n\nconst parseLogs = (\n  logs: Log[],\n  interfaceLookup: InterfaceLookup\n): [parsedLogs: ParsedLog[], unparsedLogs: Log[]] => {\n  const parsedLogs: ParsedLog[] = [];\n  const unparsedLogs: Log[] = [];\n\n  logs.forEach(log => {\n    const parsedLog = tryToParseLog(log, interfaceLookup);\n\n    if (parsedLog) {\n      parsedLogs.push(parsedLog);\n    } else {\n      unparsedLogs.push(log);\n    }\n  });\n\n  return [parsedLogs, unparsedLogs];\n};\n\nconst VERY_BIG = BigNumber.from(10).pow(9);\n\nconst prettify = (arg: unknown, nameLookup: NameLookup) => {\n  if (BigNumber.isBigNumber(arg)) {\n    if (arg.gte(VERY_BIG)) {\n      return `${Decimal.fromBigNumberString(arg.toHexString())}e18`;\n    } else {\n      return arg.toString();\n    }\n  } else if (typeof arg === \"string\") {\n    return arg === AddressZero\n      ? \"address(0)\"\n      : nameLookup && arg in nameLookup\n      ? nameLookup[arg]\n      : arg;\n  } else {\n    return String(arg);\n  }\n};\n\nconst logDescriptionToString = (logDescription: LogDescription, nameLookup: NameLookup) => {\n  const prettyEntries = Object.entries(logDescription.args)\n    .filter(([key]) => !key.match(/^[0-9]/))\n    .map(([key, value]) => `${key}: ${prettify(value, nameLookup)}`);\n\n  return `${logDescription.name}({ ${prettyEntries.join(\", \")} })`;\n};\n\nexport const logsToString = (receipt: TransactionReceipt, contracts: _LiquityContracts): string => {\n  const contractLookup = (contracts as unknown) as ContractLookup;\n  const interfaceLookup = interfaceLookupFrom(contractLookup);\n  const contractNameLookup = nameLookupFrom(contractLookup);\n\n  const nameLookup = {\n    [receipt.from]: \"user\",\n    ...contractNameLookup\n  };\n\n  const [parsedLogs, unparsedLogs] = parseLogs(receipt.logs, interfaceLookup);\n\n  if (unparsedLogs.length > 0) {\n    console.warn(\"Warning: not all logs were parsed. Unparsed logs:\");\n    console.warn(unparsedLogs);\n  }\n\n  if (parsedLogs.length > 0) {\n    return (\n      `Logs of tx ${receipt.transactionHash}:\\n` +\n      parsedLogs\n        .map(\n          ({ address, logDescription }) =>\n            `  ${contractNameLookup[address]}.${logDescriptionToString(logDescription, nameLookup)}`\n        )\n        .join(\"\\n\")\n    );\n  } else {\n    return `No logs were parsed in tx ${receipt.transactionHash}`;\n  }\n};\n", "import assert from \"assert\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Log } from \"@ethersproject/abstract-provider\";\nimport { ErrorCode } from \"@ethersproject/logger\";\nimport { Transaction } from \"@ethersproject/transactions\";\n\nimport {\n  CollateralGainTransferDetails,\n  Decimal,\n  Decimalish,\n  LiquidationDetails,\n  LiquityReceipt,\n  LUSD_MINIMUM_DEBT,\n  LUSD_MINIMUM_NET_DEBT,\n  MinedReceipt,\n  PopulatableLiquity,\n  PopulatedLiquityTransaction,\n  PopulatedRedemption,\n  RedemptionDetails,\n  SentLiquityTransaction,\n  StabilityDepositChangeDetails,\n  StabilityPoolGainsWithdrawalDetails,\n  Trove,\n  TroveAdjustmentDetails,\n  TroveAdjustmentParams,\n  TroveClosureDetails,\n  TroveCreationDetails,\n  TroveCreationParams,\n  TroveWithPendingRedistribution,\n  _failedReceipt,\n  _normalizeTroveAdjustment,\n  _normalizeTroveCreation,\n  _pendingReceipt,\n  _successfulReceipt\n} from \"@liquity/lib-base\";\n\nimport {\n  EthersPopulatedTransaction,\n  EthersTransactionOverrides,\n  EthersTransactionReceipt,\n  EthersTransactionResponse\n} from \"./types\";\n\nimport {\n  EthersLiquityConnection,\n  _getContracts,\n  _requireAddress,\n  _requireSigner\n} from \"./EthersLiquityConnection\";\n\nimport { decimalify, promiseAllValues } from \"./_utils\";\nimport { _priceFeedIsTestnet, _uniTokenIsMock } from \"./contracts\";\nimport { logsToString } from \"./parseLogs\";\nimport { ReadableEthersLiquity } from \"./ReadableEthersLiquity\";\n\nconst bigNumberMax = (a: BigNumber, b?: BigNumber) => (b?.gt(a) ? b : a);\n\n// With 70 iterations redemption costs about ~10M gas, and each iteration accounts for ~138k more\n/** @internal */\nexport const _redeemMaxIterations = 70;\n\nconst defaultBorrowingRateSlippageTolerance = Decimal.from(0.005); // 0.5%\nconst defaultRedemptionRateSlippageTolerance = Decimal.from(0.001); // 0.1%\nconst defaultBorrowingFeeDecayToleranceMinutes = 10;\n\nconst noDetails = () => undefined;\n\nconst compose = <T, U, V>(f: (_: U) => V, g: (_: T) => U) => (_: T) => f(g(_));\n\nconst id = <T>(t: T) => t;\n\n// Takes ~6-7K (use 10K to be safe) to update lastFeeOperationTime, but the cost of calculating the\n// decayed baseRate increases logarithmically with time elapsed since the last update.\nconst addGasForBaseRateUpdate = (maxMinutesSinceLastUpdate = 10) => (gas: BigNumber) =>\n  gas.add(10000 + 1414 * Math.ceil(Math.log2(maxMinutesSinceLastUpdate + 1)));\n\n// First traversal in ascending direction takes ~50K, then ~13.5K per extra step.\n// 80K should be enough for 3 steps, plus some extra to be safe.\nconst addGasForPotentialListTraversal = (gas: BigNumber) => gas.add(80000);\n\nconst addGasForLQTYIssuance = (gas: BigNumber) => gas.add(50000);\n\nconst addGasForUnipoolRewardUpdate = (gas: BigNumber) => gas.add(20000);\n\n// To get the best entropy available, we'd do something like:\n//\n// const bigRandomNumber = () =>\n//   BigNumber.from(\n//     `0x${Array.from(crypto.getRandomValues(new Uint32Array(8)))\n//       .map(u32 => u32.toString(16).padStart(8, \"0\"))\n//       .join(\"\")}`\n//   );\n//\n// However, Window.crypto is browser-specific. Since we only use this for randomly picking Troves\n// during the search for hints, Math.random() will do fine, too.\n//\n// This returns a random integer between 0 and Number.MAX_SAFE_INTEGER\nconst randomInteger = () => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n\n// Maximum number of trials to perform in a single getApproxHint() call. If the number of trials\n// required to get a statistically \"good\" hint is larger than this, the search for the hint will\n// be broken up into multiple getApproxHint() calls.\n//\n// This should be low enough to work with popular public Ethereum providers like Infura without\n// triggering any fair use limits.\nconst maxNumberOfTrialsAtOnce = 2500;\n\nfunction* generateTrials(totalNumberOfTrials: number) {\n  assert(Number.isInteger(totalNumberOfTrials) && totalNumberOfTrials > 0);\n\n  while (totalNumberOfTrials) {\n    const numberOfTrials = Math.min(totalNumberOfTrials, maxNumberOfTrialsAtOnce);\n    yield numberOfTrials;\n\n    totalNumberOfTrials -= numberOfTrials;\n  }\n}\n\n/** @internal */\nexport enum _RawErrorReason {\n  TRANSACTION_FAILED = \"transaction failed\",\n  TRANSACTION_CANCELLED = \"cancelled\",\n  TRANSACTION_REPLACED = \"replaced\",\n  TRANSACTION_REPRICED = \"repriced\"\n}\n\nconst transactionReplacementReasons: unknown[] = [\n  _RawErrorReason.TRANSACTION_CANCELLED,\n  _RawErrorReason.TRANSACTION_REPLACED,\n  _RawErrorReason.TRANSACTION_REPRICED\n];\n\ninterface RawTransactionFailedError extends Error {\n  code: ErrorCode.CALL_EXCEPTION;\n  reason: _RawErrorReason.TRANSACTION_FAILED;\n  transactionHash: string;\n  transaction: Transaction;\n  receipt: EthersTransactionReceipt;\n}\n\n/** @internal */\nexport interface _RawTransactionReplacedError extends Error {\n  code: ErrorCode.TRANSACTION_REPLACED;\n  reason:\n  | _RawErrorReason.TRANSACTION_CANCELLED\n  | _RawErrorReason.TRANSACTION_REPLACED\n  | _RawErrorReason.TRANSACTION_REPRICED;\n  cancelled: boolean;\n  hash: string;\n  replacement: EthersTransactionResponse;\n  receipt: EthersTransactionReceipt;\n}\n\nconst hasProp = <T, P extends string>(o: T, p: P): o is T & { [_ in P]: unknown } => p in o;\n\nconst isTransactionFailedError = (error: Error): error is RawTransactionFailedError =>\n  hasProp(error, \"code\") &&\n  error.code === ErrorCode.CALL_EXCEPTION &&\n  hasProp(error, \"reason\") &&\n  error.reason === _RawErrorReason.TRANSACTION_FAILED;\n\nconst isTransactionReplacedError = (error: Error): error is _RawTransactionReplacedError =>\n  hasProp(error, \"code\") &&\n  error.code === ErrorCode.TRANSACTION_REPLACED &&\n  hasProp(error, \"reason\") &&\n  transactionReplacementReasons.includes(error.reason);\n\n/**\n * Thrown when a transaction is cancelled or replaced by a different transaction.\n *\n * @public\n */\nexport class EthersTransactionCancelledError extends Error {\n  readonly rawReplacementReceipt: EthersTransactionReceipt;\n  readonly rawError: Error;\n\n  /** @internal */\n  constructor(rawError: _RawTransactionReplacedError) {\n    assert(rawError.reason !== _RawErrorReason.TRANSACTION_REPRICED);\n\n    super(`Transaction ${rawError.reason}`);\n    this.name = \"TransactionCancelledError\";\n    this.rawReplacementReceipt = rawError.receipt;\n    this.rawError = rawError;\n  }\n}\n\n/**\n * A transaction that has already been sent.\n *\n * @remarks\n * Returned by {@link SendableEthersLiquity} functions.\n *\n * @public\n */\nexport class SentEthersLiquityTransaction<T = unknown>\n  implements\n  SentLiquityTransaction<EthersTransactionResponse, LiquityReceipt<EthersTransactionReceipt, T>> {\n  /** Ethers' representation of a sent transaction. */\n  readonly rawSentTransaction: EthersTransactionResponse;\n\n  private readonly _connection: EthersLiquityConnection;\n  private readonly _parse: (rawReceipt: EthersTransactionReceipt) => T;\n\n  /** @internal */\n  constructor(\n    rawSentTransaction: EthersTransactionResponse,\n    connection: EthersLiquityConnection,\n    parse: (rawReceipt: EthersTransactionReceipt) => T\n  ) {\n    this.rawSentTransaction = rawSentTransaction;\n    this._connection = connection;\n    this._parse = parse;\n  }\n\n  private _receiptFrom(rawReceipt: EthersTransactionReceipt | null) {\n    return rawReceipt\n      ? rawReceipt.status\n        ? _successfulReceipt(rawReceipt, this._parse(rawReceipt), () =>\n          logsToString(rawReceipt, _getContracts(this._connection))\n        )\n        : _failedReceipt(rawReceipt)\n      : _pendingReceipt;\n  }\n\n  private async _waitForRawReceipt(confirmations?: number) {\n    try {\n      return await this.rawSentTransaction.wait(confirmations);\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        if (isTransactionFailedError(error)) {\n          return error.receipt;\n        }\n\n        if (isTransactionReplacedError(error)) {\n          if (error.cancelled) {\n            throw new EthersTransactionCancelledError(error);\n          } else {\n            return error.receipt;\n          }\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SentLiquityTransaction.getReceipt} */\n  async getReceipt(): Promise<LiquityReceipt<EthersTransactionReceipt, T>> {\n    return this._receiptFrom(await this._waitForRawReceipt(0));\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#SentLiquityTransaction.waitForReceipt}\n   *\n   * @throws\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  async waitForReceipt(): Promise<MinedReceipt<EthersTransactionReceipt, T>> {\n    const receipt = this._receiptFrom(await this._waitForRawReceipt());\n\n    assert(receipt.status !== \"pending\");\n    return receipt;\n  }\n}\n\n/**\n * Optional parameters of a transaction that borrows LUSD.\n *\n * @public\n */\nexport interface BorrowingOperationOptionalParams {\n  /**\n   * Maximum acceptable {@link @liquity/lib-base#Fees.borrowingRate | borrowing rate}\n   * (default: current borrowing rate plus 0.5%).\n   */\n  maxBorrowingRate?: Decimalish;\n\n  /**\n   * Control the amount of extra gas included attached to the transaction.\n   *\n   * @remarks\n   * Transactions that borrow LUSD must pay a variable borrowing fee, which is added to the Trove's\n   * debt. This fee increases whenever a redemption occurs, and otherwise decays exponentially.\n   * Due to this decay, a Trove's collateral ratio can end up being higher than initially calculated\n   * if the transaction is pending for a long time. When this happens, the backend has to iterate\n   * over the sorted list of Troves to find a new position for the Trove, which costs extra gas.\n   *\n   * The SDK can estimate how much the gas costs of the transaction may increase due to this decay,\n   * and can include additional gas to ensure that it will still succeed, even if it ends up pending\n   * for a relatively long time. This parameter specifies the length of time that should be covered\n   * by the extra gas.\n   *\n   * Default: 10 minutes.\n   */\n  borrowingFeeDecayToleranceMinutes?: number;\n}\n\nconst normalizeBorrowingOperationOptionalParams = (\n  maxBorrowingRateOrOptionalParams: Decimalish | BorrowingOperationOptionalParams | undefined,\n  currentBorrowingRate: Decimal | undefined\n): {\n  maxBorrowingRate: Decimal;\n  borrowingFeeDecayToleranceMinutes: number;\n} => {\n  if (maxBorrowingRateOrOptionalParams === undefined) {\n    return {\n      maxBorrowingRate:\n        currentBorrowingRate?.add(defaultBorrowingRateSlippageTolerance) ?? Decimal.ZERO,\n      borrowingFeeDecayToleranceMinutes: defaultBorrowingFeeDecayToleranceMinutes\n    };\n  } else if (\n    typeof maxBorrowingRateOrOptionalParams === \"number\" ||\n    typeof maxBorrowingRateOrOptionalParams === \"string\" ||\n    maxBorrowingRateOrOptionalParams instanceof Decimal\n  ) {\n    return {\n      maxBorrowingRate: Decimal.from(maxBorrowingRateOrOptionalParams),\n      borrowingFeeDecayToleranceMinutes: defaultBorrowingFeeDecayToleranceMinutes\n    };\n  } else {\n    const { maxBorrowingRate, borrowingFeeDecayToleranceMinutes } = maxBorrowingRateOrOptionalParams;\n\n    return {\n      maxBorrowingRate:\n        maxBorrowingRate !== undefined\n          ? Decimal.from(maxBorrowingRate)\n          : currentBorrowingRate?.add(defaultBorrowingRateSlippageTolerance) ?? Decimal.ZERO,\n\n      borrowingFeeDecayToleranceMinutes:\n        borrowingFeeDecayToleranceMinutes ?? defaultBorrowingFeeDecayToleranceMinutes\n    };\n  }\n};\n\n/**\n * A transaction that has been prepared for sending.\n *\n * @remarks\n * Returned by {@link PopulatableEthersLiquity} functions.\n *\n * @public\n */\nexport class PopulatedEthersLiquityTransaction<T = unknown>\n  implements\n  PopulatedLiquityTransaction<EthersPopulatedTransaction, SentEthersLiquityTransaction<T>> {\n  /** Unsigned transaction object populated by Ethers. */\n  readonly rawPopulatedTransaction: EthersPopulatedTransaction;\n\n  /**\n   * Extra gas added to the transaction's `gasLimit` on top of the estimated minimum requirement.\n   *\n   * @remarks\n   * Gas estimation is based on blockchain state at the latest block. However, most transactions\n   * stay in pending state for several blocks before being included in a block. This may increase\n   * the actual gas requirements of certain Liquity transactions by the time they are eventually\n   * mined, therefore the Liquity SDK increases these transactions' `gasLimit` by default (unless\n   * `gasLimit` is {@link EthersTransactionOverrides | overridden}).\n   *\n   * Note: even though the SDK includes gas headroom for many transaction types, currently this\n   * property is only implemented for {@link PopulatableEthersLiquity.openTrove | openTrove()},\n   * {@link PopulatableEthersLiquity.adjustTrove | adjustTrove()} and its aliases.\n   */\n  readonly gasHeadroom?: number;\n\n  private readonly _connection: EthersLiquityConnection;\n  private readonly _parse: (rawReceipt: EthersTransactionReceipt) => T;\n\n  /** @internal */\n  constructor(\n    rawPopulatedTransaction: EthersPopulatedTransaction,\n    connection: EthersLiquityConnection,\n    parse: (rawReceipt: EthersTransactionReceipt) => T,\n    gasHeadroom?: number\n  ) {\n    this.rawPopulatedTransaction = rawPopulatedTransaction;\n    this._connection = connection;\n    this._parse = parse;\n\n    if (gasHeadroom !== undefined) {\n      this.gasHeadroom = gasHeadroom;\n    }\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatedLiquityTransaction.send} */\n  async send(): Promise<SentEthersLiquityTransaction<T>> {\n    return new SentEthersLiquityTransaction(\n      await _requireSigner(this._connection).sendTransaction(this.rawPopulatedTransaction),\n      this._connection,\n      this._parse\n    );\n  }\n}\n\n/**\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption}\n *\n * @public\n */\nexport class PopulatedEthersRedemption\n  extends PopulatedEthersLiquityTransaction<RedemptionDetails>\n  implements\n  PopulatedRedemption<\n    EthersPopulatedTransaction,\n    EthersTransactionResponse,\n    EthersTransactionReceipt\n  > {\n  /** {@inheritDoc @liquity/lib-base#PopulatedRedemption.attemptedLUSDAmount} */\n  readonly attemptedLUSDAmount: Decimal;\n\n  /** {@inheritDoc @liquity/lib-base#PopulatedRedemption.redeemableLUSDAmount} */\n  readonly redeemableLUSDAmount: Decimal;\n\n  /** {@inheritDoc @liquity/lib-base#PopulatedRedemption.isTruncated} */\n  readonly isTruncated: boolean;\n\n  private readonly _increaseAmountByMinimumNetDebt?: (\n    maxRedemptionRate?: Decimalish\n  ) => Promise<PopulatedEthersRedemption>;\n\n  /** @internal */\n  constructor(\n    rawPopulatedTransaction: EthersPopulatedTransaction,\n    connection: EthersLiquityConnection,\n    attemptedLUSDAmount: Decimal,\n    redeemableLUSDAmount: Decimal,\n    increaseAmountByMinimumNetDebt?: (\n      maxRedemptionRate?: Decimalish\n    ) => Promise<PopulatedEthersRedemption>\n  ) {\n    const { troveManager } = _getContracts(connection);\n\n    super(\n      rawPopulatedTransaction,\n      connection,\n\n      ({ logs }) =>\n        troveManager\n          .extractEvents(logs, \"Redemption\")\n          .map(({ args: { _ETHSent, _ETHFee, _actualLUSDAmount, _attemptedLUSDAmount } }) => ({\n            attemptedLUSDAmount: decimalify(_attemptedLUSDAmount),\n            actualLUSDAmount: decimalify(_actualLUSDAmount),\n            collateralTaken: decimalify(_ETHSent),\n            fee: decimalify(_ETHFee)\n          }))[0]\n    );\n\n    this.attemptedLUSDAmount = attemptedLUSDAmount;\n    this.redeemableLUSDAmount = redeemableLUSDAmount;\n    this.isTruncated = redeemableLUSDAmount.lt(attemptedLUSDAmount);\n    this._increaseAmountByMinimumNetDebt = increaseAmountByMinimumNetDebt;\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatedRedemption.increaseAmountByMinimumNetDebt} */\n  increaseAmountByMinimumNetDebt(\n    maxRedemptionRate?: Decimalish\n  ): Promise<PopulatedEthersRedemption> {\n    if (!this._increaseAmountByMinimumNetDebt) {\n      throw new Error(\n        \"PopulatedEthersRedemption: increaseAmountByMinimumNetDebt() can \" +\n        \"only be called when amount is truncated\"\n      );\n    }\n\n    return this._increaseAmountByMinimumNetDebt(maxRedemptionRate);\n  }\n}\n\n/** @internal */\nexport interface _TroveChangeWithFees<T> {\n  params: T;\n  newTrove: Trove;\n  fee: Decimal;\n}\n\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#PopulatableLiquity}.\n *\n * @public\n */\nexport class PopulatableEthersLiquity\n  implements\n  PopulatableLiquity<\n    EthersTransactionReceipt,\n    EthersTransactionResponse,\n    EthersPopulatedTransaction\n  > {\n  private readonly _readable: ReadableEthersLiquity;\n\n  constructor(readable: ReadableEthersLiquity) {\n    this._readable = readable;\n  }\n\n  private _wrapSimpleTransaction(\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): PopulatedEthersLiquityTransaction<void> {\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n      noDetails\n    );\n  }\n\n  private _wrapTroveChangeWithFees<T>(\n    params: T,\n    rawPopulatedTransaction: EthersPopulatedTransaction,\n    gasHeadroom?: number\n  ): PopulatedEthersLiquityTransaction<_TroveChangeWithFees<T>> {\n    const { borrowerOperations } = _getContracts(this._readable.connection);\n\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n\n      ({ logs }) => {\n        const [newTrove] = borrowerOperations\n          .extractEvents(logs, \"TroveUpdated\")\n          .map(({ args: { _coll, _debt } }) => new Trove(decimalify(_coll), decimalify(_debt)));\n\n        const [fee] = borrowerOperations\n          .extractEvents(logs, \"LUSDBorrowingFeePaid\")\n          .map(({ args: { _LUSDFee } }) => decimalify(_LUSDFee));\n\n        return {\n          params,\n          newTrove,\n          fee\n        };\n      },\n\n      gasHeadroom\n    );\n  }\n\n  private async _wrapTroveClosure(\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): Promise<PopulatedEthersLiquityTransaction<TroveClosureDetails>> {\n    const { activePool, lusdToken } = _getContracts(this._readable.connection);\n\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n\n      ({ logs, from: userAddress }) => {\n        const [repayLUSD] = lusdToken\n          .extractEvents(logs, \"Transfer\")\n          .filter(({ args: { from, to } }) => from === userAddress && to === AddressZero)\n          .map(({ args: { value } }) => decimalify(value));\n\n        const [withdrawCollateral] = activePool\n          .extractEvents(logs, \"EtherSent\")\n          .filter(({ args: { _to } }) => _to === userAddress)\n          .map(({ args: { _amount } }) => decimalify(_amount));\n\n        return {\n          params: repayLUSD.nonZero ? { withdrawCollateral, repayLUSD } : { withdrawCollateral }\n        };\n      }\n    );\n  }\n\n  private _wrapLiquidation(\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): PopulatedEthersLiquityTransaction<LiquidationDetails> {\n    const { troveManager } = _getContracts(this._readable.connection);\n\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n\n      ({ logs }) => {\n        const liquidatedAddresses = troveManager\n          .extractEvents(logs, \"TroveLiquidated\")\n          .map(({ args: { _borrower } }) => _borrower);\n\n        const [totals] = troveManager\n          .extractEvents(logs, \"Liquidation\")\n          .map(\n            ({\n              args: { _LUSDGasCompensation, _collGasCompensation, _liquidatedColl, _liquidatedDebt }\n            }) => ({\n              collateralGasCompensation: decimalify(_collGasCompensation),\n              lusdGasCompensation: decimalify(_LUSDGasCompensation),\n              totalLiquidated: new Trove(decimalify(_liquidatedColl), decimalify(_liquidatedDebt))\n            })\n          );\n\n        return {\n          liquidatedAddresses,\n          ...totals\n        };\n      }\n    );\n  }\n\n  private _extractStabilityPoolGainsWithdrawalDetails(\n    logs: Log[]\n  ): StabilityPoolGainsWithdrawalDetails {\n    const { stabilityPool } = _getContracts(this._readable.connection);\n\n    const [newLUSDDeposit] = stabilityPool\n      .extractEvents(logs, \"UserDepositChanged\")\n      .map(({ args: { _newDeposit } }) => decimalify(_newDeposit));\n\n    const [[collateralGain, lusdLoss]] = stabilityPool\n      .extractEvents(logs, \"ETHGainWithdrawn\")\n      .map(({ args: { _ETH, _LUSDLoss } }) => [decimalify(_ETH), decimalify(_LUSDLoss)]);\n\n    const [lqtyReward] = stabilityPool\n      .extractEvents(logs, \"LQTYPaidToDepositor\")\n      .map(({ args: { _LQTY } }) => decimalify(_LQTY));\n\n    return {\n      lusdLoss,\n      newLUSDDeposit,\n      collateralGain,\n      lqtyReward\n    };\n  }\n\n  private _wrapStabilityPoolGainsWithdrawal(\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): PopulatedEthersLiquityTransaction<StabilityPoolGainsWithdrawalDetails> {\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n      ({ logs }) => this._extractStabilityPoolGainsWithdrawalDetails(logs)\n    );\n  }\n\n  private _wrapStabilityDepositTopup(\n    change: { depositLUSD: Decimal },\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): PopulatedEthersLiquityTransaction<StabilityDepositChangeDetails> {\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n\n      ({ logs }) => ({\n        ...this._extractStabilityPoolGainsWithdrawalDetails(logs),\n        change\n      })\n    );\n  }\n\n  private async _wrapStabilityDepositWithdrawal(\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): Promise<PopulatedEthersLiquityTransaction<StabilityDepositChangeDetails>> {\n    const { stabilityPool, lusdToken } = _getContracts(this._readable.connection);\n\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n\n      ({ logs, from: userAddress }) => {\n        const gainsWithdrawalDetails = this._extractStabilityPoolGainsWithdrawalDetails(logs);\n\n        const [withdrawLUSD] = lusdToken\n          .extractEvents(logs, \"Transfer\")\n          .filter(({ args: { from, to } }) => from === stabilityPool.address && to === userAddress)\n          .map(({ args: { value } }) => decimalify(value));\n\n        return {\n          ...gainsWithdrawalDetails,\n          change: { withdrawLUSD, withdrawAllLUSD: gainsWithdrawalDetails.newLUSDDeposit.isZero }\n        };\n      }\n    );\n  }\n\n  private _wrapCollateralGainTransfer(\n    rawPopulatedTransaction: EthersPopulatedTransaction\n  ): PopulatedEthersLiquityTransaction<CollateralGainTransferDetails> {\n    const { borrowerOperations } = _getContracts(this._readable.connection);\n\n    return new PopulatedEthersLiquityTransaction(\n      rawPopulatedTransaction,\n      this._readable.connection,\n\n      ({ logs }) => {\n        const [newTrove] = borrowerOperations\n          .extractEvents(logs, \"TroveUpdated\")\n          .map(({ args: { _coll, _debt } }) => new Trove(decimalify(_coll), decimalify(_debt)));\n\n        return {\n          ...this._extractStabilityPoolGainsWithdrawalDetails(logs),\n          newTrove\n        };\n      }\n    );\n  }\n\n  private _prepareOverrides(overrides?: EthersTransactionOverrides): EthersTransactionOverrides {\n    return { ...overrides, from: _requireAddress(this._readable.connection, overrides) };\n  }\n\n  private async _findHintsForNominalCollateralRatio(\n    nominalCollateralRatio: Decimal,\n    ownAddress?: string\n  ): Promise<[string, string]> {\n    const { sortedTroves, hintHelpers } = _getContracts(this._readable.connection);\n    const numberOfTroves = await this._readable.getNumberOfTroves();\n\n    if (!numberOfTroves) {\n      return [AddressZero, AddressZero];\n    }\n\n    if (nominalCollateralRatio.infinite) {\n      return [AddressZero, await sortedTroves.getFirst()];\n    }\n\n    const totalNumberOfTrials = Math.ceil(10 * Math.sqrt(numberOfTroves));\n    const [firstTrials, ...restOfTrials] = generateTrials(totalNumberOfTrials);\n\n    const collectApproxHint = (\n      {\n        latestRandomSeed,\n        results\n      }: {\n        latestRandomSeed: BigNumberish;\n        results: { diff: BigNumber; hintAddress: string }[];\n      },\n      numberOfTrials: number\n    ) =>\n      hintHelpers\n        .getApproxHint(nominalCollateralRatio.hex, numberOfTrials, latestRandomSeed)\n        .then(({ latestRandomSeed, ...result }) => ({\n          latestRandomSeed,\n          results: [...results, result]\n        }));\n\n    const { results } = await restOfTrials.reduce(\n      (p, numberOfTrials) => p.then(state => collectApproxHint(state, numberOfTrials)),\n      collectApproxHint({ latestRandomSeed: randomInteger(), results: [] }, firstTrials)\n    );\n\n    const { hintAddress } = results.reduce((a, b) => (a.diff.lt(b.diff) ? a : b));\n\n    let [prev, next] = await sortedTroves.findInsertPosition(\n      nominalCollateralRatio.hex,\n      hintAddress,\n      hintAddress\n    );\n\n    if (ownAddress) {\n      // In the case of reinsertion, the address of the Trove being reinserted is not a usable hint,\n      // because it is deleted from the list before the reinsertion.\n      // \"Jump over\" the Trove to get the proper hint.\n      if (prev === ownAddress) {\n        prev = await sortedTroves.getPrev(prev);\n      } else if (next === ownAddress) {\n        next = await sortedTroves.getNext(next);\n      }\n    }\n\n    // Don't use `address(0)` as hint as it can result in huge gas cost.\n    // (See https://github.com/liquity/dev/issues/600).\n    if (prev === AddressZero) {\n      prev = next;\n    } else if (next === AddressZero) {\n      next = prev;\n    }\n\n    return [prev, next];\n  }\n\n  private async _findHints(trove: Trove, ownAddress?: string): Promise<[string, string]> {\n    if (trove instanceof TroveWithPendingRedistribution) {\n      throw new Error(\"Rewards must be applied to this Trove\");\n    }\n\n    return this._findHintsForNominalCollateralRatio(trove._nominalCollateralRatio, ownAddress);\n  }\n\n  private async _findRedemptionHints(\n    amount: Decimal\n  ): Promise<\n    [\n      truncatedAmount: Decimal,\n      firstRedemptionHint: string,\n      partialRedemptionUpperHint: string,\n      partialRedemptionLowerHint: string,\n      partialRedemptionHintNICR: BigNumber\n    ]\n  > {\n    const { hintHelpers } = _getContracts(this._readable.connection);\n    const price = await this._readable.getPrice();\n\n    const {\n      firstRedemptionHint,\n      partialRedemptionHintNICR,\n      truncatedLUSDamount\n    } = await hintHelpers.getRedemptionHints(amount.hex, price.hex, _redeemMaxIterations);\n\n    const [\n      partialRedemptionUpperHint,\n      partialRedemptionLowerHint\n    ] = partialRedemptionHintNICR.isZero()\n        ? [AddressZero, AddressZero]\n        : await this._findHintsForNominalCollateralRatio(\n          decimalify(partialRedemptionHintNICR)\n          // XXX: if we knew the partially redeemed Trove's address, we'd pass it here\n        );\n\n    return [\n      decimalify(truncatedLUSDamount),\n      firstRedemptionHint,\n      partialRedemptionUpperHint,\n      partialRedemptionLowerHint,\n      partialRedemptionHintNICR\n    ];\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.openTrove} */\n  async openTrove(\n    params: TroveCreationParams<Decimalish>,\n    maxBorrowingRateOrOptionalParams?: Decimalish | BorrowingOperationOptionalParams,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveCreationDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { borrowerOperations } = _getContracts(this._readable.connection);\n\n    const normalizedParams = _normalizeTroveCreation(params);\n    const { depositCollateral, borrowLUSD } = normalizedParams;\n\n    const [fees, blockTimestamp, total, price] = await Promise.all([\n      this._readable._getFeesFactory(),\n      this._readable._getBlockTimestamp(),\n      this._readable.getTotal(),\n      this._readable.getPrice()\n    ]);\n\n    const recoveryMode = total.collateralRatioIsBelowCritical(price);\n\n    const decayBorrowingRate = (seconds: number) =>\n      fees(blockTimestamp + seconds, recoveryMode).borrowingRate();\n\n    const currentBorrowingRate = decayBorrowingRate(0);\n    const newTrove = Trove.create(normalizedParams, currentBorrowingRate);\n    const hints = await this._findHints(newTrove);\n\n    const {\n      maxBorrowingRate,\n      borrowingFeeDecayToleranceMinutes\n    } = normalizeBorrowingOperationOptionalParams(\n      maxBorrowingRateOrOptionalParams,\n      currentBorrowingRate\n    );\n\n    const txParams = (borrowLUSD: Decimal): Parameters<typeof borrowerOperations.openTrove> => [\n      maxBorrowingRate.hex,\n      borrowLUSD.hex,\n      ...hints,\n      { value: depositCollateral.hex, ...overrides }\n    ];\n\n    let gasHeadroom: number | undefined;\n\n    if (overrides?.gasLimit === undefined) {\n      const decayedBorrowingRate = decayBorrowingRate(60 * borrowingFeeDecayToleranceMinutes);\n      const decayedTrove = Trove.create(normalizedParams, decayedBorrowingRate);\n      const { borrowLUSD: borrowLUSDSimulatingDecay } = Trove.recreate(\n        decayedTrove,\n        currentBorrowingRate\n      );\n\n      if (decayedTrove.debt.lt(LUSD_MINIMUM_DEBT)) {\n        throw new Error(\n          `Trove's debt might fall below ${LUSD_MINIMUM_DEBT} ` +\n          `within ${borrowingFeeDecayToleranceMinutes} minutes`\n        );\n      }\n\n      const [gasNow, gasLater] = await Promise.all([\n        borrowerOperations.estimateGas.openTrove(...txParams(borrowLUSD)),\n        borrowerOperations.estimateGas.openTrove(...txParams(borrowLUSDSimulatingDecay))\n      ]);\n\n      const gasLimit = addGasForBaseRateUpdate(borrowingFeeDecayToleranceMinutes)(\n        bigNumberMax(addGasForPotentialListTraversal(gasNow), gasLater)\n      );\n\n      gasHeadroom = gasLimit.sub(gasNow).toNumber();\n      overrides = { ...overrides, gasLimit };\n    }\n\n    return this._wrapTroveChangeWithFees(\n      normalizedParams,\n      await borrowerOperations.populateTransaction.openTrove(...txParams(borrowLUSD)),\n      gasHeadroom\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.closeTrove} */\n  async closeTrove(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveClosureDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { borrowerOperations } = _getContracts(this._readable.connection);\n\n    return this._wrapTroveClosure(\n      await borrowerOperations.estimateAndPopulate.closeTrove(overrides, id)\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.depositCollateral} */\n  depositCollateral(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this.adjustTrove({ depositCollateral: amount }, undefined, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawCollateral} */\n  withdrawCollateral(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this.adjustTrove({ withdrawCollateral: amount }, undefined, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.borrowLUSD} */\n  borrowLUSD(\n    amount: Decimalish,\n    maxBorrowingRate?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this.adjustTrove({ borrowLUSD: amount }, maxBorrowingRate, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.repayLUSD} */\n  repayLUSD(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this.adjustTrove({ repayLUSD: amount }, undefined, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.adjustTrove} */\n  async adjustTrove(\n    params: TroveAdjustmentParams<Decimalish>,\n    maxBorrowingRateOrOptionalParams?: Decimalish | BorrowingOperationOptionalParams,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { borrowerOperations } = _getContracts(this._readable.connection);\n\n    const normalizedParams = _normalizeTroveAdjustment(params);\n    const { depositCollateral, withdrawCollateral, borrowLUSD, repayLUSD } = normalizedParams;\n\n    const [trove, feeVars] = await Promise.all([\n      this._readable.getTrove(overrides.from),\n      borrowLUSD &&\n      promiseAllValues({\n        fees: this._readable._getFeesFactory(),\n        blockTimestamp: this._readable._getBlockTimestamp(),\n        total: this._readable.getTotal(),\n        price: this._readable.getPrice()\n      })\n    ]);\n\n    const decayBorrowingRate = (seconds: number) =>\n      feeVars\n        ?.fees(\n          feeVars.blockTimestamp + seconds,\n          feeVars.total.collateralRatioIsBelowCritical(feeVars.price)\n        )\n        .borrowingRate();\n\n    const currentBorrowingRate = decayBorrowingRate(0);\n    const adjustedTrove = trove.adjust(normalizedParams, currentBorrowingRate);\n    const hints = await this._findHints(adjustedTrove, overrides.from);\n\n    const {\n      maxBorrowingRate,\n      borrowingFeeDecayToleranceMinutes\n    } = normalizeBorrowingOperationOptionalParams(\n      maxBorrowingRateOrOptionalParams,\n      currentBorrowingRate\n    );\n\n    const txParams = (borrowLUSD?: Decimal): Parameters<typeof borrowerOperations.adjustTrove> => [\n      maxBorrowingRate.hex,\n      (withdrawCollateral ?? Decimal.ZERO).hex,\n      (borrowLUSD ?? repayLUSD ?? Decimal.ZERO).hex,\n      !!borrowLUSD,\n      ...hints,\n      { value: depositCollateral?.hex, ...overrides }\n    ];\n\n    let gasHeadroom: number | undefined;\n\n    if (overrides.gasLimit === undefined) {\n      const decayedBorrowingRate = decayBorrowingRate(60 * borrowingFeeDecayToleranceMinutes);\n      const decayedTrove = trove.adjust(normalizedParams, decayedBorrowingRate);\n      const { borrowLUSD: borrowLUSDSimulatingDecay } = trove.adjustTo(\n        decayedTrove,\n        currentBorrowingRate\n      );\n\n      if (decayedTrove.debt.lt(LUSD_MINIMUM_DEBT)) {\n        throw new Error(\n          `Trove's debt might fall below ${LUSD_MINIMUM_DEBT} ` +\n          `within ${borrowingFeeDecayToleranceMinutes} minutes`\n        );\n      }\n\n      const [gasNow, gasLater] = await Promise.all([\n        borrowerOperations.estimateGas.adjustTrove(...txParams(borrowLUSD)),\n        borrowLUSD &&\n        borrowerOperations.estimateGas.adjustTrove(...txParams(borrowLUSDSimulatingDecay))\n      ]);\n\n      let gasLimit = bigNumberMax(addGasForPotentialListTraversal(gasNow), gasLater);\n\n      if (borrowLUSD) {\n        gasLimit = addGasForBaseRateUpdate(borrowingFeeDecayToleranceMinutes)(gasLimit);\n      }\n\n      gasHeadroom = gasLimit.sub(gasNow).toNumber();\n      overrides = { ...overrides, gasLimit };\n    }\n\n    return this._wrapTroveChangeWithFees(\n      normalizedParams,\n      await borrowerOperations.populateTransaction.adjustTrove(...txParams(borrowLUSD)),\n      gasHeadroom\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.claimCollateralSurplus} */\n  async claimCollateralSurplus(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { borrowerOperations } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await borrowerOperations.estimateAndPopulate.claimCollateral(overrides, id)\n    );\n  }\n\n  /** @internal */\n  async setPrice(\n    price: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { priceFeed } = _getContracts(this._readable.connection);\n\n    if (!_priceFeedIsTestnet(priceFeed)) {\n      throw new Error(\"setPrice() unavailable on this deployment of Liquity\");\n    }\n\n    return this._wrapSimpleTransaction(\n      await priceFeed.estimateAndPopulate.setPrice(overrides, id, Decimal.from(price).hex)\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.liquidate} */\n  async liquidate(\n    address: string | string[],\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<LiquidationDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { troveManager } = _getContracts(this._readable.connection);\n\n    if (Array.isArray(address)) {\n      return this._wrapLiquidation(\n        await troveManager.estimateAndPopulate.batchLiquidateTroves(\n          overrides,\n          addGasForLQTYIssuance,\n          address\n        )\n      );\n    } else {\n      return this._wrapLiquidation(\n        await troveManager.estimateAndPopulate.liquidate(overrides, addGasForLQTYIssuance, address)\n      );\n    }\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.liquidateUpTo} */\n  async liquidateUpTo(\n    maximumNumberOfTrovesToLiquidate: number,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<LiquidationDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { troveManager } = _getContracts(this._readable.connection);\n\n    return this._wrapLiquidation(\n      await troveManager.estimateAndPopulate.liquidateTroves(\n        overrides,\n        addGasForLQTYIssuance,\n        maximumNumberOfTrovesToLiquidate\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.depositLUSDInStabilityPool} */\n  async depositLUSDInStabilityPool(\n    amount: Decimalish,\n    frontendTag?: string,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<StabilityDepositChangeDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { stabilityPool } = _getContracts(this._readable.connection);\n    const depositLUSD = Decimal.from(amount);\n\n    return this._wrapStabilityDepositTopup(\n      { depositLUSD },\n      await stabilityPool.estimateAndPopulate.provideToSP(\n        overrides,\n        addGasForLQTYIssuance,\n        depositLUSD.hex,\n        frontendTag ?? this._readable.connection.frontendTag ?? AddressZero\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawLUSDFromStabilityPool} */\n  async withdrawLUSDFromStabilityPool(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<StabilityDepositChangeDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { stabilityPool } = _getContracts(this._readable.connection);\n\n    return this._wrapStabilityDepositWithdrawal(\n      await stabilityPool.estimateAndPopulate.withdrawFromSP(\n        overrides,\n        addGasForLQTYIssuance,\n        Decimal.from(amount).hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawGainsFromStabilityPool} */\n  async withdrawGainsFromStabilityPool(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<StabilityPoolGainsWithdrawalDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { stabilityPool } = _getContracts(this._readable.connection);\n\n    return this._wrapStabilityPoolGainsWithdrawal(\n      await stabilityPool.estimateAndPopulate.withdrawFromSP(\n        overrides,\n        addGasForLQTYIssuance,\n        Decimal.ZERO.hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.transferCollateralGainToTrove} */\n  async transferCollateralGainToTrove(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<CollateralGainTransferDetails>> {\n    overrides = this._prepareOverrides(overrides);\n    const { stabilityPool } = _getContracts(this._readable.connection);\n\n    const [initialTrove, stabilityDeposit] = await Promise.all([\n      this._readable.getTrove(overrides.from),\n      this._readable.getStabilityDeposit(overrides.from)\n    ]);\n\n    const finalTrove = initialTrove.addCollateral(stabilityDeposit.collateralGain);\n\n    return this._wrapCollateralGainTransfer(\n      await stabilityPool.estimateAndPopulate.withdrawETHGainToTrove(\n        overrides,\n        compose(addGasForPotentialListTraversal, addGasForLQTYIssuance),\n        ...(await this._findHints(finalTrove, overrides.from))\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.sendLUSD} */\n  async sendLUSD(\n    toAddress: string,\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { lusdToken } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await lusdToken.estimateAndPopulate.transfer(\n        overrides,\n        id,\n        toAddress,\n        Decimal.from(amount).hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.sendLQTY} */\n  async sendLQTY(\n    toAddress: string,\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { lqtyToken } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await lqtyToken.estimateAndPopulate.transfer(\n        overrides,\n        id,\n        toAddress,\n        Decimal.from(amount).hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.redeemLUSD} */\n  async redeemLUSD(\n    amount: Decimalish,\n    maxRedemptionRate?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersRedemption> {\n    const preparedOverrides = this._prepareOverrides(overrides);\n    const { troveManager } = _getContracts(this._readable.connection);\n    const attemptedLUSDAmount = Decimal.from(amount);\n\n    const [\n      fees,\n      total,\n      [truncatedAmount, firstRedemptionHint, ...partialHints]\n    ] = await Promise.all([\n      this._readable.getFees(),\n      this._readable.getTotal(),\n      this._findRedemptionHints(attemptedLUSDAmount)\n    ]);\n\n    if (truncatedAmount.isZero) {\n      throw new Error(\n        `redeemLUSD: amount too low to redeem (try at least ${LUSD_MINIMUM_NET_DEBT})`\n      );\n    }\n\n    const defaultMaxRedemptionRate = (amount: Decimal) =>\n      Decimal.min(\n        fees.redemptionRate(amount.div(total.debt)).add(defaultRedemptionRateSlippageTolerance),\n        Decimal.ONE\n      );\n\n    const populateRedemption = async (\n      attemptedLUSDAmount: Decimal,\n      maxRedemptionRate?: Decimalish,\n      truncatedAmount: Decimal = attemptedLUSDAmount,\n      partialHints: [string, string, BigNumberish] = [AddressZero, AddressZero, 0]\n    ): Promise<PopulatedEthersRedemption> => {\n      const maxRedemptionRateOrDefault =\n        maxRedemptionRate !== undefined\n          ? Decimal.from(maxRedemptionRate)\n          : defaultMaxRedemptionRate(truncatedAmount);\n\n      return new PopulatedEthersRedemption(\n        await troveManager.estimateAndPopulate.redeemCollateral(\n          preparedOverrides,\n          addGasForBaseRateUpdate(),\n          truncatedAmount.hex,\n          firstRedemptionHint,\n          ...partialHints,\n          _redeemMaxIterations,\n          maxRedemptionRateOrDefault.hex\n        ),\n\n        this._readable.connection,\n        attemptedLUSDAmount,\n        truncatedAmount,\n\n        truncatedAmount.lt(attemptedLUSDAmount)\n          ? newMaxRedemptionRate =>\n            populateRedemption(\n              truncatedAmount.add(LUSD_MINIMUM_NET_DEBT),\n              newMaxRedemptionRate ?? maxRedemptionRate\n            )\n          : undefined\n      );\n    };\n\n    return populateRedemption(attemptedLUSDAmount, maxRedemptionRate, truncatedAmount, partialHints);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.stakeLQTY} */\n  async stakeLQTY(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { lqtyStaking } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await lqtyStaking.estimateAndPopulate.stake(overrides, id, Decimal.from(amount).hex)\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.unstakeLQTY} */\n  async unstakeLQTY(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { lqtyStaking } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await lqtyStaking.estimateAndPopulate.unstake(overrides, id, Decimal.from(amount).hex)\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawGainsFromStaking} */\n  withdrawGainsFromStaking(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    return this.unstakeLQTY(Decimal.ZERO, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.registerFrontend} */\n  async registerFrontend(\n    kickbackRate: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    console.debug(\"lib-ethers: registerFrontend()\", kickbackRate, typeof kickbackRate);\n\n    overrides = this._prepareOverrides(overrides);\n    const { stabilityPool } = _getContracts(this._readable.connection);\n\n    console.debug(\"lib-ethers: registerFrontend() 更改\", kickbackRate, Decimal.from(kickbackRate));\n\n    return this._wrapSimpleTransaction(\n      await stabilityPool.estimateAndPopulate.registerFrontEnd(\n        overrides,\n        id,\n        Decimal.from(kickbackRate).hex\n      )\n    );\n  }\n\n  /** @internal */\n  async _mintUniToken(\n    amount: Decimalish,\n    address?: string,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    address ??= _requireAddress(this._readable.connection, overrides);\n    overrides = this._prepareOverrides(overrides);\n    const { uniToken } = _getContracts(this._readable.connection);\n\n    if (!_uniTokenIsMock(uniToken)) {\n      throw new Error(\"_mintUniToken() unavailable on this deployment of Liquity\");\n    }\n\n    return this._wrapSimpleTransaction(\n      await uniToken.estimateAndPopulate.mint(overrides, id, address, Decimal.from(amount).hex)\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.approveUniTokens} */\n  async approveUniTokens(\n    allowance?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { uniToken, unipool } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await uniToken.estimateAndPopulate.approve(\n        overrides,\n        id,\n        unipool.address,\n        Decimal.from(allowance ?? Decimal.INFINITY).hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.stakeUniTokens} */\n  async stakeUniTokens(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { unipool } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await unipool.estimateAndPopulate.stake(\n        overrides,\n        addGasForUnipoolRewardUpdate,\n        Decimal.from(amount).hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.unstakeUniTokens} */\n  async unstakeUniTokens(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { unipool } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await unipool.estimateAndPopulate.withdraw(\n        overrides,\n        addGasForUnipoolRewardUpdate,\n        Decimal.from(amount).hex\n      )\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawLQTYRewardFromLiquidityMining} */\n  async withdrawLQTYRewardFromLiquidityMining(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { unipool } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await unipool.estimateAndPopulate.claimReward(overrides, addGasForUnipoolRewardUpdate)\n    );\n  }\n\n  /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.exitLiquidityMining} */\n  async exitLiquidityMining(\n    overrides?: EthersTransactionOverrides\n  ): Promise<PopulatedEthersLiquityTransaction<void>> {\n    overrides = this._prepareOverrides(overrides);\n    const { unipool } = _getContracts(this._readable.connection);\n\n    return this._wrapSimpleTransaction(\n      await unipool.estimateAndPopulate.withdrawAndClaim(overrides, addGasForUnipoolRewardUpdate)\n    );\n  }\n}\n", "import {\n  CollateralGainTransferDetails,\n  Decimalish,\n  LiquidationDetails,\n  RedemptionDetails,\n  SendableLiquity,\n  StabilityDepositChangeDetails,\n  StabilityPoolGainsWithdrawalDetails,\n  TroveAdjustmentDetails,\n  TroveAdjustmentParams,\n  TroveClosureDetails,\n  TroveCreationDetails,\n  TroveCreationParams\n} from \"@liquity/lib-base\";\n\nimport {\n  EthersTransactionOverrides,\n  EthersTransactionReceipt,\n  EthersTransactionResponse\n} from \"./types\";\n\nimport {\n  BorrowingOperationOptionalParams,\n  PopulatableEthersLiquity,\n  PopulatedEthersLiquityTransaction,\n  SentEthersLiquityTransaction\n} from \"./PopulatableEthersLiquity\";\n\nconst sendTransaction = <T>(tx: PopulatedEthersLiquityTransaction<T>) => tx.send();\n\n/**\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\n *\n * @public\n */\nexport class SendableEthersLiquity\n  implements SendableLiquity<EthersTransactionReceipt, EthersTransactionResponse> {\n  private _populate: PopulatableEthersLiquity;\n\n  constructor(populatable: PopulatableEthersLiquity) {\n    this._populate = populatable;\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove} */\n  async openTrove(\n    params: TroveCreationParams<Decimalish>,\n    maxBorrowingRateOrOptionalParams?: Decimalish | BorrowingOperationOptionalParams,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveCreationDetails>> {\n    return this._populate\n      .openTrove(params, maxBorrowingRateOrOptionalParams, overrides)\n      .then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove} */\n  closeTrove(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveClosureDetails>> {\n    return this._populate.closeTrove(overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove} */\n  adjustTrove(\n    params: TroveAdjustmentParams<Decimalish>,\n    maxBorrowingRateOrOptionalParams?: Decimalish | BorrowingOperationOptionalParams,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this._populate\n      .adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides)\n      .then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral} */\n  depositCollateral(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this._populate.depositCollateral(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral} */\n  withdrawCollateral(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this._populate.withdrawCollateral(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD} */\n  borrowLUSD(\n    amount: Decimalish,\n    maxBorrowingRate?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this._populate.borrowLUSD(amount, maxBorrowingRate, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD} */\n  repayLUSD(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<TroveAdjustmentDetails>> {\n    return this._populate.repayLUSD(amount, overrides).then(sendTransaction);\n  }\n\n  /** @internal */\n  setPrice(\n    price: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.setPrice(price, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate} */\n  liquidate(\n    address: string | string[],\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<LiquidationDetails>> {\n    return this._populate.liquidate(address, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo} */\n  liquidateUpTo(\n    maximumNumberOfTrovesToLiquidate: number,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<LiquidationDetails>> {\n    return this._populate\n      .liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides)\n      .then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool} */\n  depositLUSDInStabilityPool(\n    amount: Decimalish,\n    frontendTag?: string,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<StabilityDepositChangeDetails>> {\n    return this._populate\n      .depositLUSDInStabilityPool(amount, frontendTag, overrides)\n      .then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool} */\n  withdrawLUSDFromStabilityPool(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<StabilityDepositChangeDetails>> {\n    return this._populate.withdrawLUSDFromStabilityPool(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool} */\n  withdrawGainsFromStabilityPool(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<StabilityPoolGainsWithdrawalDetails>> {\n    return this._populate.withdrawGainsFromStabilityPool(overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove} */\n  transferCollateralGainToTrove(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<CollateralGainTransferDetails>> {\n    return this._populate.transferCollateralGainToTrove(overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD} */\n  sendLUSD(\n    toAddress: string,\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.sendLUSD(toAddress, amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY} */\n  sendLQTY(\n    toAddress: string,\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.sendLQTY(toAddress, amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD} */\n  redeemLUSD(\n    amount: Decimalish,\n    maxRedemptionRate?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<RedemptionDetails>> {\n    return this._populate.redeemLUSD(amount, maxRedemptionRate, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus} */\n  claimCollateralSurplus(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.claimCollateralSurplus(overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY} */\n  stakeLQTY(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.stakeLQTY(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY} */\n  unstakeLQTY(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.unstakeLQTY(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking} */\n  withdrawGainsFromStaking(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.withdrawGainsFromStaking(overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend} */\n  registerFrontend(\n    kickbackRate: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.registerFrontend(kickbackRate, overrides).then(sendTransaction);\n  }\n\n  /** @internal */\n  _mintUniToken(\n    amount: Decimalish,\n    address?: string,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate._mintUniToken(amount, address, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.approveUniTokens} */\n  approveUniTokens(\n    allowance?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.approveUniTokens(allowance, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeUniTokens} */\n  stakeUniTokens(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.stakeUniTokens(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeUniTokens} */\n  unstakeUniTokens(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.unstakeUniTokens(amount, overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLQTYRewardFromLiquidityMining} */\n  withdrawLQTYRewardFromLiquidityMining(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.withdrawLQTYRewardFromLiquidityMining(overrides).then(sendTransaction);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#SendableLiquity.exitLiquidityMining} */\n  exitLiquidityMining(\n    overrides?: EthersTransactionOverrides\n  ): Promise<SentEthersLiquityTransaction<void>> {\n    return this._populate.exitLiquidityMining(overrides).then(sendTransaction);\n  }\n}\n", "import { BlockTag } from \"@ethersproject/abstract-provider\";\n\nimport {\n  CollateralGainTransferDetails,\n  Decimal,\n  Decimalish,\n  FailedReceipt,\n  Fees,\n  FrontendStatus,\n  LiquidationDetails,\n  LiquityStore,\n  LQTYStake,\n  RedemptionDetails,\n  StabilityDeposit,\n  StabilityDepositChangeDetails,\n  StabilityPoolGainsWithdrawalDetails,\n  TransactableLiquity,\n  TransactionFailedError,\n  Trove,\n  TroveAdjustmentDetails,\n  TroveAdjustmentParams,\n  TroveClosureDetails,\n  TroveCreationDetails,\n  TroveCreationParams,\n  TroveListingParams,\n  TroveWithPendingRedistribution,\n  UserTrove\n} from \"@liquity/lib-base\";\n\nimport {\n  EthersLiquityConnection,\n  EthersLiquityConnectionOptionalParams,\n  EthersLiquityStoreOption,\n  _connect,\n  _usingStore\n} from \"./EthersLiquityConnection\";\n\nimport {\n  EthersCallOverrides,\n  EthersProvider,\n  EthersSigner,\n  EthersTransactionOverrides,\n  EthersTransactionReceipt\n} from \"./types\";\n\nimport {\n  BorrowingOperationOptionalParams,\n  PopulatableEthersLiquity,\n  SentEthersLiquityTransaction\n} from \"./PopulatableEthersLiquity\";\nimport { ReadableEthersLiquity, ReadableEthersLiquityWithStore } from \"./ReadableEthersLiquity\";\nimport { SendableEthersLiquity } from \"./SendableEthersLiquity\";\nimport { BlockPolledLiquityStore } from \"./BlockPolledLiquityStore\";\n\n/**\n * Thrown by {@link EthersLiquity} in case of transaction failure.\n *\n * @public\n */\nexport class EthersTransactionFailedError extends TransactionFailedError<\n  FailedReceipt<EthersTransactionReceipt>\n> {\n  constructor(message: string, failedReceipt: FailedReceipt<EthersTransactionReceipt>) {\n    super(\"EthersTransactionFailedError\", message, failedReceipt);\n  }\n}\n\nconst waitForSuccess = async <T>(tx: SentEthersLiquityTransaction<T>) => {\n  const receipt = await tx.waitForReceipt();\n\n  if (receipt.status !== \"succeeded\") {\n    throw new EthersTransactionFailedError(\"Transaction failed\", receipt);\n  }\n\n  return receipt.details;\n};\n\n/**\n * Convenience class that combines multiple interfaces of the library in one object.\n *\n * @public\n */\nexport class EthersLiquity implements ReadableEthersLiquity, TransactableLiquity {\n  /** Information about the connection to the Liquity protocol. */\n  readonly connection: EthersLiquityConnection;\n\n  /** Can be used to create populated (unsigned) transactions. */\n  readonly populate: PopulatableEthersLiquity;\n\n  /** Can be used to send transactions without waiting for them to be mined. */\n  readonly send: SendableEthersLiquity;\n\n  private _readable: ReadableEthersLiquity;\n\n  /** @internal */\n  constructor(readable: ReadableEthersLiquity) {\n    this._readable = readable;\n    this.connection = readable.connection;\n    this.populate = new PopulatableEthersLiquity(readable);\n    this.send = new SendableEthersLiquity(this.populate);\n  }\n\n  /** @internal */\n  static _from(\n    connection: EthersLiquityConnection & { useStore: \"blockPolled\" }\n  ): EthersLiquityWithStore<BlockPolledLiquityStore>;\n\n  /** @internal */\n  static _from(connection: EthersLiquityConnection): EthersLiquity;\n\n  /** @internal */\n  static _from(connection: EthersLiquityConnection): EthersLiquity {\n    if (_usingStore(connection)) {\n      return new _EthersLiquityWithStore(ReadableEthersLiquity._from(connection));\n    } else {\n      return new EthersLiquity(ReadableEthersLiquity._from(connection));\n    }\n  }\n\n  /** @internal */\n  static connect(\n    signerOrProvider: EthersSigner | EthersProvider,\n    optionalParams: EthersLiquityConnectionOptionalParams & { useStore: \"blockPolled\" }\n  ): Promise<EthersLiquityWithStore<BlockPolledLiquityStore>>;\n\n  /**\n   * Connect to the Liquity protocol and create an `EthersLiquity` object.\n   *\n   * @param signerOrProvider - Ethers `Signer` or `Provider` to use for connecting to the Ethereum\n   *                           network.\n   * @param optionalParams - Optional parameters that can be used to customize the connection.\n   */\n  static connect(\n    signerOrProvider: EthersSigner | EthersProvider,\n    optionalParams?: EthersLiquityConnectionOptionalParams\n  ): Promise<EthersLiquity>;\n\n  static async connect(\n    signerOrProvider: EthersSigner | EthersProvider,\n    optionalParams?: EthersLiquityConnectionOptionalParams\n  ): Promise<EthersLiquity> {\n    return EthersLiquity._from(await _connect(signerOrProvider, optionalParams));\n  }\n\n  /**\n   * Check whether this `EthersLiquity` is an {@link EthersLiquityWithStore}.\n   */\n  hasStore(): this is EthersLiquityWithStore;\n\n  /**\n   * Check whether this `EthersLiquity` is an\n   * {@link EthersLiquityWithStore}\\<{@link BlockPolledLiquityStore}\\>.\n   */\n  hasStore(store: \"blockPolled\"): this is EthersLiquityWithStore<BlockPolledLiquityStore>;\n\n  hasStore(): boolean {\n    return false;\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalRedistributed} */\n  getTotalRedistributed(overrides?: EthersCallOverrides): Promise<Trove> {\n    return this._readable.getTotalRedistributed(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTroveBeforeRedistribution} */\n  getTroveBeforeRedistribution(\n    address?: string,\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution> {\n    return this._readable.getTroveBeforeRedistribution(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTrove} */\n  getTrove(address?: string, overrides?: EthersCallOverrides): Promise<UserTrove> {\n    return this._readable.getTrove(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getNumberOfTroves} */\n  getNumberOfTroves(overrides?: EthersCallOverrides): Promise<number> {\n    return this._readable.getNumberOfTroves(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getPrice} */\n  getPrice(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getPrice(overrides);\n  }\n\n  /** @internal */\n  _getActivePool(overrides?: EthersCallOverrides): Promise<Trove> {\n    return this._readable._getActivePool(overrides);\n  }\n\n  /** @internal */\n  _getDefaultPool(overrides?: EthersCallOverrides): Promise<Trove> {\n    return this._readable._getDefaultPool(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotal} */\n  getTotal(overrides?: EthersCallOverrides): Promise<Trove> {\n    return this._readable.getTotal(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getStabilityDeposit} */\n  getStabilityDeposit(address?: string, overrides?: EthersCallOverrides): Promise<StabilityDeposit> {\n    return this._readable.getStabilityDeposit(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingStabilityPoolLQTYReward} */\n  getRemainingStabilityPoolLQTYReward(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getRemainingStabilityPoolLQTYReward(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDInStabilityPool} */\n  getLUSDInStabilityPool(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getLUSDInStabilityPool(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDBalance} */\n  getLUSDBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getLUSDBalance(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYBalance} */\n  getLQTYBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getLQTYBalance(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenBalance} */\n  getUniTokenBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getUniTokenBalance(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenAllowance} */\n  getUniTokenAllowance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getUniTokenAllowance(address, overrides);\n  }\n\n  /** @internal */\n  _getRemainingLiquidityMiningLQTYRewardCalculator(\n    overrides?: EthersCallOverrides\n  ): Promise<(blockTimestamp: number) => Decimal> {\n    return this._readable._getRemainingLiquidityMiningLQTYRewardCalculator(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingLiquidityMiningLQTYReward} */\n  getRemainingLiquidityMiningLQTYReward(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getRemainingLiquidityMiningLQTYReward(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningStake} */\n  getLiquidityMiningStake(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getLiquidityMiningStake(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedUniTokens} */\n  getTotalStakedUniTokens(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getTotalStakedUniTokens(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningLQTYReward} */\n  getLiquidityMiningLQTYReward(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getLiquidityMiningLQTYReward(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getCollateralSurplusBalance} */\n  getCollateralSurplusBalance(address?: string, overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getCollateralSurplusBalance(address, overrides);\n  }\n\n  /** @internal */\n  getTroves(\n    params: TroveListingParams & { beforeRedistribution: true },\n    overrides?: EthersCallOverrides\n  ): Promise<TroveWithPendingRedistribution[]>;\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.(getTroves:2)} */\n  getTroves(params: TroveListingParams, overrides?: EthersCallOverrides): Promise<UserTrove[]>;\n\n  getTroves(params: TroveListingParams, overrides?: EthersCallOverrides): Promise<UserTrove[]> {\n    return this._readable.getTroves(params, overrides);\n  }\n\n  /** @internal */\n  _getBlockTimestamp(blockTag?: BlockTag): Promise<number> {\n    return this._readable._getBlockTimestamp(blockTag);\n  }\n\n  /** @internal */\n  _getFeesFactory(\n    overrides?: EthersCallOverrides\n  ): Promise<(blockTimestamp: number, recoveryMode: boolean) => Fees> {\n    return this._readable._getFeesFactory(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFees} */\n  getFees(overrides?: EthersCallOverrides): Promise<Fees> {\n    return this._readable.getFees(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYStake} */\n  getLQTYStake(address?: string, overrides?: EthersCallOverrides): Promise<LQTYStake> {\n    return this._readable.getLQTYStake(address, overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedLQTY} */\n  getTotalStakedLQTY(overrides?: EthersCallOverrides): Promise<Decimal> {\n    return this._readable.getTotalStakedLQTY(overrides);\n  }\n\n  /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFrontendStatus} */\n  getFrontendStatus(address?: string, overrides?: EthersCallOverrides): Promise<FrontendStatus> {\n    return this._readable.getFrontendStatus(address, overrides);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.openTrove}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  openTrove(\n    params: TroveCreationParams<Decimalish>,\n    maxBorrowingRateOrOptionalParams?: Decimalish | BorrowingOperationOptionalParams,\n    overrides?: EthersTransactionOverrides\n  ): Promise<TroveCreationDetails> {\n    return this.send\n      .openTrove(params, maxBorrowingRateOrOptionalParams, overrides)\n      .then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.closeTrove}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  closeTrove(overrides?: EthersTransactionOverrides): Promise<TroveClosureDetails> {\n    return this.send.closeTrove(overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.adjustTrove}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  adjustTrove(\n    params: TroveAdjustmentParams<Decimalish>,\n    maxBorrowingRateOrOptionalParams?: Decimalish | BorrowingOperationOptionalParams,\n    overrides?: EthersTransactionOverrides\n  ): Promise<TroveAdjustmentDetails> {\n    return this.send\n      .adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides)\n      .then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.depositCollateral}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  depositCollateral(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<TroveAdjustmentDetails> {\n    return this.send.depositCollateral(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawCollateral}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  withdrawCollateral(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<TroveAdjustmentDetails> {\n    return this.send.withdrawCollateral(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.borrowLUSD}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  borrowLUSD(\n    amount: Decimalish,\n    maxBorrowingRate?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<TroveAdjustmentDetails> {\n    return this.send.borrowLUSD(amount, maxBorrowingRate, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.repayLUSD}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  repayLUSD(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<TroveAdjustmentDetails> {\n    return this.send.repayLUSD(amount, overrides).then(waitForSuccess);\n  }\n\n  /** @internal */\n  setPrice(price: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.setPrice(price, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.liquidate}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  liquidate(\n    address: string | string[],\n    overrides?: EthersTransactionOverrides\n  ): Promise<LiquidationDetails> {\n    return this.send.liquidate(address, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.liquidateUpTo}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  liquidateUpTo(\n    maximumNumberOfTrovesToLiquidate: number,\n    overrides?: EthersTransactionOverrides\n  ): Promise<LiquidationDetails> {\n    return this.send.liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.depositLUSDInStabilityPool}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  depositLUSDInStabilityPool(\n    amount: Decimalish,\n    frontendTag?: string,\n    overrides?: EthersTransactionOverrides\n  ): Promise<StabilityDepositChangeDetails> {\n    return this.send.depositLUSDInStabilityPool(amount, frontendTag, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawLUSDFromStabilityPool}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  withdrawLUSDFromStabilityPool(\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<StabilityDepositChangeDetails> {\n    return this.send.withdrawLUSDFromStabilityPool(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawGainsFromStabilityPool}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  withdrawGainsFromStabilityPool(\n    overrides?: EthersTransactionOverrides\n  ): Promise<StabilityPoolGainsWithdrawalDetails> {\n    return this.send.withdrawGainsFromStabilityPool(overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.transferCollateralGainToTrove}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  transferCollateralGainToTrove(\n    overrides?: EthersTransactionOverrides\n  ): Promise<CollateralGainTransferDetails> {\n    return this.send.transferCollateralGainToTrove(overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.sendLUSD}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  sendLUSD(\n    toAddress: string,\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<void> {\n    return this.send.sendLUSD(toAddress, amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.sendLQTY}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  sendLQTY(\n    toAddress: string,\n    amount: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<void> {\n    return this.send.sendLQTY(toAddress, amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.redeemLUSD}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  redeemLUSD(\n    amount: Decimalish,\n    maxRedemptionRate?: Decimalish,\n    overrides?: EthersTransactionOverrides\n  ): Promise<RedemptionDetails> {\n    return this.send.redeemLUSD(amount, maxRedemptionRate, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.claimCollateralSurplus}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  claimCollateralSurplus(overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.claimCollateralSurplus(overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.stakeLQTY}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  stakeLQTY(amount: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.stakeLQTY(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.unstakeLQTY}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  unstakeLQTY(amount: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.unstakeLQTY(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawGainsFromStaking}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  withdrawGainsFromStaking(overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.withdrawGainsFromStaking(overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.registerFrontend}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  registerFrontend(kickbackRate: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.registerFrontend(kickbackRate, overrides).then(waitForSuccess);\n  }\n\n  /** @internal */\n  _mintUniToken(\n    amount: Decimalish,\n    address?: string,\n    overrides?: EthersTransactionOverrides\n  ): Promise<void> {\n    return this.send._mintUniToken(amount, address, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.approveUniTokens}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  approveUniTokens(allowance?: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.approveUniTokens(allowance, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.stakeUniTokens}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  stakeUniTokens(amount: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.stakeUniTokens(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.unstakeUniTokens}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  unstakeUniTokens(amount: Decimalish, overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.unstakeUniTokens(amount, overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawLQTYRewardFromLiquidityMining}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  withdrawLQTYRewardFromLiquidityMining(overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.withdrawLQTYRewardFromLiquidityMining(overrides).then(waitForSuccess);\n  }\n\n  /**\n   * {@inheritDoc @liquity/lib-base#TransactableLiquity.exitLiquidityMining}\n   *\n   * @throws\n   * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n   * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\n   */\n  exitLiquidityMining(overrides?: EthersTransactionOverrides): Promise<void> {\n    return this.send.exitLiquidityMining(overrides).then(waitForSuccess);\n  }\n}\n\n/**\n * Variant of {@link EthersLiquity} that exposes a {@link @liquity/lib-base#LiquityStore}.\n *\n * @public\n */\nexport interface EthersLiquityWithStore<T extends LiquityStore = LiquityStore>\n  extends EthersLiquity {\n  /** An object that implements LiquityStore. */\n  readonly store: T;\n}\n\nclass _EthersLiquityWithStore<T extends LiquityStore = LiquityStore>\n  extends EthersLiquity\n  implements EthersLiquityWithStore<T> {\n  readonly store: T;\n\n  constructor(readable: ReadableEthersLiquityWithStore<T>) {\n    super(readable);\n\n    this.store = readable.store;\n  }\n\n  hasStore(store?: EthersLiquityStoreOption): boolean {\n    return store === undefined || store === this.connection.useStore;\n  }\n}\n", "export {\n  _connectByChainId,\n  EthersLiquityConnection,\n  EthersLiquityConnectionOptionalParams,\n  EthersLiquityStoreOption,\n  UnsupportedNetworkError\n} from \"./src/EthersLiquityConnection\";\n\nexport * from \"./src/types\";\nexport * from \"./src/ReadableEthersLiquity\";\nexport * from \"./src/ObservableEthersLiquity\";\nexport * from \"./src/BlockPolledLiquityStore\";\nexport * from \"./src/PopulatableEthersLiquity\";\nexport * from \"./src/SendableEthersLiquity\";\nexport * from \"./src/EthersLiquity\";\n"],
  "mappings": "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",
  "names": ["_priceFeedIsTestnet", "_uniTokenIsMock", "BackendTroveStatus", "_RawErrorReason", "results", "latestRandomSeed", "borrowLUSD", "amount", "attemptedLUSDAmount", "maxRedemptionRate", "truncatedAmount", "partialHints"]
}
